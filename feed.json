{
    "version": "https://jsonfeed.org/version/1",
    "title": "幽化猫の博客",
    "subtitle": "生活朗朗，万物可爱",
    "icon": "https://love.youhuamao.xyz/images/favicon.ico",
    "description": "这是一个人的博客",
    "home_page_url": "https://love.youhuamao.xyz",
    "items": [
        {
            "id": "https://love.youhuamao.xyz/2022/10/25/Java/SSM/Mybatis/%E6%B3%A8%E8%A7%A3/",
            "url": "https://love.youhuamao.xyz/2022/10/25/Java/SSM/Mybatis/%E6%B3%A8%E8%A7%A3/",
            "title": "注解",
            "date_published": "2022-10-24T16:00:00.000Z",
            "content_html": "<pre><code>&lt;mappers&gt;\n</code></pre>\n<p>&lt;!--        &lt;mapper resource=&quot;com/kuang/dao/UserMapper.xml&quot;/&gt;--&gt;<br />\n&lt;mapper class=&quot;com.kuang.dao.UserMapper&quot;/&gt;<br />\n&lt;/mappers&gt;</p>\n<h1 id=\"面向接口编程\"><a class=\"anchor\" href=\"#面向接口编程\">#</a> 面向接口编程</h1>\n<ul>\n<li>之前学过面向对象编程，也学习过接口，但在真正的开发中，很多时候会选择面向接口编程</li>\n<li>** 根本原因: <mark>解耦</mark>，可拓展，提高复用，分层开发中，上层不用管具体的实现，大家都遵守共同的标准，使得开发变得容易，规范性更好</li>\n<li>在一个面向对象的系统中，系统的各种功能是由许许多多的不同对象协作完成的。在这种情况下，各个对象内部是如何实现自己的，对系统设计人员来讲就不那么重要了；</li>\n<li>而各个对象之间的协作关系则成为系统设计的关键。小到不同类之间的通信，大到各模块之间的交互，在系统设<br />\n计之初都是要着重考虑的，这也是系统设计的主要工作内容。面向接口编程就是指按照这种思想来编程。</li>\n</ul>\n<h1 id=\"关于接口的理解\"><a class=\"anchor\" href=\"#关于接口的理解\">#</a> 关于接口的理解</h1>\n<ul>\n<li>接口从更深层次的理解，应是定义 (规范，约束) 与实现 (名实分离的原则) 的分离。</li>\n<li>接口的本身反映了系统设计人员对系统的抽象理解。</li>\n<li>接口应有两类:</li>\n<li>第一类是对一个个体的抽象，它可对应为一个抽象体 (abstract class);</li>\n<li>第二类是对一个个体某 - 方面的抽象，即形成一个抽象面 (interface) ;</li>\n<li>一个体有可能有多个抽象面。抽象体与抽象面是有区别的。</li>\n</ul>\n<h1 id=\"三个面向区别\"><a class=\"anchor\" href=\"#三个面向区别\">#</a> 三个面向区别</h1>\n<ul>\n<li>面向对象是指，我们考虑问题时，以对象为单位，考虑它的属性及方法.</li>\n<li>面向过程是指，我们考虑问题时，以一个具体的流程 (事务过程) 为单位，考虑它的实现.</li>\n<li>接口设计与非接口设计是针对复用技术而言的，与面向对象 (过程) 不是一个问题更多的体现就是对系统整体的架构</li>\n</ul>\n<h1 id=\"使用注解开发\"><a class=\"anchor\" href=\"#使用注解开发\">#</a> 使用注解开发</h1>\n<ul>\n<li>注解在接口上实现</li>\n</ul>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>public interface UserMapper <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    @Select<span class=\"token punctuation\">(</span><span class=\"token string\">\"select * from user\"</span> <span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    List<span class=\"token operator\">&lt;</span>User<span class=\"token operator\">></span> getUsers<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre></pre></td></tr><tr><td data-num=\"6\"></td><td><pre></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><ul>\n<li>需要再核心配置文件中绑定接口！</li>\n</ul>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token operator\">&lt;</span>mappers<span class=\"token operator\">></span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>        <span class=\"token operator\">&lt;</span>mapper <span class=\"token assign-left variable\">class</span><span class=\"token operator\">=</span><span class=\"token string\">\"com.kuang.dao.UserMapper\"</span>/<span class=\"token operator\">></span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    <span class=\"token operator\">&lt;</span>/mappers<span class=\"token operator\">></span></pre></td></tr></table></figure><h1 id=\"crud\"><a class=\"anchor\" href=\"#crud\">#</a> CRUD</h1>\n<ul>\n<li>实现自动提交事务</li>\n</ul>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>public static SqlSession <span class=\"token function-name function\">getSqlSession</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>        <span class=\"token builtin class-name\">return</span> sqlSessionFactory.openSession<span class=\"token punctuation\">(</span>true<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> //设置为true 自动提交事务</pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><ul>\n<li>编写接口，增加注解</li>\n</ul>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>@Select<span class=\"token punctuation\">(</span><span class=\"token string\">\"select * from user\"</span> <span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>    List<span class=\"token operator\">&lt;</span>User<span class=\"token operator\">></span> getUsers<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    // 方法存在多个参数，所有的参数前面必须加上@Param<span class=\"token punctuation\">(</span><span class=\"token string\">\"\"</span><span class=\"token punctuation\">)</span>注解</pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    @Select<span class=\"token punctuation\">(</span><span class=\"token string\">\"select * from user where id = #&#123;id&#125; \"</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>    User getUserByID<span class=\"token punctuation\">(</span>@Param<span class=\"token punctuation\">(</span><span class=\"token string\">\"id\"</span><span class=\"token punctuation\">)</span> int <span class=\"token function\">id</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>    @Insert<span class=\"token punctuation\">(</span><span class=\"token string\">\"insert into user(id,name, pwd) values (#&#123;id&#125; , #&#123;name&#125; , #&#123;password&#125;)\"</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>    int addUser<span class=\"token punctuation\">(</span>User user<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>    @Update<span class=\"token punctuation\">(</span><span class=\"token string\">\"update user set name=#&#123; name&#125; , pwd=#&#123;password&#125; where id = #&#123;id&#125;\"</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>    int updateUser<span class=\"token punctuation\">(</span>User user<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>    @Delete<span class=\"token punctuation\">(</span><span class=\"token string\">\"delete from user where id = #&#123;uid&#125;\"</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>            int deleteUser<span class=\"token punctuation\">(</span>@Param<span class=\"token punctuation\">(</span><span class=\"token string\">\"uid\"</span><span class=\"token punctuation\">)</span> int <span class=\"token function\">id</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr></table></figure><ul>\n<li>测试</li>\n</ul>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>@Test</pre></td></tr><tr><td data-num=\"2\"></td><td><pre>    public void <span class=\"token function-name function\">test</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>        SqlSession sqlSession <span class=\"token operator\">=</span> MybatisUtils.getSqlSession<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>        UserMapper mapper <span class=\"token operator\">=</span> sqlSession.getMapper<span class=\"token punctuation\">(</span>UserMapper.class<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>        List<span class=\"token operator\">&lt;</span>User<span class=\"token operator\">></span> <span class=\"token function\">users</span> <span class=\"token operator\">=</span> mapper.getUsers<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>        <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span>User user <span class=\"token builtin class-name\">:</span> <span class=\"token function\">users</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>            System.out.println<span class=\"token punctuation\">(</span>user<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>        sqlSession.close<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>    @Test</pre></td></tr><tr><td data-num=\"13\"></td><td><pre>    public void <span class=\"token function-name function\">test1</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>        SqlSession sqlSession <span class=\"token operator\">=</span> MybatisUtils.getSqlSession<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>        UserMapper mapper <span class=\"token operator\">=</span> sqlSession.getMapper<span class=\"token punctuation\">(</span>UserMapper.class<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>        User UserById <span class=\"token operator\">=</span> mapper.getUserByID<span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>        System.out.println<span class=\"token punctuation\">(</span>UserById<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>        sqlSession.close<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>    @Test</pre></td></tr><tr><td data-num=\"24\"></td><td><pre>    public void <span class=\"token function-name function\">test2</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre>        SqlSession sqlSession <span class=\"token operator\">=</span> MybatisUtils.getSqlSession<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre>        UserMapper mapper <span class=\"token operator\">=</span> sqlSession.getMapper<span class=\"token punctuation\">(</span>UserMapper.class<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre></pre></td></tr><tr><td data-num=\"28\"></td><td><pre>        mapper.addUser<span class=\"token punctuation\">(</span>new User<span class=\"token punctuation\">(</span><span class=\"token number\">5</span>,<span class=\"token string\">\"hello\"</span>,<span class=\"token string\">\"123123\"</span><span class=\"token punctuation\">))</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"29\"></td><td><pre>        sqlSession.close<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"30\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"31\"></td><td><pre></pre></td></tr><tr><td data-num=\"32\"></td><td><pre>    @Test</pre></td></tr><tr><td data-num=\"33\"></td><td><pre>    public void <span class=\"token function-name function\">test3</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"34\"></td><td><pre>        SqlSession sqlSession <span class=\"token operator\">=</span> MybatisUtils.getSqlSession<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"35\"></td><td><pre>        UserMapper mapper <span class=\"token operator\">=</span> sqlSession.getMapper<span class=\"token punctuation\">(</span>UserMapper.class<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"36\"></td><td><pre></pre></td></tr><tr><td data-num=\"37\"></td><td><pre>        mapper.updateUser<span class=\"token punctuation\">(</span>new User<span class=\"token punctuation\">(</span><span class=\"token number\">5</span>,<span class=\"token string\">\"to\"</span>,<span class=\"token string\">\"213213\"</span><span class=\"token punctuation\">))</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"38\"></td><td><pre>        sqlSession.close<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"39\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"40\"></td><td><pre></pre></td></tr><tr><td data-num=\"41\"></td><td><pre>    @Test</pre></td></tr><tr><td data-num=\"42\"></td><td><pre>    public void <span class=\"token function-name function\">test5</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"43\"></td><td><pre>        SqlSession sqlSession <span class=\"token operator\">=</span> MybatisUtils.getSqlSession<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"44\"></td><td><pre>        UserMapper mapper <span class=\"token operator\">=</span> sqlSession.getMapper<span class=\"token punctuation\">(</span>UserMapper.class<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"45\"></td><td><pre></pre></td></tr><tr><td data-num=\"46\"></td><td><pre>        mapper.deleteUser<span class=\"token punctuation\">(</span><span class=\"token number\">5</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"47\"></td><td><pre>        sqlSession.close<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"48\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><h1 id=\"关于param注解\"><a class=\"anchor\" href=\"#关于param注解\">#</a> 关于 @Param () 注解</h1>\n<ul>\n<li>基本类型的参数或者 String 类型，需要加上</li>\n<li>引用类型不需要加</li>\n<li>如果只有一个基本类型的话，可以忽略，但是建议都加上！</li>\n<li>我们在 SQL 中引用的就是我们这里的 @Param () 中设定的属性名！</li>\n</ul>\n",
            "tags": [
                "学习Java",
                "SSM",
                "Mybatis",
                "java"
            ]
        },
        {
            "id": "https://love.youhuamao.xyz/2022/10/25/Java/SSM/Mybatis/Lombok/",
            "url": "https://love.youhuamao.xyz/2022/10/25/Java/SSM/Mybatis/Lombok/",
            "title": "Lombok",
            "date_published": "2022-10-24T16:00:00.000Z",
            "content_html": "<h1 id=\"介绍\"><a class=\"anchor\" href=\"#介绍\">#</a> 介绍</h1>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>Lombok是一款Java开发插件， 使得Java开发者可以通过其定义的一些注解来消除业务工程中冗长和繁琐的代码， 尤其对于简单的Java</pre></td></tr><tr><td data-num=\"2\"></td><td><pre>模型对象<span class=\"token punctuation\">(</span>POJO<span class=\"token punctuation\">)</span> 。在开发环境中使用Lombok插件后，Java开发人员可以节省出重复构建,诸如hashCode和equals这样的方法以及各</pre></td></tr><tr><td data-num=\"3\"></td><td><pre>种业务对象模型的accessor和ToString等方法的大量时间。对于这些方法，它能够在编译源代码期间自动帮我们生成这些方法，并没有如</pre></td></tr><tr><td data-num=\"4\"></td><td><pre>反射那样降低程序的性能。</pre></td></tr></table></figure><h1 id=\"使用步骤\"><a class=\"anchor\" href=\"#使用步骤\">#</a> 使用步骤</h1>\n<ul>\n<li>1 下载 Lombok 插件</li>\n<li>2 导入 jar 包（maven 导入）</li>\n<li>3</li>\n</ul>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>@Getter and @Setter</pre></td></tr><tr><td data-num=\"2\"></td><td><pre>@FieldNameConstants</pre></td></tr><tr><td data-num=\"3\"></td><td><pre>@ToString</pre></td></tr><tr><td data-num=\"4\"></td><td><pre>@EqualsAndHashCode</pre></td></tr><tr><td data-num=\"5\"></td><td><pre>@AllArgsConstructor, @RequiredArgsConstructor and @NoArgsConstructor</pre></td></tr><tr><td data-num=\"6\"></td><td><pre>@Log, @Log4j, @Log4j2, @Slf4j, @XSlf4j, @CommonsLog, @JBossLog, @Flogger, @CustomLog</pre></td></tr><tr><td data-num=\"7\"></td><td><pre>@Data</pre></td></tr><tr><td data-num=\"8\"></td><td><pre>@Builder</pre></td></tr><tr><td data-num=\"9\"></td><td><pre>@SuperBuilder</pre></td></tr><tr><td data-num=\"10\"></td><td><pre>@Singular</pre></td></tr><tr><td data-num=\"11\"></td><td><pre>@Delegate</pre></td></tr><tr><td data-num=\"12\"></td><td><pre>@Value</pre></td></tr><tr><td data-num=\"13\"></td><td><pre>@Accessors</pre></td></tr><tr><td data-num=\"14\"></td><td><pre>@Wither</pre></td></tr><tr><td data-num=\"15\"></td><td><pre>@With</pre></td></tr><tr><td data-num=\"16\"></td><td><pre>@SneakyThrows</pre></td></tr><tr><td data-num=\"17\"></td><td><pre>@StandardException</pre></td></tr><tr><td data-num=\"18\"></td><td><pre>@val</pre></td></tr><tr><td data-num=\"19\"></td><td><pre>@var</pre></td></tr><tr><td data-num=\"20\"></td><td><pre>experimental @var</pre></td></tr><tr><td data-num=\"21\"></td><td><pre>@UtilityClass</pre></td></tr></table></figure><ul>\n<li>说明</li>\n</ul>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>@data  //生成一些方法，构造器，setter，getter，toString，hashCode等方法</pre></td></tr><tr><td data-num=\"2\"></td><td><pre></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>@AllArgsConstructor  //生成带有所有参数的构造器</pre></td></tr><tr><td data-num=\"4\"></td><td><pre></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>@ToString  //生成toString方法</pre></td></tr><tr><td data-num=\"6\"></td><td><pre></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>@EqualsAndHashCode //生成EqualsAndHashCode方法</pre></td></tr><tr><td data-num=\"8\"></td><td><pre></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>@Getter and @Setter  //生成gettter喝setter ，加在类上生成所有成员的，加在成员上只生成该成员的</pre></td></tr></table></figure>",
            "tags": [
                "学习Java",
                "SSM",
                "Mybatis",
                "java"
            ]
        },
        {
            "id": "https://love.youhuamao.xyz/2022/10/25/Java/SSM/Mybatis/%E5%A4%9A%E5%AF%B9%E4%B8%80%E5%A4%84%E7%90%86/",
            "url": "https://love.youhuamao.xyz/2022/10/25/Java/SSM/Mybatis/%E5%A4%9A%E5%AF%B9%E4%B8%80%E5%A4%84%E7%90%86/",
            "title": "多对一处理",
            "date_published": "2022-10-24T16:00:00.000Z",
            "content_html": "<h1 id=\"多对一\"><a class=\"anchor\" href=\"#多对一\">#</a> 多对一</h1>\n<ul>\n<li>多个学生，对应一个老师</li>\n<li>对于学生这边而言，关联.. 多个学生，关联 - 一个老师 [多对一]</li>\n<li>对于老师而言，集合，一个老师，有很多学生 [一对多]</li>\n<li>SQL</li>\n</ul>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>CREATE TABLE <span class=\"token variable\"><span class=\"token variable\">`</span>teacher<span class=\"token variable\">`</span></span><span class=\"token punctuation\">(</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>    <span class=\"token variable\"><span class=\"token variable\">`</span><span class=\"token function\">id</span><span class=\"token variable\">`</span></span> INT NOT NULL PRIMARY KEY,</pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    <span class=\"token variable\"><span class=\"token variable\">`</span>name<span class=\"token variable\">`</span></span> VARCHAR<span class=\"token punctuation\">(</span><span class=\"token number\">30</span><span class=\"token punctuation\">)</span> DEFAULT NULL</pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token punctuation\">)</span>ENGINE <span class=\"token operator\">=</span> INNODB DEFAULT <span class=\"token assign-left variable\">CHARSET</span><span class=\"token operator\">=</span>utf8<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>INSERT INTO teacher VALUES<span class=\"token punctuation\">(</span><span class=\"token number\">1</span>,<span class=\"token string\">'秦老师'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>CREATE TABLE <span class=\"token variable\"><span class=\"token variable\">`</span>student<span class=\"token variable\">`</span></span><span class=\"token punctuation\">(</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>    <span class=\"token variable\"><span class=\"token variable\">`</span><span class=\"token function\">id</span><span class=\"token variable\">`</span></span> INT NOT NULL PRIMARY KEY,</pre></td></tr><tr><td data-num=\"10\"></td><td><pre>    <span class=\"token variable\"><span class=\"token variable\">`</span>name<span class=\"token variable\">`</span></span> VARCHAR<span class=\"token punctuation\">(</span><span class=\"token number\">30</span><span class=\"token punctuation\">)</span> DEFAULT NULL,</pre></td></tr><tr><td data-num=\"11\"></td><td><pre>    <span class=\"token variable\"><span class=\"token variable\">`</span>tid<span class=\"token variable\">`</span></span> INT<span class=\"token punctuation\">(</span><span class=\"token number\">10</span><span class=\"token punctuation\">)</span> DEFAULT NULL,</pre></td></tr><tr><td data-num=\"12\"></td><td><pre>    CONSTRAINT <span class=\"token variable\"><span class=\"token variable\">`</span>fktid<span class=\"token variable\">`</span></span> FOREIGN KEY <span class=\"token punctuation\">(</span><span class=\"token variable\"><span class=\"token variable\">`</span>tid<span class=\"token variable\">`</span></span><span class=\"token punctuation\">)</span> REFERENCES <span class=\"token variable\"><span class=\"token variable\">`</span>teacher<span class=\"token variable\">`</span></span><span class=\"token punctuation\">(</span>id<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre><span class=\"token punctuation\">)</span>ENGINE <span class=\"token operator\">=</span> INNODB DEFAULT <span class=\"token assign-left variable\">CHARSET</span><span class=\"token operator\">=</span>utf8<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>INSERT INTO student VALUES <span class=\"token punctuation\">(</span><span class=\"token number\">1</span>,<span class=\"token string\">'小明'</span>,1<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>INSERT INTO student VALUES <span class=\"token punctuation\">(</span><span class=\"token number\">2</span>,<span class=\"token string\">'小红'</span>,1<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>INSERT INTO student VALUES <span class=\"token punctuation\">(</span><span class=\"token number\">3</span>,<span class=\"token string\">'小张'</span>,1<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>INSERT INTO student VALUES <span class=\"token punctuation\">(</span><span class=\"token number\">4</span>,<span class=\"token string\">'小李'</span>,1<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>INSERT INTO student VALUES <span class=\"token punctuation\">(</span><span class=\"token number\">5</span>,<span class=\"token string\">'小王'</span>,1<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr></table></figure><h1 id=\"测试环境处理\"><a class=\"anchor\" href=\"#测试环境处理\">#</a> 测试环境处理</h1>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token number\">1</span>.导入lombok</pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token number\">2</span>.新建实体类Teacher, Student</pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token number\">3</span>.建立Mapper接口</pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token number\">4</span>.建立Mapper.XML文件</pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token number\">5</span>.在核心配置文件中绑定注册我们的Mapper接口或者文件<span class=\"token operator\">!</span> <span class=\"token punctuation\">[</span>方式很多 随心选<span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token number\">6</span>.测试查询是否能够成功<span class=\"token operator\">!</span></pre></td></tr></table></figure>",
            "tags": [
                "学习Java",
                "SSM",
                "Mybatis",
                "java"
            ]
        },
        {
            "id": "https://love.youhuamao.xyz/2022/10/23/Java/SSM/Mybatis/%E6%97%A5%E5%BF%97/",
            "url": "https://love.youhuamao.xyz/2022/10/23/Java/SSM/Mybatis/%E6%97%A5%E5%BF%97/",
            "title": "日志",
            "date_published": "2022-10-22T16:00:00.000Z",
            "content_html": "<h1 id=\"日志工厂\"><a class=\"anchor\" href=\"#日志工厂\">#</a> 日志工厂</h1>\n<ul>\n<li>如果一个数据库操作，出现了异常，我们需要排错。日志就是最好的助手！<br />\n 曾经: sout. debug<br />\n 现在：日志工厂！</li>\n</ul>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>SLF4J</pre></td></tr><tr><td data-num=\"2\"></td><td><pre>LOG4J <span class=\"token punctuation\">[</span>掌握<span class=\"token punctuation\">]</span><span class=\"token operator\">|</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>LOG4J2</pre></td></tr><tr><td data-num=\"4\"></td><td><pre>I</pre></td></tr><tr><td data-num=\"5\"></td><td><pre>jJDK_ _LOGGING</pre></td></tr><tr><td data-num=\"6\"></td><td><pre>COMMONS_ _LOGGING</pre></td></tr><tr><td data-num=\"7\"></td><td><pre>STDOUT_ LOGGING <span class=\"token punctuation\">[</span>掌握<span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>NO_ LOGGING</pre></td></tr></table></figure><ul>\n<li>在 Mybatis 中具体使用那个一日志实现，在设置中设定！STDOUT_ LOGGING 标准日志输出 在 mybatis 核心配置文件中，配置我们的日志！</li>\n</ul>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token operator\">&lt;</span>settings<span class=\"token operator\">></span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>        <span class=\"token operator\">&lt;</span>setting <span class=\"token assign-left variable\">name</span><span class=\"token operator\">=</span><span class=\"token string\">\"logImpl\"</span> <span class=\"token assign-left variable\">value</span><span class=\"token operator\">=</span><span class=\"token string\">\"STDOUT_LOGGING\"</span>/<span class=\"token operator\">></span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    <span class=\"token operator\">&lt;</span>/settings<span class=\"token operator\">></span></pre></td></tr></table></figure><h1 id=\"log4j\"><a class=\"anchor\" href=\"#log4j\">#</a> LOG4J</h1>\n<ul>\n<li>什么是 log4j</li>\n</ul>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>Log4j是Apache的一-个开源项目，通过使用Log4j,我们可以控制日志信息输送的目的地是控制台、文件、GUI组件</pre></td></tr><tr><td data-num=\"2\"></td><td><pre>我们也可以控制每一条日志的输出格式<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>通过定义每一条日志信息的级别，我们能够更加细致地控制日志的生成过程。</pre></td></tr><tr><td data-num=\"4\"></td><td><pre>通过一个配置文件来灵活地进行配置，而不需要修改应用的代码。</pre></td></tr></table></figure><ul>\n<li>导入 log4j 的包</li>\n</ul>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token operator\">&lt;</span><span class=\"token operator\">!</span>--log4j--<span class=\"token operator\">></span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>        <span class=\"token operator\">&lt;</span>dependency<span class=\"token operator\">></span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>            <span class=\"token operator\">&lt;</span>groupId<span class=\"token operator\">></span>log4j<span class=\"token operator\">&lt;</span>/groupId<span class=\"token operator\">></span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>            <span class=\"token operator\">&lt;</span>artifactId<span class=\"token operator\">></span>log4j<span class=\"token operator\">&lt;</span>/artifactId<span class=\"token operator\">></span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>            <span class=\"token operator\">&lt;</span>version<span class=\"token operator\">></span><span class=\"token number\">1.2</span>.1<span class=\"token operator\"><span class=\"token file-descriptor important\">7</span>&lt;</span>/version<span class=\"token operator\">></span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>        <span class=\"token operator\">&lt;</span>/dependency<span class=\"token operator\">></span></pre></td></tr></table></figure><ul>\n<li>log4j.properties</li>\n</ul>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\">#将等级为 DEBUG 的日志信息输出到 console 和 file 这两个目的地，console 和 file 的定义在下面的代码</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token assign-left variable\">log4j.rootLogger</span><span class=\"token operator\">=</span>DEBUG,console,file</pre></td></tr><tr><td data-num=\"3\"></td><td><pre></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token comment\">#控制台输出的相关设置</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>log4j.appender.console <span class=\"token operator\">=</span> org.apache.log4j.ConsoleAppender</pre></td></tr><tr><td data-num=\"6\"></td><td><pre>log4j.appender.console.Target <span class=\"token operator\">=</span> System.out</pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token assign-left variable\">log4j.appender.console.Threshold</span><span class=\"token operator\">=</span>DEBUG</pre></td></tr><tr><td data-num=\"8\"></td><td><pre>log4j.appender.console.layout <span class=\"token operator\">=</span> org.apache.log4j.PatternLayout</pre></td></tr><tr><td data-num=\"9\"></td><td><pre><span class=\"token assign-left variable\">log4j.appender.console.layout.ConversionPattern</span><span class=\"token operator\">=</span><span class=\"token punctuation\">[</span>%c<span class=\"token punctuation\">]</span>-%m%n</pre></td></tr><tr><td data-num=\"10\"></td><td><pre></pre></td></tr><tr><td data-num=\"11\"></td><td><pre><span class=\"token comment\">#文件输出的相关设置</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>log4j.appender.file <span class=\"token operator\">=</span> org.apache.log4j.RollingFileAppender</pre></td></tr><tr><td data-num=\"13\"></td><td><pre><span class=\"token assign-left variable\">log4j.appender.file.File</span><span class=\"token operator\">=</span>./log/kuang.log //文件输出位置</pre></td></tr><tr><td data-num=\"14\"></td><td><pre><span class=\"token assign-left variable\">log4j.appender.file.MaxFileSize</span><span class=\"token operator\">=</span>10mb</pre></td></tr><tr><td data-num=\"15\"></td><td><pre><span class=\"token assign-left variable\">log4j.appender.file.Threshold</span><span class=\"token operator\">=</span>DEBUG</pre></td></tr><tr><td data-num=\"16\"></td><td><pre><span class=\"token assign-left variable\">log4j.appender.file.layout</span><span class=\"token operator\">=</span>org.apache.log4j.PatternLayout</pre></td></tr><tr><td data-num=\"17\"></td><td><pre><span class=\"token assign-left variable\">log4j.appender.file.layout.ConversionPattern</span><span class=\"token operator\">=</span><span class=\"token punctuation\">[</span>%p<span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span>%d<span class=\"token punctuation\">&#123;</span>yy-MM-dd<span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span>%c<span class=\"token punctuation\">]</span>%m%n</pre></td></tr><tr><td data-num=\"18\"></td><td><pre></pre></td></tr><tr><td data-num=\"19\"></td><td><pre><span class=\"token comment\">#日志输出级别</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre><span class=\"token assign-left variable\">log4j.logger.org.mybatis</span><span class=\"token operator\">=</span>DEBUG</pre></td></tr><tr><td data-num=\"21\"></td><td><pre><span class=\"token assign-left variable\">log4j.logger.java.sql</span><span class=\"token operator\">=</span>DEBUG</pre></td></tr><tr><td data-num=\"22\"></td><td><pre><span class=\"token assign-left variable\">log4j.logger.java.sql.Statement</span><span class=\"token operator\">=</span>DEBUG</pre></td></tr><tr><td data-num=\"23\"></td><td><pre><span class=\"token assign-left variable\">log4j.logger.java.sql.ResultSet</span><span class=\"token operator\">=</span>DEBUG</pre></td></tr><tr><td data-num=\"24\"></td><td><pre><span class=\"token assign-left variable\">log4j.logger.java.sql.PreparedStatement</span><span class=\"token operator\">=</span>DEBUG</pre></td></tr></table></figure><ul>\n<li>配置 log4j 日志实现</li>\n</ul>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token operator\">&lt;</span>settings<span class=\"token operator\">></span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token operator\">&lt;</span><span class=\"token operator\">!</span>--        <span class=\"token operator\">&lt;</span>setting <span class=\"token assign-left variable\">name</span><span class=\"token operator\">=</span><span class=\"token string\">\"logImpl\"</span> <span class=\"token assign-left variable\">value</span><span class=\"token operator\">=</span><span class=\"token string\">\"STDOUT_LOGGING\"</span>/<span class=\"token operator\">></span>--<span class=\"token operator\">></span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>        <span class=\"token operator\">&lt;</span>setting <span class=\"token assign-left variable\">name</span><span class=\"token operator\">=</span><span class=\"token string\">\"logImpl\"</span> <span class=\"token assign-left variable\">value</span><span class=\"token operator\">=</span><span class=\"token string\">\"LOG4J\"</span>/<span class=\"token operator\">></span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    <span class=\"token operator\">&lt;</span>/settings<span class=\"token operator\">></span></pre></td></tr></table></figure><ul>\n<li>使用</li>\n</ul>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>在要使用Log4j的类中，导入包import org.apache.log4j.Logger<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>日志对象,参数为当前类的class</pre></td></tr><tr><td data-num=\"4\"></td><td><pre>static Logger logger <span class=\"token operator\">=</span> Logger. getLogger<span class=\"token punctuation\">(</span>UserDaoTest.class<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>日志级别</pre></td></tr><tr><td data-num=\"7\"></td><td><pre>    @Test</pre></td></tr><tr><td data-num=\"8\"></td><td><pre>    public void <span class=\"token function-name function\">testLog4j</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>        logger.info<span class=\"token punctuation\">(</span><span class=\"token string\">\"info\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>        logger.debug<span class=\"token punctuation\">(</span><span class=\"token string\">\"debug\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>        logger.error<span class=\"token punctuation\">(</span><span class=\"token string\">\"error\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure>",
            "tags": [
                "学习Java",
                "SSM",
                "Mybatis",
                "java"
            ]
        },
        {
            "id": "https://love.youhuamao.xyz/2022/10/23/Java/SSM/Mybatis/%E9%85%8D%E7%BD%AE%E8%A7%A3%E6%9E%90/",
            "url": "https://love.youhuamao.xyz/2022/10/23/Java/SSM/Mybatis/%E9%85%8D%E7%BD%AE%E8%A7%A3%E6%9E%90/",
            "title": "配置解析",
            "date_published": "2022-10-22T16:00:00.000Z",
            "content_html": "<h1 id=\"核心配置文件\"><a class=\"anchor\" href=\"#核心配置文件\">#</a> 核心配置文件</h1>\n<ul>\n<li>mybatis-config.xml</li>\n<li>MyBatis 的配置文件包含了会深深影响 MyBatis 行为的设置和属性信息。</li>\n</ul>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>configuration <span class=\"token punctuation\">(</span>配置<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>properties <span class=\"token punctuation\">(</span>属性<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>settings <span class=\"token punctuation\">(</span>设置<span class=\"token punctuation\">)</span> </pre></td></tr><tr><td data-num=\"4\"></td><td><pre>typeAliases <span class=\"token punctuation\">(</span>类型别名<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>typeHandlers <span class=\"token punctuation\">(</span>类型处理器<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>objectFactory <span class=\"token punctuation\">(</span>对象工厂<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>plugins <span class=\"token punctuation\">(</span>插件<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>envi ronments <span class=\"token punctuation\">(</span> 环境配置<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>envi ronment <span class=\"token punctuation\">(</span>环境变量<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>transacti onManager <span class=\"token punctuation\">(</span>事务管理器<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>datasource <span class=\"token punctuation\">(</span>数据源<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>databaseIdProvider <span class=\"token punctuation\">(</span>数据库厂商标识<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>mappers <span class=\"token punctuation\">(</span>映射器<span class=\"token punctuation\">)</span></pre></td></tr></table></figure><h1 id=\"环境配置environments\"><a class=\"anchor\" href=\"#环境配置environments\">#</a> 环境配置（environments）</h1>\n<ul>\n<li>MyBatis 可以配置成适应多种环境</li>\n<li>不过要记住：尽管可以配置多个环境，但每个 SqlSessionFactory 实例只能选择一种环境。</li>\n<li>事务管理器（transactionManager）在 MyBatis 中有两种类型的事务管理器（也就是 type=&quot;[JDBC|MANAGED]&quot;）</li>\n<li>数据源（dataSource） 有三种内建的数据源类型（也就是 type=&quot;[UNPOOLED|POOLED|JNDI]&quot;）</li>\n</ul>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token operator\">&lt;</span>environments <span class=\"token assign-left variable\">default</span><span class=\"token operator\">=</span><span class=\"token string\">\"development\"</span><span class=\"token operator\">></span> //default<span class=\"token operator\">=</span><span class=\"token string\">\"使用的连接池\"</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>  <span class=\"token operator\">&lt;</span>environment <span class=\"token assign-left variable\">id</span><span class=\"token operator\">=</span><span class=\"token string\">\"development\"</span><span class=\"token operator\">></span>    //一套环境</pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    <span class=\"token operator\">&lt;</span>transactionManager <span class=\"token assign-left variable\">type</span><span class=\"token operator\">=</span><span class=\"token string\">\"JDBC\"</span>/<span class=\"token operator\">></span> //事务管理器</pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    <span class=\"token operator\">&lt;</span>/transactionManager<span class=\"token operator\">></span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    <span class=\"token operator\">&lt;</span>dataSource <span class=\"token assign-left variable\">type</span><span class=\"token operator\">=</span><span class=\"token string\">\"POOLED\"</span><span class=\"token operator\">></span>  //连接池</pre></td></tr><tr><td data-num=\"6\"></td><td><pre>      <span class=\"token operator\">&lt;</span>property <span class=\"token assign-left variable\">name</span><span class=\"token operator\">=</span><span class=\"token string\">\"driver\"</span> <span class=\"token assign-left variable\">value</span><span class=\"token operator\">=</span><span class=\"token string\">\"<span class=\"token variable\">$&#123;driver&#125;</span>\"</span>/<span class=\"token operator\">></span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>      <span class=\"token operator\">&lt;</span>property <span class=\"token assign-left variable\">name</span><span class=\"token operator\">=</span><span class=\"token string\">\"url\"</span> <span class=\"token assign-left variable\">value</span><span class=\"token operator\">=</span><span class=\"token string\">\"<span class=\"token variable\">$&#123;url&#125;</span>\"</span>/<span class=\"token operator\">></span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>      <span class=\"token operator\">&lt;</span>property <span class=\"token assign-left variable\">name</span><span class=\"token operator\">=</span><span class=\"token string\">\"username\"</span> <span class=\"token assign-left variable\">value</span><span class=\"token operator\">=</span><span class=\"token string\">\"<span class=\"token variable\">$&#123;username&#125;</span>\"</span>/<span class=\"token operator\">></span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>      <span class=\"token operator\">&lt;</span>property <span class=\"token assign-left variable\">name</span><span class=\"token operator\">=</span><span class=\"token string\">\"password\"</span> <span class=\"token assign-left variable\">value</span><span class=\"token operator\">=</span><span class=\"token string\">\"<span class=\"token variable\">$&#123;password&#125;</span>\"</span>/<span class=\"token operator\">></span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>    <span class=\"token operator\">&lt;</span>/dataSource<span class=\"token operator\">></span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>  <span class=\"token operator\">&lt;</span>/environment<span class=\"token operator\">></span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre><span class=\"token operator\">&lt;</span>/environments<span class=\"token operator\">></span></pre></td></tr></table></figure><h1 id=\"属性\"><a class=\"anchor\" href=\"#属性\">#</a> 属性</h1>\n<ul>\n<li>在 xml 中，所有标签都是有顺序的，读取配置文件需要放在前边</li>\n<li>编写一个配置文件</li>\n</ul>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token assign-left variable\">driver</span><span class=\"token operator\">=</span>com.mysql.jdbc.Driver</pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token assign-left variable\">url</span><span class=\"token operator\">=</span>jdbc:mysql://localhost:3306/mybatis?useSSL<span class=\"token operator\">=</span>false<span class=\"token operator\">&amp;</span>amp<span class=\"token punctuation\">;</span><span class=\"token assign-left variable\">useUnicode</span><span class=\"token operator\">=</span>true<span class=\"token operator\">&amp;</span>amp<span class=\"token punctuation\">;</span><span class=\"token assign-left variable\">characterEncoding</span><span class=\"token operator\">=</span>UTF-8</pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token assign-left variable\">username</span><span class=\"token operator\">=</span>root</pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token assign-left variable\">password</span><span class=\"token operator\">=</span>g123698745</pre></td></tr></table></figure><ul>\n<li>在核心配置文件中映入</li>\n</ul>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token operator\">&lt;</span>properties <span class=\"token assign-left variable\">resource</span><span class=\"token operator\">=</span><span class=\"token string\">\"db.properties\"</span>/<span class=\"token operator\">></span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>    <span class=\"token operator\">&lt;</span>property <span class=\"token assign-left variable\">name</span><span class=\"token operator\">=</span><span class=\"token string\">\"username\"</span> <span class=\"token assign-left variable\">value</span><span class=\"token operator\">=</span><span class=\"token string\">\"root\"</span>/<span class=\"token operator\">></span> //可以直接配置属性，但是外部配置文件会覆盖同名内容</pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    <span class=\"token operator\">&lt;</span>property <span class=\"token assign-left variable\">name</span><span class=\"token operator\">=</span><span class=\"token string\">\"pwd\"</span> <span class=\"token assign-left variable\">value</span><span class=\"token operator\">=</span><span class=\"token string\">\"11111\"</span>/<span class=\"token operator\">></span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token operator\">&lt;</span>properties<span class=\"token operator\">></span></pre></td></tr></table></figure><ul>\n<li>可以直接引入外部文件</li>\n<li>可以增加其中一些属性的配置</li>\n<li>如果两个文件有同一个字段，优先使用外部配置文件的！</li>\n</ul>\n<h1 id=\"类型别名\"><a class=\"anchor\" href=\"#类型别名\">#</a> 类型别名</h1>\n<ul>\n<li>类型别名是为 Java 类型设置一个短的名字。</li>\n<li>存在的意义仅在于用来减少类完全限定名的冗余。</li>\n</ul>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token operator\">&lt;</span><span class=\"token operator\">!</span>--可以给实体类起别名--<span class=\"token operator\">></span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token operator\">&lt;</span>typeAliases<span class=\"token operator\">></span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token operator\">&lt;</span>typeAlias <span class=\"token assign-left variable\">type</span><span class=\"token operator\">=</span><span class=\"token string\">\"com.kuang.pojo.User\"</span> <span class=\"token assign-left variable\">alias</span><span class=\"token operator\">=</span><span class=\"token string\">\"user\"</span>/<span class=\"token operator\">></span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token operator\">&lt;</span>/typeAliases<span class=\"token operator\">></span></pre></td></tr></table></figure><ul>\n<li>也可以指定一个包名，MyBatis 会在包名下面搜索需要的 Java Bean, 比如：归描实体类的包，它的默认别名就为这个类的类名，首字母小写！</li>\n</ul>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token operator\">&lt;</span><span class=\"token operator\">!</span>--可以给实体类起别名--<span class=\"token operator\">></span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token operator\">&lt;</span>typeAliases<span class=\"token operator\">></span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token operator\">&lt;</span>package <span class=\"token assign-left variable\">name</span><span class=\"token operator\">=</span><span class=\"token string\">\"com.kuang.pojo\"</span>/<span class=\"token operator\">></span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token operator\">&lt;</span>/typeAliases<span class=\"token operator\">></span></pre></td></tr></table></figure><ul>\n<li>在实体类比较少的时候，使用第一种方式。 如果实体类十分多，建议使用第二种。</li>\n<li>第一种可以 DIY 别名，第二种则。不行，如果非要改，需要在实体。上增加注解</li>\n</ul>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>@A1ias <span class=\"token punctuation\">(</span><span class=\"token string\">\"user\"</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>pub1ic class User <span class=\"token punctuation\">&#123;</span><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><h1 id=\"设置\"><a class=\"anchor\" href=\"#设置\">#</a> 设置</h1>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>设置名 \t            描述 \t                                                有效值 \t        默认值</pre></td></tr><tr><td data-num=\"2\"></td><td><pre>cacheEnabled \t    全局性地开启或关闭所有映射器配置文件中已配置的任何缓存。 \t<span class=\"token boolean\">true</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">false</span> \t<span class=\"token boolean\">true</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>lazyLoadingEnabled \t延迟加载的全局开关。当开启时，所有关联对象都会延迟加载。 </pre></td></tr><tr><td data-num=\"4\"></td><td><pre>                    特定关联关系中可通过设置 fetchType 属性来覆盖该项的开</pre></td></tr><tr><td data-num=\"5\"></td><td><pre>                    关状态。 \t                                            <span class=\"token boolean\">true</span> <span class=\"token operator\">|</span> <span class=\"token boolean\">false</span> \t<span class=\"token boolean\">false</span> </pre></td></tr><tr><td data-num=\"6\"></td><td><pre>logImpl \t        指定 MyBatis 所用日志的具体实现，未指定时将自动查找。 \t    SLF4J <span class=\"token operator\">|</span> LOG4J（3.5.9 起废弃） </pre></td></tr><tr><td data-num=\"7\"></td><td><pre>                                                                            <span class=\"token operator\">|</span> LOG4J2 <span class=\"token operator\">|</span> JDK_LOGGING <span class=\"token operator\">|</span> COMMONS_LOGGING <span class=\"token operator\">|</span> STDOUT_LOGGING <span class=\"token operator\">|</span> NO_LOGGING \t    未设置</pre></td></tr></table></figure><h1 id=\"映射器mappers\"><a class=\"anchor\" href=\"#映射器mappers\">#</a> 映射器（mappers）</h1>\n<p>MapperRegistry: 注册绑定我们的 Mapper 文件；</p>\n<ul>\n<li>方式一</li>\n</ul>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token operator\">&lt;</span>mappers<span class=\"token operator\">></span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>        <span class=\"token operator\">&lt;</span>mapper <span class=\"token assign-left variable\">resource</span><span class=\"token operator\">=</span><span class=\"token string\">\"com/kuang/dao/UserMapper.xml\"</span>/<span class=\"token operator\">></span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    <span class=\"token operator\">&lt;</span>/mappers<span class=\"token operator\">></span></pre></td></tr></table></figure><ul>\n<li>方式二；使用 class 文件绑定注册</li>\n</ul>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token operator\">&lt;</span>mappers<span class=\"token operator\">></span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>        <span class=\"token operator\">&lt;</span>mapper <span class=\"token assign-left variable\">class</span><span class=\"token operator\">=</span><span class=\"token string\">\"com.kuang.dao.UserMapper\"</span>/<span class=\"token operator\">></span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    <span class=\"token operator\">&lt;</span>/mappers<span class=\"token operator\">></span></pre></td></tr></table></figure><ol>\n<li>接口和他的 Mapper 配置文件必须同名！</li>\n<li>接口和他的 Mapper 配置文件必须在同一个包下！</li>\n</ol>\n<ul>\n<li>方式三</li>\n</ul>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token operator\">&lt;</span>mappers<span class=\"token operator\">></span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>        <span class=\"token operator\">&lt;</span>mapper <span class=\"token assign-left variable\">name</span><span class=\"token operator\">=</span><span class=\"token string\">\"com.kuang.dao.UserMapper\"</span>/<span class=\"token operator\">></span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    <span class=\"token operator\">&lt;</span>/mappers<span class=\"token operator\">></span></pre></td></tr></table></figure><ol>\n<li>接口和他的 Mapper 配置文件必须同名！</li>\n<li>接口和他的 Mapper 配置文件必须在同一个包下！</li>\n</ol>\n<h1 id=\"生命周期和作用域\"><a class=\"anchor\" href=\"#生命周期和作用域\">#</a> 生命周期和作用域</h1>\n<ul>\n<li>作用域和生命周期类别是至关重要的，因为错误的使用会导致非常严重的并发问题。</li>\n</ul>\n<p>![img]/pic/java/shengmingzhouqi.png</p>\n<ul>\n<li>SqISessionFactoryBuilder:</li>\n</ul>\n<ol>\n<li>一旦创建了 SqlSessionFactory, 就不再需要它了</li>\n<li>局部变量</li>\n</ol>\n<ul>\n<li>SqlSessionFactory:</li>\n</ul>\n<ol>\n<li>说白了就是可以想象为：数据库连接池</li>\n<li>SqlSessionFactory - - 旦被创建就应该在应用的运行期间一直存在，没有任何理由丢弃它或重新创建另一个实例。</li>\n<li>因此 SqlSessionFactory 的最佳作用域是应用作用域。</li>\n<li>最简单的就是使用单例模式或者静态单例模式。</li>\n</ol>\n<ul>\n<li>SqISession</li>\n</ul>\n<ol>\n<li>连接到连接池的一个请求！</li>\n<li>SqlSession 的实例不是线程安全的，因此是不能被共享的，所以它的最佳的作用域是请求或方法作用域。</li>\n<li>用完之后需要赶紧关闭，否则资源被占用！</li>\n</ol>\n<p>![img]/pic/java/map.png</p>\n<h1 id=\"解决属性名和字段名不一致的问题\"><a class=\"anchor\" href=\"#解决属性名和字段名不一致的问题\">#</a> 解决属性名和字段名不一致的问题</h1>\n<ul>\n<li>问题</li>\n</ul>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>public class User <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>    private int <span class=\"token function\">id</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    private String name<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    private String password<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token keyword\">select</span> * from mybatis.user where <span class=\"token function\">id</span> <span class=\"token operator\">=</span> <span class=\"token comment\">#&#123;id&#125;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>//类型处理器</pre></td></tr><tr><td data-num=\"9\"></td><td><pre><span class=\"token keyword\">select</span> id,name,pwd from mybatis.user where <span class=\"token function\">id</span> <span class=\"token operator\">=</span> <span class=\"token comment\">#&#123;id&#125;</span></pre></td></tr></table></figure><ul>\n<li>解决办法</li>\n</ul>\n<ol>\n<li>起别名</li>\n</ol>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token operator\">&lt;</span>select i <span class=\"token assign-left variable\">d</span><span class=\"token operator\">=</span><span class=\"token string\">\"getuserById\"</span> <span class=\"token assign-left variable\">resultType</span><span class=\"token operator\">=</span><span class=\"token string\">\"com. kuang. pojo.User\"</span><span class=\"token operator\">></span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">select</span> id,name,pwd as password from mybatis.user where <span class=\"token function\">id</span> <span class=\"token operator\">=</span> <span class=\"token comment\">#&#123;id&#125;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token operator\">&lt;</span>/se1ect<span class=\"token operator\">></span></pre></td></tr></table></figure><ol start=\"2\">\n<li>修改映射</li>\n</ol>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\"># 结果集映射</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>    <span class=\"token operator\">&lt;</span>resultMap <span class=\"token assign-left variable\">id</span><span class=\"token operator\">=</span><span class=\"token string\">\"UserMap\"</span> <span class=\"token assign-left variable\">type</span><span class=\"token operator\">=</span><span class=\"token string\">\"com.kuang.pojo.User\"</span><span class=\"token operator\">></span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>        <span class=\"token operator\">&lt;</span>result <span class=\"token assign-left variable\">column</span><span class=\"token operator\">=</span><span class=\"token string\">\"id\"</span> <span class=\"token assign-left variable\">property</span><span class=\"token operator\">=</span><span class=\"token string\">\"id\"</span>/<span class=\"token operator\">></span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>        <span class=\"token operator\">&lt;</span>result <span class=\"token assign-left variable\">column</span><span class=\"token operator\">=</span><span class=\"token string\">\"name\"</span> <span class=\"token assign-left variable\">property</span><span class=\"token operator\">=</span><span class=\"token string\">\"name\"</span>/<span class=\"token operator\">></span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>        <span class=\"token operator\">&lt;</span>result <span class=\"token assign-left variable\">column</span><span class=\"token operator\">=</span><span class=\"token string\">\"pwd\"</span> <span class=\"token assign-left variable\">property</span><span class=\"token operator\">=</span><span class=\"token string\">\"password\"</span>/<span class=\"token operator\">></span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>    <span class=\"token operator\">&lt;</span>/resultMap<span class=\"token operator\">></span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>    <span class=\"token operator\">&lt;</span>select <span class=\"token assign-left variable\">id</span><span class=\"token operator\">=</span><span class=\"token string\">\"getUserById\"</span> <span class=\"token assign-left variable\">resultMap</span><span class=\"token operator\">=</span><span class=\"token string\">\"UserMap\"</span><span class=\"token operator\">></span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>        <span class=\"token keyword\">select</span> * from mybatis.user where <span class=\"token function\">id</span> <span class=\"token operator\">=</span> <span class=\"token comment\">#&#123;id&#125;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>    <span class=\"token operator\">&lt;</span>/select<span class=\"token operator\">></span></pre></td></tr></table></figure><ul>\n<li>resu1tMap 元素是 MyBatis 中最重要最强大的元素</li>\n<li>ResultMap 的设计思想是，对于简单的语句根本不需要配置显式的结果映射，而对于复杂一点的语句<br />\n只需要描述它们的关系就行了。</li>\n</ul>\n",
            "tags": [
                "学习Java",
                "SSM",
                "Mybatis",
                "java"
            ]
        },
        {
            "id": "https://love.youhuamao.xyz/2022/10/23/Java/SSM/Mybatis/%E5%88%86%E9%A1%B5/",
            "url": "https://love.youhuamao.xyz/2022/10/23/Java/SSM/Mybatis/%E5%88%86%E9%A1%B5/",
            "title": "日志",
            "date_published": "2022-10-22T16:00:00.000Z",
            "content_html": "<h1 id=\"为什么要分页\"><a class=\"anchor\" href=\"#为什么要分页\">#</a> 为什么要分页</h1>\n<ul>\n<li>减少数据的处理量</li>\n</ul>\n<h1 id=\"使用limit分页\"><a class=\"anchor\" href=\"#使用limit分页\">#</a> 使用 Limit 分页</h1>\n<ul>\n<li>语法: SELECT * from user limit startIndex, pagesize;</li>\n<li>SELECT * from user limit 3; #[0,n]</li>\n</ul>\n<h1 id=\"使用mybatis实现分页核心sql\"><a class=\"anchor\" href=\"#使用mybatis实现分页核心sql\">#</a> 使用 Mybatis 实现分页，核心 SQL</h1>\n<ul>\n<li>接口</li>\n</ul>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>//分页</pre></td></tr><tr><td data-num=\"2\"></td><td><pre>List<span class=\"token operator\">&lt;</span>User<span class=\"token operator\">></span> getuserByLimi t<span class=\"token punctuation\">(</span>Map<span class=\"token operator\">&lt;</span>String, Integer<span class=\"token operator\">></span> map<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr></table></figure><ul>\n<li>Mapper.xml</li>\n</ul>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token operator\">&lt;</span><span class=\"token operator\">!</span>--//分页--<span class=\"token operator\">></span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token operator\">&lt;</span>select <span class=\"token assign-left variable\">id</span><span class=\"token operator\">=</span><span class=\"token string\">\"getuserByLimit\"</span> <span class=\"token assign-left variable\">parameterType</span><span class=\"token operator\">=</span><span class=\"token string\">\"map\"</span> resu <span class=\"token assign-left variable\">7tMap</span><span class=\"token operator\">=</span><span class=\"token string\">\"UserMap\"</span><span class=\"token operator\">></span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    <span class=\"token keyword\">select</span> * from mybatis.user limit <span class=\"token comment\">#&#123;startIndex&#125; , #&#123;pagesize&#125;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token operator\">&lt;</span>/select<span class=\"token operator\">></span></pre></td></tr></table></figure><ul>\n<li>测试</li>\n</ul>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>@Test</pre></td></tr><tr><td data-num=\"2\"></td><td><pre>    public void <span class=\"token function-name function\">getUserByLimit</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>        SqlSession sqlSession <span class=\"token operator\">=</span> MybatisUtils.getSqlSession<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>        UserMapper mapper <span class=\"token operator\">=</span> sqlSession.getMapper<span class=\"token punctuation\">(</span>UserMapper.class<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>        HashMap<span class=\"token operator\">&lt;</span>String, Integer<span class=\"token operator\">></span> map <span class=\"token operator\">=</span> new HashMap<span class=\"token operator\">&lt;</span>String, Integer<span class=\"token operator\">></span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>        map.put<span class=\"token punctuation\">(</span><span class=\"token string\">\"startIndex\"</span>,0<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>        map.put<span class=\"token punctuation\">(</span><span class=\"token string\">\"pageSize\"</span>,2<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>        List<span class=\"token operator\">&lt;</span>User<span class=\"token operator\">></span> userList <span class=\"token operator\">=</span> mapper.getUserByLimit<span class=\"token punctuation\">(</span>map<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>        for<span class=\"token punctuation\">(</span>User user <span class=\"token builtin class-name\">:</span> userList<span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>            System.out.println<span class=\"token punctuation\">(</span>user<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><h1 id=\"rowbounds分页\"><a class=\"anchor\" href=\"#rowbounds分页\">#</a> RowBounds 分页</h1>\n<ul>\n<li>接口</li>\n</ul>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>//分页2</pre></td></tr><tr><td data-num=\"2\"></td><td><pre>List<span class=\"token operator\">&lt;</span>User<span class=\"token operator\">></span> getuse rByRowBounds<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span class=\"token operator\">|</span></pre></td></tr></table></figure><ul>\n<li>mapper.xml</li>\n</ul>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token operator\">&lt;</span><span class=\"token operator\">!</span>--分页2--<span class=\"token operator\">></span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token operator\">&lt;</span>select <span class=\"token assign-left variable\">id</span><span class=\"token operator\">=</span><span class=\"token string\">\"getUserByRowBounds\"</span> <span class=\"token assign-left variable\">resultMap</span><span class=\"token operator\">=</span><span class=\"token string\">\"UserMap \"</span><span class=\"token operator\">></span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    <span class=\"token keyword\">select</span> * from mybatis. user</pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token operator\">&lt;</span>/select<span class=\"token operator\">></span></pre></td></tr></table></figure><ul>\n<li>测试</li>\n</ul>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>@Test</pre></td></tr><tr><td data-num=\"2\"></td><td><pre>    pub1ic void <span class=\"token function-name function\">getuserByRowBounds</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>        Sq1Session sq1Session <span class=\"token operator\">=</span> Mybatisutils. getsq1session<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>        //RowBounds实现</pre></td></tr><tr><td data-num=\"5\"></td><td><pre>        RowBounds rowBounds <span class=\"token operator\">=</span> new RowBounds<span class=\"token punctuation\">(</span><span class=\"token number\">1,2</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>        //通过Java代码层面实现分页</pre></td></tr><tr><td data-num=\"7\"></td><td><pre>        List<span class=\"token operator\">&lt;</span>User<span class=\"token operator\">></span> userlist <span class=\"token operator\">=</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>        sq1Session. selectList<span class=\"token punctuation\">(</span><span class=\"token string\">\"com. kuang. dao.UserMapper . getuserByRowBounds\"</span>，nu11 , rowBounds<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>        <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span>User user <span class=\"token builtin class-name\">:</span> userList<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>        System. out. print1n<span class=\"token punctuation\">(</span>user<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>        sqlSession.c1ose<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><h1 id=\"分页插件-mybatis分页插件-pagehelper\"><a class=\"anchor\" href=\"#分页插件-mybatis分页插件-pagehelper\">#</a> 分页插件 MyBatis 分页插件 PageHelper</h1>\n",
            "tags": [
                "学习Java",
                "SSM",
                "Mybatis",
                "java"
            ]
        },
        {
            "id": "https://love.youhuamao.xyz/2022/10/22/Java/Java%E5%9F%BA%E7%A1%80/%E5%BC%82%E5%B8%B8%E5%A4%84%E7%90%86/",
            "url": "https://love.youhuamao.xyz/2022/10/22/Java/Java%E5%9F%BA%E7%A1%80/%E5%BC%82%E5%B8%B8%E5%A4%84%E7%90%86/",
            "title": "异常处理",
            "date_published": "2022-10-21T16:00:00.000Z",
            "content_html": "<h1 id=\"异常介绍\"><a class=\"anchor\" href=\"#异常介绍\">#</a> 异常介绍</h1>\n<p>Java 语言中，将程序执行中发生的不正常情况称为 “异常”。(开发过程中的语法错误和逻辑错误不是异常)</p>\n<ul>\n<li>执行过程中所发生的异常事件可分为两大类</li>\n</ul>\n<ol>\n<li>Error (错误): Java 虚拟机无法解决的严重问题。如: JVM 系统内部错误、资源耗尽等严重情况。比如: StackOverflowError [栈溢出] 和 OOM (out ofmemory), Error 是严重错误，程序会崩溃。</li>\n<li>Exception: 其它因编程错误或偶然的外在因素导致的一般性问题，可以使用针对性的代码进行处理。例如空指针访问，试图读取不存在的文件，网络连接中断等等，Exception 分为两大类：运行时异常 [程序运行时，发生的异常] 和编译时异常 [编程时，编译器检查出的异常]。</li>\n</ol>\n<ul>\n<li>异常分为两大类，运行时异常和编译时异常。运行时异常，编译器不要求强制处置的异常。</li>\n<li>一般是指编程时的逻辑错误，是程序员应该避免其出现的异常。java.lang.RuntimeException 类及它的子类都是运行时异常</li>\n<li>对于运行时异常，可以不作处理，因为这类异常很普遍，若全处理可能会对程序的可读性和运行效率产生影响</li>\n<li>编译时异常，是编译器要求必须处置的异常。</li>\n</ul>\n<h1 id=\"常见运行时异常\"><a class=\"anchor\" href=\"#常见运行时异常\">#</a> 常见运行时异常</h1>\n<ul>\n<li>NullPointerException 空指针异常 NullPointerException.java 当应用程序试图在需要对象的地方使用 null 时，抛出该异常</li>\n<li>ArithmeticException 数学运算异常 当出现异常的运算条件时，抛出此异常。例如，一个整数 “除以零” 时，抛出此类的一一个实例</li>\n<li>ArrayIndexOutOfBoundsException 数组下标越界异常用非法索引访问数组时抛出的异常。如果索引为负或大于等于数组大小，则该索引为非法索引</li>\n<li>ClassCastException 类型转换异常当试图将对象强制转换为不是实例的子类时，抛出该异常。例如，以下代码将生成一个 ClassCastException</li>\n<li>NumberFormatException 数字格式不正确异常当应用程序试图将字符串转换成一种数值类型，但该字符串不能转换为适当格式时，抛出该异常 =&gt; 使用异常我们可以确保输入是满足条件数字.</li>\n</ul>\n<h1 id=\"常见的编译异常\"><a class=\"anchor\" href=\"#常见的编译异常\">#</a> 常见的编译异常</h1>\n<p>编译异常是指在编译期间，就必须处理的异常，否则代码不能通过编译。</p>\n<ul>\n<li>SQLException // 操作数据库时，查询表可能发生异常</li>\n<li>IOException // 操作文件时，发生的异常</li>\n<li>FileNotFoundException // 当操作一个不存在的文件时， 发生异常</li>\n<li>ClassNotFoundException // 加载类，而该类不存在时，异常</li>\n<li>EOFException / 操作文件，到文件末尾，发生异常</li>\n<li>IllegalArguementException // 参数异常</li>\n</ul>\n<h1 id=\"异常处理\"><a class=\"anchor\" href=\"#异常处理\">#</a> 异常处理</h1>\n<p>异常处理就是当异常发生时，对异常处理的方式。</p>\n<ul>\n<li>try-catch-finally 程序员在代码中捕获发生的异常，自行处理</li>\n</ul>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>try <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>    代码/可能有异常</pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token punctuation\">&#125;</span>catch<span class=\"token punctuation\">(</span>Exception e<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    //捕获到异常</pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    //1当异常发生时</pre></td></tr><tr><td data-num=\"6\"></td><td><pre>    //2.系统将异常封装成Exception对象e,传递给catch</pre></td></tr><tr><td data-num=\"7\"></td><td><pre>    //3得到异常对象后，程序 员，自己处理</pre></td></tr><tr><td data-num=\"8\"></td><td><pre>    //4.注意,如果没有发生异常catch代码块不执行</pre></td></tr><tr><td data-num=\"9\"></td><td><pre><span class=\"token punctuation\">&#125;</span>finally<span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>        //1.不管try代码块是否有异常 发生，始终要执行finally</pre></td></tr><tr><td data-num=\"11\"></td><td><pre>        //2.所以，通常将释放资源的代码，放在finally</pre></td></tr><tr><td data-num=\"12\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><ul>\n<li>throws 将发生的异常抛出，交给调用者 (方法) 来处理，最顶级的处理者就是 JVM</li>\n<li>如果程序员，没有显示是处理异常，默认 throws</li>\n</ul>\n<h1 id=\"try-catch\"><a class=\"anchor\" href=\"#try-catch\">#</a> try-catch</h1>\n<ul>\n<li>Java 提供 try 和 catch 块来处理异常。try 块用于包含可能出错的代码。catch 块用于处理 try 块中发生的异常。可以根据需要在程序中有多个 try..catch 块。</li>\n<li>如果异常发生了，则异常发生后面的代码不会执行，直接进入到 catch 块.</li>\n<li>如果异常没有发生，则顺序执行 try 的代码块，不会进入到 catch.</li>\n<li>如果希望不管是否发生异常，都执行某段代码 (比如关闭连接，释放资源等) 则使用如下代码 - finally</li>\n<li>可以有多个 catch 语句，捕获不同的异常 (进行不同的业务处理)，要求父类异常在后，子类异常在前，比如 (Exception 在后，NullPointerException 在前)，如果发生异常，只会匹配一 - 个 catch</li>\n</ul>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>try <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>    Person person <span class=\"token operator\">=</span> new Person<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    person <span class=\"token operator\">=</span> null<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    System.out.printLn<span class=\"token punctuation\">(</span>person.getName<span class=\"token punctuation\">(</span><span class=\"token punctuation\">))</span><span class=\"token punctuation\">;</span> //NuLLPointerException</pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    int n1 <span class=\"token operator\">=</span> <span class=\"token number\">10</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>    int n2 <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>    int res <span class=\"token operator\">=</span> n1 / n2<span class=\"token punctuation\">;</span> //ArithmeticException</pre></td></tr><tr><td data-num=\"8\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span> catch <span class=\"token punctuation\">(</span>NullPointerException e<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>    System.out.printLn<span class=\"token punctuation\">(</span><span class=\"token string\">\"空指针异常=\"</span> + e.getMessage<span class=\"token punctuation\">(</span><span class=\"token punctuation\">))</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span> catch <span class=\"token punctuation\">(</span>ArithmeticException e<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>    System.out.println<span class=\"token punctuation\">(</span><span class=\"token string\">\"算术异常=\"</span> + e.getMessage<span class=\"token punctuation\">(</span><span class=\"token punctuation\">))</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span> catch <span class=\"token punctuation\">(</span>Exception e<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>    System.out.printLn<span class=\"token punctuation\">(</span>e.getMessage<span class=\"token punctuation\">(</span><span class=\"token punctuation\">))</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span> finally <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><ul>\n<li>可以进行 try-finally 配合使用，这种用法相当于没有捕获异常，因此程序会直接崩掉。应用场景，就是执行一段代码，不管是否发生异常，都必须执行某个业务逻辑</li>\n</ul>\n<h1 id=\"throw异常处理\"><a class=\"anchor\" href=\"#throw异常处理\">#</a> throw 异常处理</h1>\n<ul>\n<li>如果一个方法 (中的语句执行时) 可能生成某种异常，但是并不能确定如何处理这种异常，则此方法应显示地声明抛出异常，表明该方法将不对这些异常进行处理，而由该方法的调用者负责处理。（例如 f2 方法被 f1 调用，f1 就是 f2 的调用者）</li>\n<li>在方法声明中用 throws 语句可以声明抛出异常的列表，throws 后面的异常类型可以是方法中产生的异常类型，也可以是它的父类。</li>\n<li>对于编译异常，程序中必须处理，比如 try-atch 或者 throws</li>\n<li>对于运行时异常，程序中如果没有处理，默认就是 throws 的方式处理</li>\n<li>子类重写父类的方法时，对抛出异常的规定：于类重写的方法，所抛出的异常类型要么和父类抛出的异常一致， 要么为父类抛出的异常的类型的子类型</li>\n<li>在 throws 过程中，如果有方法 try-catch , 就相当于处理异常，就可以不必 throws</li>\n</ul>\n<h1 id=\"自定义异常\"><a class=\"anchor\" href=\"#自定义异常\">#</a> 自定义异常</h1>\n<ul>\n<li>定义类：自定义异常类名 (程序员自己写) 继承 Exception 或 RuntimeException</li>\n<li>如果继承 Exception, 属于编译异常</li>\n<li>如果继承 RuntimeException, 属于运行异常 (一般来说，继承 RuntimeException)</li>\n</ul>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>int age <span class=\"token operator\">=</span><span class=\"token number\">180</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>//要求范围在18 - <span class=\"token number\">120</span>之间，否则抛出一个自定义异常</pre></td></tr><tr><td data-num=\"3\"></td><td><pre>if<span class=\"token punctuation\">(</span><span class=\"token operator\">!</span><span class=\"token punctuation\">(</span>age <span class=\"token operator\">>=</span> <span class=\"token number\">18</span> <span class=\"token operator\">&amp;&amp;</span> age <span class=\"token operator\">&lt;=</span><span class=\"token number\">120</span><span class=\"token punctuation\">))</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>//这里我们可以通过构造器,设置信息</pre></td></tr><tr><td data-num=\"5\"></td><td><pre>throw new AgeException<span class=\"token punctuation\">(</span><span class=\"token string\">\"年龄需要在18~120之 间\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>System.out.println<span class=\"token punctuation\">(</span><span class=\"token string\">\"你的年龄范围正确.\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>//自定义一一个异常</pre></td></tr><tr><td data-num=\"10\"></td><td><pre>cLass AgeException extends RuntimeException <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>    pubLic AgeException<span class=\"token punctuation\">(</span>String message<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>//构造器</pre></td></tr><tr><td data-num=\"12\"></td><td><pre>        super<span class=\"token punctuation\">(</span>message<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><h1 id=\"throw和throws的区别\"><a class=\"anchor\" href=\"#throw和throws的区别\">#</a> throw 和 throws 的区别</h1>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>意义                        位置            后面跟的东西</pre></td></tr><tr><td data-num=\"2\"></td><td><pre>throws  异常处理的一种方式          方法声明处      异常类型</pre></td></tr><tr><td data-num=\"3\"></td><td><pre>throw   手动生成异常对象的关键字    方法体中        异常对象 <span class=\"token punctuation\">(</span>new 异常类型<span class=\"token punctuation\">)</span></pre></td></tr></table></figure>",
            "tags": [
                "学习Java",
                "Java基础",
                "java"
            ]
        },
        {
            "id": "https://love.youhuamao.xyz/2022/10/22/Java/SSM/Mybatis/Map%E5%92%8C%E6%A8%A1%E7%B3%8A%E6%9F%A5%E8%AF%A2/",
            "url": "https://love.youhuamao.xyz/2022/10/22/Java/SSM/Mybatis/Map%E5%92%8C%E6%A8%A1%E7%B3%8A%E6%9F%A5%E8%AF%A2/",
            "title": "Map和模糊查询",
            "date_published": "2022-10-21T16:00:00.000Z",
            "content_html": "<h1 id=\"万能的map\"><a class=\"anchor\" href=\"#万能的map\">#</a> 万能的 Map</h1>\n<ul>\n<li>假设，我们的实体类，或者数据库中的表，字段或者参数过多，我们应当考虑使用 Map!</li>\n<li>使用 map 在写 sql 语句的时候，占位符内的名称可以与前边的不一致，类型一致即可</li>\n</ul>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>int addUser2<span class=\"token punctuation\">(</span>Map<span class=\"token operator\">&lt;</span>String, Object<span class=\"token operator\">></span> map<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr></table></figure><figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token operator\">&lt;</span>insert <span class=\"token assign-left variable\">id</span><span class=\"token operator\">=</span><span class=\"token string\">\"addUser2\"</span> <span class=\"token assign-left variable\">parameterType</span><span class=\"token operator\">=</span><span class=\"token string\">\"map\"</span><span class=\"token operator\">></span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>        insert into mybatis.user <span class=\"token punctuation\">(</span>id,pwd<span class=\"token punctuation\">)</span> values<span class=\"token punctuation\">(</span><span class=\"token comment\">#&#123;userid&#125;,#&#123;passWord&#125;); // 可以与前边的不一致</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    <span class=\"token operator\">&lt;</span>/insert<span class=\"token operator\">></span></pre></td></tr></table></figure><figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>@Test</pre></td></tr><tr><td data-num=\"2\"></td><td><pre>    public void <span class=\"token function-name function\">addUser2</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>        SqlSession sqlSession <span class=\"token operator\">=</span> MybatisUtils.getSqlSession<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>        UserMapper mapper <span class=\"token operator\">=</span> sqlSession.getMapper<span class=\"token punctuation\">(</span>UserMapper.class<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>        HashMap<span class=\"token operator\">&lt;</span>String, Object<span class=\"token operator\">></span> map <span class=\"token operator\">=</span> new HashMap<span class=\"token operator\">&lt;</span>String,Object<span class=\"token operator\">></span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>        map.put<span class=\"token punctuation\">(</span><span class=\"token string\">\"userid\"</span>,5<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>   //提供参数</pre></td></tr><tr><td data-num=\"10\"></td><td><pre>        map.put<span class=\"token punctuation\">(</span><span class=\"token string\">\"userName\"</span>,<span class=\"token string\">\"Hello\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>        map.put<span class=\"token punctuation\">(</span><span class=\"token string\">\"passWord\"</span>,<span class=\"token string\">\"2222333\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>        mapper.addUser2<span class=\"token punctuation\">(</span>map<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>        sqlSession.close<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><ul>\n<li>Map 传递参数，直接在 sq | 中取出 key 即可！[parameterType=&quot;map&quot;]<br />\n 对象传递参数，直接在 sq | 中取对象的属性即可！[parameterType=&quot;Object&quot;]<br />\n 只有一个基本类型参数的情况下，可以直接在 sq | 中取到！<br />\n 多个参数用 Map, 或者注解！</li>\n</ul>\n<h1 id=\"模糊查询\"><a class=\"anchor\" href=\"#模糊查询\">#</a> 模糊查询</h1>\n<ul>\n<li>Java 代码执行的时候，传递通配符 % %</li>\n</ul>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>@Test</pre></td></tr><tr><td data-num=\"2\"></td><td><pre>    public void <span class=\"token function-name function\">getUserLike</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>        SqlSession sqlSession <span class=\"token operator\">=</span> MybatisUtils.getSqlSession<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>        UserMapper mapper <span class=\"token operator\">=</span> sqlSession.getMapper<span class=\"token punctuation\">(</span>UserMapper.class<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>        List<span class=\"token operator\">&lt;</span>User<span class=\"token operator\">></span> userList <span class=\"token operator\">=</span> mapper.getUserLike<span class=\"token punctuation\">(</span><span class=\"token string\">\"%李%\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>        for<span class=\"token punctuation\">(</span>User user <span class=\"token builtin class-name\">:</span> userList<span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>            System.out.println<span class=\"token punctuation\">(</span>user<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>        sqlSession.close<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><ul>\n<li>在 sq | 拼接中使用通配符！</li>\n</ul>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token operator\">&lt;</span>select <span class=\"token assign-left variable\">id</span><span class=\"token operator\">=</span><span class=\"token string\">\"getUserLike\"</span> <span class=\"token assign-left variable\">resultType</span><span class=\"token operator\">=</span><span class=\"token string\">\"com.kuang.pojo.User\"</span><span class=\"token operator\">></span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>        <span class=\"token keyword\">select</span> * from mybatis.user where name like <span class=\"token string\">\"%\"</span>#<span class=\"token punctuation\">&#123;</span>value<span class=\"token punctuation\">&#125;</span><span class=\"token string\">\"%\"</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    <span class=\"token operator\">&lt;</span>/select<span class=\"token operator\">></span></pre></td></tr></table></figure>",
            "tags": [
                "学习Java",
                "SSM",
                "Mybatis",
                "java"
            ]
        },
        {
            "id": "https://love.youhuamao.xyz/2022/10/22/Java/SSM/Mybatis/%E5%A2%9E%E5%88%A0%E6%94%B9%E6%9F%A5/",
            "url": "https://love.youhuamao.xyz/2022/10/22/Java/SSM/Mybatis/%E5%A2%9E%E5%88%A0%E6%94%B9%E6%9F%A5/",
            "title": "初识别Mybatis",
            "date_published": "2022-10-21T16:00:00.000Z",
            "content_html": "<h1 id=\"crud\"><a class=\"anchor\" href=\"#crud\">#</a> CRUD</h1>\n<ul>\n<li>namespace<br />\nnamespace 中的包名要和 Dao/mapper 接口的包名一致！</li>\n<li>select<br />\n 选择查询语句</li>\n</ul>\n<ol>\n<li>id : 就是对应的 namespace 中的方法名；</li>\n<li>resultType: Sq | 语句执行的返回值！</li>\n<li>parameterType : 参数类型！</li>\n</ol>\n<ul>\n<li>select</li>\n</ul>\n<ol>\n<li>编写接口</li>\n</ol>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>//inster一个用户</pre></td></tr><tr><td data-num=\"2\"></td><td><pre>    int getUserById<span class=\"token punctuation\">(</span>User user<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr></table></figure><ol start=\"2\">\n<li>编写对应的 mapper 中的 sq | 语句</li>\n</ol>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token operator\">&lt;</span>select <span class=\"token assign-left variable\">id</span><span class=\"token operator\">=</span><span class=\"token string\">\"getUserById\"</span> <span class=\"token assign-left variable\">parameterType</span><span class=\"token operator\">=</span><span class=\"token string\">\"int\"</span> <span class=\"token assign-left variable\">resultType</span><span class=\"token operator\">=</span><span class=\"token string\">\"com.kuang.pojo.User\"</span><span class=\"token operator\">></span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>        <span class=\"token keyword\">select</span> * from mybatis.user where <span class=\"token function\">id</span> <span class=\"token operator\">=</span> <span class=\"token comment\">#&#123;id&#125;  // 前后需要一致</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    <span class=\"token operator\">&lt;</span>/select<span class=\"token operator\">></span></pre></td></tr></table></figure><ol start=\"3\">\n<li>测试</li>\n</ol>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>@Test</pre></td></tr><tr><td data-num=\"2\"></td><td><pre>    public void <span class=\"token function-name function\">getUserById</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>        SqlSession sqlSession <span class=\"token operator\">=</span> MybatisUtils.getSqlSession<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>        UserMapper mapper <span class=\"token operator\">=</span> sqlSession.getMapper<span class=\"token punctuation\">(</span>UserMapper.class<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>        User user <span class=\"token operator\">=</span> mapper.getUserById<span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>        System.out.println<span class=\"token punctuation\">(</span>user<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>        sqlSession.close<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><ul>\n<li>insert</li>\n</ul>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token operator\">&lt;</span>insert <span class=\"token assign-left variable\">id</span><span class=\"token operator\">=</span><span class=\"token string\">\"addUser\"</span> <span class=\"token assign-left variable\">parameterType</span><span class=\"token operator\">=</span><span class=\"token string\">\"com.kuang.pojo.User\"</span><span class=\"token operator\">></span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>        insert into mybatis.user <span class=\"token punctuation\">(</span>id,name,pwd<span class=\"token punctuation\">)</span> values<span class=\"token punctuation\">(</span><span class=\"token comment\">#&#123;id&#125;,#&#123;name&#125;,#&#123;pwd&#125;);</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    <span class=\"token operator\">&lt;</span>/insert<span class=\"token operator\">></span></pre></td></tr></table></figure><ul>\n<li>update</li>\n</ul>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token operator\">&lt;</span>update <span class=\"token assign-left variable\">id</span><span class=\"token operator\">=</span><span class=\"token string\">\"updateUser\"</span> <span class=\"token assign-left variable\">parameterType</span><span class=\"token operator\">=</span><span class=\"token string\">\"com.kuang.pojo.User\"</span><span class=\"token operator\">></span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>        update mybatis.user <span class=\"token builtin class-name\">set</span> <span class=\"token assign-left variable\">name</span><span class=\"token operator\">=</span><span class=\"token comment\">#&#123;name&#125;,pwd=#&#123;pwd&#125; = where id = #&#123;id&#125;;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    <span class=\"token operator\">&lt;</span>/update<span class=\"token operator\">></span></pre></td></tr></table></figure><ul>\n<li>delete</li>\n</ul>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token operator\">&lt;</span>delete <span class=\"token assign-left variable\">id</span><span class=\"token operator\">=</span><span class=\"token string\">\"deleteUser\"</span> <span class=\"token assign-left variable\">parameterType</span><span class=\"token operator\">=</span><span class=\"token string\">\"int\"</span><span class=\"token operator\">></span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>        delete from mybatis.user where <span class=\"token function\">id</span> <span class=\"token operator\">=</span> <span class=\"token comment\">#&#123;id&#125;;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    <span class=\"token operator\">&lt;</span>/delete<span class=\"token operator\">></span></pre></td></tr></table></figure><ul>\n<li>增删改需要提交事务</li>\n</ul>\n",
            "tags": [
                "学习Java",
                "SSM",
                "Mybatis",
                "java"
            ]
        },
        {
            "id": "https://love.youhuamao.xyz/2022/10/21/Java/Java%E5%9F%BA%E7%A1%80/%E6%9E%9A%E4%B8%BE%EF%BC%8C%E6%B3%A8%E8%A7%A3/",
            "url": "https://love.youhuamao.xyz/2022/10/21/Java/Java%E5%9F%BA%E7%A1%80/%E6%9E%9A%E4%B8%BE%EF%BC%8C%E6%B3%A8%E8%A7%A3/",
            "title": "枚举，注解",
            "date_published": "2022-10-20T16:00:00.000Z",
            "content_html": "<h1 id=\"自定义枚举类\"><a class=\"anchor\" href=\"#自定义枚举类\">#</a> 自定义枚举类</h1>\n<ul>\n<li>枚举属于一种特殊的类，里面只包含一组有限的特定的对象。枚举是一组常量的集合。</li>\n<li>不需要提供 setXxx 方法，因为枚举对象值通常为只读.</li>\n<li>对枚举对象 / 属性使用 final + static 共同修饰，实现底层优化.(静态类如果使用 final 修饰，则不会被直接加载，需要调用才加载)</li>\n<li>枚举对象名通常使用全部大写，常量的命名规范.</li>\n<li>枚举对象根据需要，也可以有多个属性</li>\n</ul>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>class Season<span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>    private String name<span class=\"token punctuation\">;</span>//季节名称</pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    private String description<span class=\"token punctuation\">;</span>//季节描述</pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    public String <span class=\"token function-name function\">getName</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    <span class=\"token builtin class-name\">return</span> name<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>    public String <span class=\"token function-name function\">getDescription</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>    <span class=\"token builtin class-name\">return</span> description<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>    private Season<span class=\"token punctuation\">(</span>String name,String description<span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>    this.name <span class=\"token operator\">=</span> name<span class=\"token punctuation\">;</span> </pre></td></tr><tr><td data-num=\"12\"></td><td><pre>    this.description <span class=\"token operator\">=</span>  description<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>    public final static Season SPRING <span class=\"token operator\">=</span> new Season<span class=\"token punctuation\">(</span><span class=\"token string\">\"春天\"</span>,<span class=\"token string\">\"温暖\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>    public final static Season SUMMER <span class=\"token operator\">=</span> new Season<span class=\"token punctuation\">(</span><span class=\"token string\">\"夏天\"</span>,<span class=\"token string\">\"炎热\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>    public final static Season AUTUMN <span class=\"token operator\">=</span> new Season<span class=\"token punctuation\">(</span><span class=\"token string\">\"秋天\"</span>,<span class=\"token string\">\"凉爽\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>    public final static Season WINTER <span class=\"token operator\">=</span> new Season<span class=\"token punctuation\">(</span><span class=\"token string\">\"冬天\"</span>,<span class=\"token string\">\"寒冷\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>System.out.println<span class=\"token punctuation\">(</span>Season.AUTUMMN<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr></table></figure><h1 id=\"enum关键字实现枚举\"><a class=\"anchor\" href=\"#enum关键字实现枚举\">#</a> enum 关键字实现枚举</h1>\n<ul>\n<li>如果使用 enum 来实现枚举，要求将定义常量对象，写在前面</li>\n<li>当我们使用 enum 关键字开发一个枚举类时， 默认会继承 Enum 类</li>\n<li>传统的 public static final Season2 SPRING = new Season2 (&quot;春天&quot;,&quot;温暖&quot;); 简化成 SPRING (&quot;春天&quot;, &quot;温暖&quot;), 这里必须知道，它调用的是哪个构造器.</li>\n<li>如果使用无参构造器创建枚举对象，则实参列表和小括号都可以省略</li>\n<li>当有多个枚举对象时，使用间隔，最后有一个分号结尾</li>\n<li>枚举对象必须放在枚举类的行首.</li>\n</ul>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>class Season<span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>    WINTER<span class=\"token punctuation\">(</span><span class=\"token string\">\"冬天\"</span>,<span class=\"token string\">\"寒冷\"</span><span class=\"token punctuation\">)</span>,AUTUMN<span class=\"token punctuation\">(</span><span class=\"token string\">\"秋天\"</span>,<span class=\"token string\">\"凉爽\"</span><span class=\"token punctuation\">)</span>,SUMMER<span class=\"token punctuation\">(</span><span class=\"token string\">\"夏天\"</span>,<span class=\"token string\">\"炎热\"</span><span class=\"token punctuation\">)</span>,SPRING<span class=\"token punctuation\">(</span><span class=\"token string\">\"春天\"</span>,<span class=\"token string\">\"温暖\"</span><span class=\"token punctuation\">)</span>,What<span class=\"token punctuation\">;</span> </pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    private String name<span class=\"token punctuation\">;</span>//季节名称</pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    private String description<span class=\"token punctuation\">;</span>//季节描述</pre></td></tr><tr><td data-num=\"5\"></td><td><pre></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>    private Season<span class=\"token punctuation\">(</span>String name,String description<span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>    this.name <span class=\"token operator\">=</span> name<span class=\"token punctuation\">;</span> </pre></td></tr><tr><td data-num=\"8\"></td><td><pre>    this.description <span class=\"token operator\">=</span> description<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>    private Season<span class=\"token punctuation\">(</span>String name,String description<span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre></pre></td></tr><tr><td data-num=\"14\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>System.out.println<span class=\"token punctuation\">(</span>Season.AUTUMMN<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr></table></figure><ul>\n<li>当有多个枚举对象时，使用，间隔，最后有一个分号结尾</li>\n<li>枚举对象必须放在枚举类的行首.</li>\n</ul>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>class Season<span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>    WINTER<span class=\"token punctuation\">(</span><span class=\"token string\">\"冬天\"</span>,<span class=\"token string\">\"寒冷\"</span><span class=\"token punctuation\">)</span>,AUTUMN<span class=\"token punctuation\">(</span><span class=\"token string\">\"秋天\"</span>,<span class=\"token string\">\"凉爽\"</span><span class=\"token punctuation\">)</span>,SUMMER<span class=\"token punctuation\">(</span><span class=\"token string\">\"夏天\"</span>,<span class=\"token string\">\"炎热\"</span><span class=\"token punctuation\">)</span>,SPRING<span class=\"token punctuation\">(</span><span class=\"token string\">\"春天\"</span>,<span class=\"token string\">\"温暖\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> </pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    private String name<span class=\"token punctuation\">;</span>//季节名称</pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    private String description<span class=\"token punctuation\">;</span>//季节描述</pre></td></tr><tr><td data-num=\"5\"></td><td><pre></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>    private Season<span class=\"token punctuation\">(</span>String name,String description<span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>    this.name <span class=\"token operator\">=</span> name<span class=\"token punctuation\">;</span> </pre></td></tr><tr><td data-num=\"8\"></td><td><pre>    this.description <span class=\"token operator\">=</span>  description<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre></pre></td></tr><tr><td data-num=\"11\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>System.out.println<span class=\"token punctuation\">(</span>Season.AUTUMMN<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr></table></figure><figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>enum</pre></td></tr><tr><td data-num=\"2\"></td><td><pre>Gender2<span class=\"token punctuation\">&#123;</span> //父类Enum的toString</pre></td></tr><tr><td data-num=\"3\"></td><td><pre>BOY,GIRL<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>Gender2 boy <span class=\"token operator\">=</span> Gender2.BOY<span class=\"token punctuation\">;</span>//OK</pre></td></tr><tr><td data-num=\"6\"></td><td><pre>Gender2 boy2 <span class=\"token operator\">=</span> Gender2.BOY<span class=\"token punctuation\">;</span>//OK</pre></td></tr><tr><td data-num=\"7\"></td><td><pre>System.out.println<span class=\"token punctuation\">(</span>boy<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> //本质就是调用Gender2的父类Enum的toString<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>public String <span class=\"token function-name function\">toString</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>    <span class=\"token builtin class-name\">return</span> name<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>System.out.println<span class=\"token punctuation\">(</span>boy2 <span class=\"token operator\">==</span> boy<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>//True</pre></td></tr></table></figure><h1 id=\"enum常用方法应用实例\"><a class=\"anchor\" href=\"#enum常用方法应用实例\">#</a> enum 常用方法应用实例</h1>\n<ul>\n<li>toString:Enum 类已经重写过了，返回的是当前对象名，子类可以重写该方法，用于返回对象的属性信息</li>\n<li>name: 返回当前对象名 (常量名) , 子类中不能重写</li>\n<li>ordinal: 返回当前对象的位置号，默认从 0 开始</li>\n<li>values: 返回当前枚举类中所有的常量</li>\n<li>valueOf: 将字符串转换成枚举对象，要求字符串必须为已有的常量名，否则报异常！</li>\n<li>compareTo: 比较两个枚举常量，比较的就是位置号！</li>\n</ul>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>Season2 autumn <span class=\"token operator\">=</span> Season2.AUTUMN<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>System.out.println<span class=\"token punctuation\">(</span>autumn<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>System.out.println<span class=\"token punctuation\">(</span>autumn.name<span class=\"token punctuation\">(</span><span class=\"token punctuation\">))</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>System.out.println<span class=\"token punctuation\">(</span>autumn.ordinal<span class=\"token punctuation\">(</span><span class=\"token punctuation\">))</span><span class=\"token punctuation\">;</span> //2</pre></td></tr><tr><td data-num=\"5\"></td><td><pre>Season2<span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> values F Season2.values<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span>Season2 season2 <span class=\"token builtin class-name\">:</span> values<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>/增强for</pre></td></tr><tr><td data-num=\"7\"></td><td><pre>System.out.println<span class=\"token punctuation\">(</span>season2<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>Season2 value <span class=\"token operator\">=</span> Season2.valueOf<span class=\"token punctuation\">(</span><span class=\"token string\">\"SPRING\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>System.out.println<span class=\"token punctuation\">(</span>value<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>System.out.println<span class=\"token punctuation\">(</span>autumn.compare To<span class=\"token punctuation\">(</span>value<span class=\"token punctuation\">))</span><span class=\"token punctuation\">;</span></pre></td></tr></table></figure><h1 id=\"enum实现接口\"><a class=\"anchor\" href=\"#enum实现接口\">#</a> enum 实现接口</h1>\n<ul>\n<li>使用 enum 关键字后，就不能再继承其它类了，因为 enum 会隐式继承 Enum, 而 Java 是单继承机制。</li>\n<li>枚举类和普通类一样，可以实现接口，如下形式。<br />\nenum 类名 implements 接口 1, 接口 2 {}</li>\n</ul>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>interface IPLaying <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>public void pLaying<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>enum Music impLements IPLaying <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    CLASSICMUISC<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>    @Override </pre></td></tr><tr><td data-num=\"7\"></td><td><pre>    pubLic void <span class=\"token function-name function\">playing</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>    System.out.println<span class=\"token punctuation\">(</span><span class=\"token string\">\"播放好听的音乐...\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>Music.CLASSICMUISC.playing<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr></table></figure><h1 id=\"注解\"><a class=\"anchor\" href=\"#注解\">#</a> 注解</h1>\n<ul>\n<li>注解 (Annotation 也被称为元数据 (Metadata), 用于修饰解释包、类、方法、属性、构造器、局部变量等数据信息。</li>\n<li>和注释一样，注解不影响程序逻辑，但注解可以被编译或运行，相当于嵌入在代码中的补充信息。</li>\n<li>在 JavaSE 中， 注解的使用目的比较简单，例如标记过时的功能，忽略警告等。在 JavaEE 中注解占据了更重要的角色，例如用来配置应用程序的任何切面，代替 java EE 旧版中所遗留的繁冗代码和 XML 配置等。</li>\n</ul>\n<h1 id=\"基本的annotation介绍\"><a class=\"anchor\" href=\"#基本的annotation介绍\">#</a> 基本的 Annotation 介绍</h1>\n<p>使用 Annotation 时要在其前面增加 @符号，并把该 Annotation 当成一个修饰符使用。用于修饰它支持的程序元素</p>\n<ul>\n<li>@Override: 限定某个方法，是重写父类方法，该注解只能用于方法</li>\n<li>@Override 表示指定重写父类的方法 (从编译层面验证) , 如果父类没有 fly 方法，则会报错</li>\n<li>如果不写 @Override 注解，而父类仍有 public void fly (){} , 仍然构成重写</li>\n<li>@Override 只能修饰方法，不能修饰其它类，包，属性等等</li>\n<li>查看 @Override 注解源码为 @Target (ElementType.METHOD), 说明只能修饰方法</li>\n<li>@Target 是修饰注解的注解，称为元注解</li>\n</ul>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>class Father<span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>    public void <span class=\"token function-name function\">fly</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>        System.out.println<span class=\"token punctuation\">(</span><span class=\"token string\">\"Father fly..\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>class Son extends Father <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>    @Override //说明 @Override放在fLy方法上，表示子类的fly方法时重写了父类的fly</pre></td></tr><tr><td data-num=\"8\"></td><td><pre>              //如果你写了@Override注解，编译器就会去检查该方法是否真的重写了父类的方法，如果的确重写了，则编译通过，如果没有构成重写，则编译错误</pre></td></tr><tr><td data-num=\"9\"></td><td><pre></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>    public void <span class=\"token function-name function\">fly</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>        System.out.println<span class=\"token punctuation\">(</span><span class=\"token string\">\"Son f.y..\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span class=\"token builtin class-name\">.</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><ul>\n<li>@Deprecated: 用于表示某个程序元素 (类，方法等) 已过时 即不在推荐使用，但是仍然可以使用</li>\n<li>可以修饰方法，美，字段，包，参数等等</li>\n<li>@Target(value= {CONSTRUCTOR, FIELD, LOCAL VARIABLE, METHOD,PACKAGE, PARAMETER, TYPE})</li>\n<li>@Deprecated 的作用可以做到新旧版本的兼容和过渡</li>\n</ul>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>@Deprecated</pre></td></tr><tr><td data-num=\"2\"></td><td><pre>    class Father<span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>        @Deprecated</pre></td></tr><tr><td data-num=\"4\"></td><td><pre>        public String Aame<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>        public void <span class=\"token function-name function\">fly</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>            System.out.printIn<span class=\"token punctuation\">(</span><span class=\"token string\">\"Faterfly.. \"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>    //@Deprecated的说明几点.</pre></td></tr><tr><td data-num=\"9\"></td><td><pre>        @Deprecated</pre></td></tr><tr><td data-num=\"10\"></td><td><pre>        public void <span class=\"token function-name function\">sing</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>            System.out.println<span class=\"token punctuation\">(</span><span class=\"token string\">\"Father sing... \"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>class Son extends Father<span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>    //Override使用说明</pre></td></tr><tr><td data-num=\"16\"></td><td><pre>    @Override</pre></td></tr><tr><td data-num=\"17\"></td><td><pre>    public void <span class=\"token function-name function\">fly</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>        System.out.println<span class=\"token punctuation\">(</span><span class=\"token string\">\"Son fly.... \"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><ul>\n<li>@SuppressWarnings 抑制编译器警告</li>\n</ul>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>@SuppressWarnings<span class=\"token punctuation\">(</span><span class=\"token punctuation\">&#123;</span><span class=\"token string\">\"aU\"</span><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span> //抑制所有警告</pre></td></tr><tr><td data-num=\"2\"></td><td><pre></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    public class AnnotationDemo01 <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>        public static void main<span class=\"token punctuation\">(</span>String<span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> args<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>            List list <span class=\"token operator\">=</span> new ArrayList<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>            list.add<span class=\"token punctuation\">(</span><span class=\"token string\">\"\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>            list.add<span class=\"token punctuation\">(</span><span class=\"token string\">\"\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>            list.add<span class=\"token punctuation\">(</span><span class=\"token string\">\"\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>            int i<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>            System.out.println<span class=\"token punctuation\">(</span>list.get<span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">))</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre></pre></td></tr><tr><td data-num=\"14\"></td><td><pre></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>    unchecked 是忽略没有检查的警告</pre></td></tr><tr><td data-num=\"16\"></td><td><pre>    rawtypes 是忽略没有指定泛型的警告<span class=\"token punctuation\">(</span>传参时没有指定泛型的警告错误<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>    unused 是忽略没有使用某个变量的警告错误</pre></td></tr><tr><td data-num=\"18\"></td><td><pre>    @SuppressWarnings 可以修饰的程序元素为，查看@Target </pre></td></tr><tr><td data-num=\"19\"></td><td><pre>    生成@SupperssWarnings时，不用背，直接点击左侧的黄色提示，就可以选择<span class=\"token punctuation\">(</span>注意可以指定生成的位置<span class=\"token punctuation\">)</span></pre></td></tr></table></figure><h1 id=\"四种元注解\"><a class=\"anchor\" href=\"#四种元注解\">#</a> 四种元注解</h1>\n<ul>\n<li>Retention // 指定注解的作用范围，三种 SOURCE,CLASS, RUNTIME</li>\n<li>Target // 指定注解可以在哪些地方使用</li>\n<li>Documented // 指定该注解是否会在 javadoc 体现</li>\n<li>Inherited // 子类会继承父类注解</li>\n</ul>\n",
            "tags": [
                "学习Java",
                "Java基础",
                "java"
            ]
        },
        {
            "id": "https://love.youhuamao.xyz/2022/10/21/Java/SSM/Mybatis/%E5%88%9D%E8%AF%86%E5%88%ABMybatis/",
            "url": "https://love.youhuamao.xyz/2022/10/21/Java/SSM/Mybatis/%E5%88%9D%E8%AF%86%E5%88%ABMybatis/",
            "title": "初识别Mybatis",
            "date_published": "2022-10-20T16:00:00.000Z",
            "content_html": "<h1 id=\"mybatis-928\"><a class=\"anchor\" href=\"#mybatis-928\">#</a> Mybatis-9.28</h1>\n<ul>\n<li>环境</li>\n</ul>\n<ol>\n<li>JDK1.8</li>\n<li>Mysql 5.7</li>\n<li>maven 3.6.1</li>\n<li>IDEA</li>\n</ol>\n<h1 id=\"什么是mybatis\"><a class=\"anchor\" href=\"#什么是mybatis\">#</a> 什么是 Mybatis</h1>\n<ul>\n<li>MyBatis 是一款优秀的持久层框架</li>\n<li>它支持定制化 SQL、存储过程以及高级映射。</li>\n<li>MyBatis 避免了几乎所有的 JDBC 代码和手动设置参数以及获取结果集。</li>\n<li>MyBatis 可以使用简单的 XML 或注解来配置和映射原生类型、接口和 Java 的 POJO (Plain Old Java</li>\n<li>Objects, 普通老式 Java 对象) 为数据库中的记录。</li>\n<li>MyBatis 本是 apache 的一一个开源项目 Batis, 2010 年这个项目由 apache software foundation 迁移到了</li>\n<li>google code, 并且改名为 MyBatis。</li>\n<li>2013 年 11 月迁移到 Github.</li>\n</ul>\n<h1 id=\"如何获得mybatis\"><a class=\"anchor\" href=\"#如何获得mybatis\">#</a> 如何获得 Mybatis</h1>\n<ul>\n<li>maven 仓库</li>\n</ul>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token operator\">&lt;</span><span class=\"token operator\">!</span>-- https: //mvnreposi tory. com/arti fact/org.mybatis/mybatis --<span class=\"token operator\">></span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token operator\">&lt;</span>dependency<span class=\"token operator\">></span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    <span class=\"token operator\">&lt;</span>groupId<span class=\"token operator\">></span>org. mybatis<span class=\"token operator\">&lt;</span>/groupId<span class=\"token operator\">></span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    <span class=\"token operator\">&lt;</span>artifactId<span class=\"token operator\">></span>mybatis<span class=\"token operator\">&lt;</span>/artifactId<span class=\"token operator\">></span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    <span class=\"token operator\">&lt;</span>version<span class=\"token operator\">></span><span class=\"token number\">3.5</span>.<span class=\"token operator\"><span class=\"token file-descriptor important\">2</span>&lt;</span>/versi on<span class=\"token operator\">></span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token operator\">&lt;</span>/dependency<span class=\"token operator\">></span></pre></td></tr></table></figure><ul>\n<li>Github:<span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL215YmF0aXMvbXliYXRpcy0zL3JlbGVhc2Vz\">https://github.com/mybatis/mybatis-3/releases</span></li>\n<li>中文文档: <span class=\"exturl\" data-url=\"aHR0cHM6Ly9teWJhdGlzLm9yZy9teWJhdGlzLTMvemgvaW5kZXguaHRtbA==\">https://mybatis.org/mybatis-3/zh/index.html</span></li>\n</ul>\n<h1 id=\"持久化\"><a class=\"anchor\" href=\"#持久化\">#</a> 持久化</h1>\n<ul>\n<li>数据持久化</li>\n</ul>\n<ol>\n<li>持久化就是将程序的数据在持久状态和瞬时状态转化的过程</li>\n<li>内存：断电即失</li>\n<li>数据库 (Jdbc), io 文件持久化。</li>\n<li>生活：冷藏。罐头。</li>\n</ol>\n<ul>\n<li>为什么需要持久化</li>\n</ul>\n<ol>\n<li>有一些对象，不能让他丢掉</li>\n<li>内存太贵了</li>\n</ol>\n<h1 id=\"持久层\"><a class=\"anchor\" href=\"#持久层\">#</a> 持久层</h1>\n<ul>\n<li>Dao 层，Service 层， Controller 层. ..</li>\n<li>完成持久化工作的代码块</li>\n<li>层界限十分明显。</li>\n</ul>\n<h1 id=\"为什么需要mybatis\"><a class=\"anchor\" href=\"#为什么需要mybatis\">#</a> 为什么需要 Mybatis</h1>\n<ul>\n<li>帮助程序猿将数据存入到数据库中。</li>\n<li>方便</li>\n<li>传统的 JDBC 代码太复杂了。简化。框架。自动化。</li>\n<li>不用 Mybatis 也可以。 更容易上手。技术没有高低之分</li>\n<li>优点:</li>\n</ul>\n<ol>\n<li>简单易学</li>\n<li>灵活</li>\n<li>sq | 和代码的分离，提高了可维护性。</li>\n<li>提供映射标签，支持对象与数据库的 orm 字段关系映射</li>\n<li>提供对象关系映射标签，支持对象关系组建维护</li>\n<li>提供 xml 标签，支持编写动态 sq|。</li>\n</ol>\n<h1 id=\"第一个mybatis程序\"><a class=\"anchor\" href=\"#第一个mybatis程序\">#</a> 第一个 Mybatis 程序</h1>\n<h2 id=\"搭建环境\"><a class=\"anchor\" href=\"#搭建环境\">#</a> 搭建环境</h2>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>CREATE DATABASE <span class=\"token variable\"><span class=\"token variable\">`</span>mybatis<span class=\"token variable\">`</span></span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>USE <span class=\"token variable\"><span class=\"token variable\">`</span>mybatis<span class=\"token variable\">`</span></span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>CREATE TABLE <span class=\"token variable\"><span class=\"token variable\">`</span>user<span class=\"token variable\">`</span></span><span class=\"token punctuation\">(</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>\t<span class=\"token variable\"><span class=\"token variable\">`</span><span class=\"token function\">id</span><span class=\"token variable\">`</span></span> INT <span class=\"token punctuation\">(</span><span class=\"token number\">20</span><span class=\"token punctuation\">)</span> NOT NULL PRIMARY KEY,\t</pre></td></tr><tr><td data-num=\"7\"></td><td><pre>\t<span class=\"token variable\"><span class=\"token variable\">`</span>name<span class=\"token variable\">`</span></span> VARCHAR <span class=\"token punctuation\">(</span><span class=\"token number\">30</span><span class=\"token punctuation\">)</span> DEFAULT NULL,</pre></td></tr><tr><td data-num=\"8\"></td><td><pre>\t<span class=\"token variable\"><span class=\"token variable\">`</span><span class=\"token builtin class-name\">pwd</span><span class=\"token variable\">`</span></span> VARCHAR <span class=\"token punctuation\">(</span><span class=\"token number\">30</span><span class=\"token punctuation\">)</span> DEFAULT NULL</pre></td></tr><tr><td data-num=\"9\"></td><td><pre><span class=\"token punctuation\">)</span> <span class=\"token assign-left variable\">ENGINE</span><span class=\"token operator\">=</span> INNODB DEFAULT <span class=\"token assign-left variable\">CHARSET</span><span class=\"token operator\">=</span>utf8<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>INSERT INTO <span class=\"token variable\"><span class=\"token variable\">`</span>user<span class=\"token variable\">`</span></span><span class=\"token punctuation\">(</span><span class=\"token variable\"><span class=\"token variable\">`</span><span class=\"token function\">id</span><span class=\"token variable\">`</span></span>,<span class=\"token variable\"><span class=\"token variable\">`</span>name<span class=\"token variable\">`</span></span>,<span class=\"token variable\"><span class=\"token variable\">`</span><span class=\"token builtin class-name\">pwd</span><span class=\"token variable\">`</span></span><span class=\"token punctuation\">)</span> VALUES</pre></td></tr><tr><td data-num=\"12\"></td><td><pre><span class=\"token punctuation\">(</span><span class=\"token number\">1</span>,<span class=\"token string\">'幽化猫'</span>,<span class=\"token string\">'123456'</span><span class=\"token punctuation\">)</span> ,</pre></td></tr><tr><td data-num=\"13\"></td><td><pre><span class=\"token punctuation\">(</span><span class=\"token number\">2</span>,<span class=\"token string\">'张三'</span>,<span class=\"token string\">'123456'</span><span class=\"token punctuation\">)</span> ,</pre></td></tr><tr><td data-num=\"14\"></td><td><pre><span class=\"token punctuation\">(</span><span class=\"token number\">3</span>,<span class=\"token string\">'李四'</span>,<span class=\"token string\">'123456'</span><span class=\"token punctuation\">)</span></pre></td></tr></table></figure><h2 id=\"新建项目\"><a class=\"anchor\" href=\"#新建项目\">#</a> 新建项目</h2>\n<ul>\n<li>新建一一个普通的 maven 项目</li>\n<li>删除 src 目录</li>\n<li>导入 maven 依赖</li>\n</ul>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token operator\">&lt;</span><span class=\"token operator\">!</span>--导入依赖--<span class=\"token operator\">></span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>    <span class=\"token operator\">&lt;</span>dependencies<span class=\"token operator\">></span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>        <span class=\"token operator\">&lt;</span><span class=\"token operator\">!</span>--mysql驱动--<span class=\"token operator\">></span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>        <span class=\"token operator\">&lt;</span>dependency<span class=\"token operator\">></span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>            <span class=\"token operator\">&lt;</span>groupId<span class=\"token operator\">></span>mysql<span class=\"token operator\">&lt;</span>/groupId<span class=\"token operator\">></span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>            <span class=\"token operator\">&lt;</span>artifactId<span class=\"token operator\">></span>mysql-connector-java<span class=\"token operator\">&lt;</span>/artifactId<span class=\"token operator\">></span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>            <span class=\"token operator\">&lt;</span>version<span class=\"token operator\">></span><span class=\"token number\">5.1</span>.4<span class=\"token operator\"><span class=\"token file-descriptor important\">6</span>&lt;</span>/version<span class=\"token operator\">></span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>        <span class=\"token operator\">&lt;</span>/dependency<span class=\"token operator\">></span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>        <span class=\"token operator\">&lt;</span><span class=\"token operator\">!</span>--mybatis--<span class=\"token operator\">></span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>        <span class=\"token operator\">&lt;</span>dependency<span class=\"token operator\">></span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>            <span class=\"token operator\">&lt;</span>groupId<span class=\"token operator\">></span>org.mybatis<span class=\"token operator\">&lt;</span>/groupId<span class=\"token operator\">></span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>            <span class=\"token operator\">&lt;</span>artifactId<span class=\"token operator\">></span>mybatis<span class=\"token operator\">&lt;</span>/artifactId<span class=\"token operator\">></span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>            <span class=\"token operator\">&lt;</span>version<span class=\"token operator\">></span><span class=\"token number\">3.5</span>.<span class=\"token operator\"><span class=\"token file-descriptor important\">2</span>&lt;</span>/version<span class=\"token operator\">></span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>        <span class=\"token operator\">&lt;</span>/dependency<span class=\"token operator\">></span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>        <span class=\"token operator\">&lt;</span><span class=\"token operator\">!</span>--junit--<span class=\"token operator\">></span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>        <span class=\"token operator\">&lt;</span>dependency<span class=\"token operator\">></span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>            <span class=\"token operator\">&lt;</span>groupId<span class=\"token operator\">></span>junit<span class=\"token operator\">&lt;</span>/groupId<span class=\"token operator\">></span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>            <span class=\"token operator\">&lt;</span>artifactId<span class=\"token operator\">></span>junit<span class=\"token operator\">&lt;</span>/artifactId<span class=\"token operator\">></span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>            <span class=\"token operator\">&lt;</span>version<span class=\"token operator\">></span><span class=\"token number\">4.1</span><span class=\"token operator\"><span class=\"token file-descriptor important\">2</span>&lt;</span>/version<span class=\"token operator\">></span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>        <span class=\"token operator\">&lt;</span>/dependency<span class=\"token operator\">></span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>    <span class=\"token operator\">&lt;</span>/dependencies<span class=\"token operator\">></span></pre></td></tr></table></figure><h2 id=\"创建模块\"><a class=\"anchor\" href=\"#创建模块\">#</a> 创建模块</h2>\n<ul>\n<li>编写 mybatis 的核心配置文件</li>\n</ul>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token operator\">&lt;</span>?xml <span class=\"token assign-left variable\">version</span><span class=\"token operator\">=</span><span class=\"token string\">\"1.0\"</span> <span class=\"token assign-left variable\">encoding</span><span class=\"token operator\">=</span><span class=\"token string\">\"UTF-8\"</span> ?<span class=\"token operator\">></span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token operator\">&lt;</span><span class=\"token operator\">!</span>DOCTYPE configuration</pre></td></tr><tr><td data-num=\"3\"></td><td><pre>        PUBLIC <span class=\"token string\">\"-//mybatis.org//DTD Config 3.0//EN\"</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>        <span class=\"token string\">\"https://mybatis.org/dtd/mybatis-3-config.dtd\"</span><span class=\"token operator\">></span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token operator\">&lt;</span>configuration<span class=\"token operator\">></span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>    <span class=\"token operator\">&lt;</span>environments <span class=\"token assign-left variable\">default</span><span class=\"token operator\">=</span><span class=\"token string\">\"development\"</span><span class=\"token operator\">></span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>        <span class=\"token operator\">&lt;</span>environment <span class=\"token assign-left variable\">id</span><span class=\"token operator\">=</span><span class=\"token string\">\"development\"</span><span class=\"token operator\">></span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>            <span class=\"token operator\">&lt;</span>transactionManager <span class=\"token assign-left variable\">type</span><span class=\"token operator\">=</span><span class=\"token string\">\"JDBC\"</span>/<span class=\"token operator\">></span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>            <span class=\"token operator\">&lt;</span>dataSource <span class=\"token assign-left variable\">type</span><span class=\"token operator\">=</span><span class=\"token string\">\"POOLED\"</span><span class=\"token operator\">></span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>                <span class=\"token operator\">&lt;</span>property <span class=\"token assign-left variable\">name</span><span class=\"token operator\">=</span><span class=\"token string\">\"driver\"</span> <span class=\"token assign-left variable\">value</span><span class=\"token operator\">=</span><span class=\"token string\">\"com.mysql.jdbc.Driver\"</span>/<span class=\"token operator\">></span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>                <span class=\"token operator\">&lt;</span>property <span class=\"token assign-left variable\">name</span><span class=\"token operator\">=</span><span class=\"token string\">\"url\"</span> <span class=\"token assign-left variable\">value</span><span class=\"token operator\">=</span><span class=\"token string\">\"jdbc:mysql://localhost:3306?useSSL=true&amp;amp;useUnicode=true&amp;amp;characterEncoding=UTF-8 \"</span>/<span class=\"token operator\">></span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>                <span class=\"token operator\">&lt;</span>property <span class=\"token assign-left variable\">name</span><span class=\"token operator\">=</span><span class=\"token string\">\"username\"</span> <span class=\"token assign-left variable\">value</span><span class=\"token operator\">=</span><span class=\"token string\">\"root\"</span>/<span class=\"token operator\">></span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>                <span class=\"token operator\">&lt;</span>property <span class=\"token assign-left variable\">name</span><span class=\"token operator\">=</span><span class=\"token string\">\"password\"</span> <span class=\"token assign-left variable\">value</span><span class=\"token operator\">=</span><span class=\"token string\">\"g123698745\"</span>/<span class=\"token operator\">></span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>            <span class=\"token operator\">&lt;</span>/dataSource<span class=\"token operator\">></span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>        <span class=\"token operator\">&lt;</span>/environment<span class=\"token operator\">></span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>    <span class=\"token operator\">&lt;</span>/environments<span class=\"token operator\">></span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>    <span class=\"token operator\">&lt;</span>mappers<span class=\"token operator\">></span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>        <span class=\"token operator\">&lt;</span>mapper <span class=\"token assign-left variable\">resource</span><span class=\"token operator\">=</span><span class=\"token string\">\"org/mybatis/example/BlogMapper.xml\"</span>/<span class=\"token operator\">></span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>    <span class=\"token operator\">&lt;</span>/mappers<span class=\"token operator\">></span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre><span class=\"token operator\">&lt;</span>/configuration<span class=\"token operator\">></span></pre></td></tr></table></figure><ul>\n<li>编写工具类</li>\n</ul>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>package com.kuang.utils<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token function\">import</span> org.apache.ibatis.io.Resources<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token function\">import</span> org.apache.ibatis.session.SqlSession<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token function\">import</span> org.apache.ibatis.session.SqlSessionFactory<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token function\">import</span> org.apache.ibatis.session.SqlSessionFactoryBuilder<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre></pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token function\">import</span> java.io.IOException<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre><span class=\"token function\">import</span> java.io.InputStream<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>//sqlSessionFactory --<span class=\"token operator\">></span> sqlSession</pre></td></tr><tr><td data-num=\"12\"></td><td><pre>public class MybatisUtils <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>    private static SqlSessionFactory sqlSessionFactory<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>    static <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>        try <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>            //使用Mybatis第一步: 获取sqLSess ionFactory对象</pre></td></tr><tr><td data-num=\"18\"></td><td><pre>            String resource <span class=\"token operator\">=</span> <span class=\"token string\">\"mybatis-config.xml\"</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>            InputStream inputStream <span class=\"token operator\">=</span> Resources.getResourceAsStream<span class=\"token punctuation\">(</span>resource<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>            sqlSessionFactory <span class=\"token operator\">=</span> new SqlSessionFactoryBuilder<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>.build<span class=\"token punctuation\">(</span>inputStream<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span> catch <span class=\"token punctuation\">(</span>IOException e<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>            throw new RuntimeException<span class=\"token punctuation\">(</span>e<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre></pre></td></tr><tr><td data-num=\"26\"></td><td><pre>    //既然有了SqlSessionFactory, 顾名思义，我们就可以从中获得SqLSession 的实例了。</pre></td></tr><tr><td data-num=\"27\"></td><td><pre>    // SqlSession 完企包含了面向数据库执行SQL命令所需的所有方法.</pre></td></tr><tr><td data-num=\"28\"></td><td><pre>    public static SqlSession <span class=\"token function-name function\">getSqlSession</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"29\"></td><td><pre>        <span class=\"token builtin class-name\">return</span> sqlSessionFactory.openSession<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"30\"></td><td><pre></pre></td></tr><tr><td data-num=\"31\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"32\"></td><td><pre></pre></td></tr><tr><td data-num=\"33\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><h2 id=\"编写代码\"><a class=\"anchor\" href=\"#编写代码\">#</a> 编写代码</h2>\n<ul>\n<li>实体类</li>\n</ul>\n<figure class=\"highlight java\"><figcaption data-lang=\"java\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">User</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>    <span class=\"token keyword\">private</span> <span class=\"token keyword\">int</span> id<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    <span class=\"token keyword\">private</span> <span class=\"token class-name\">String</span> name<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    <span class=\"token keyword\">private</span> <span class=\"token class-name\">String</span> pwd<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token class-name\">User</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> id<span class=\"token punctuation\">,</span> <span class=\"token class-name\">String</span> name<span class=\"token punctuation\">,</span> <span class=\"token class-name\">String</span> pwd<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>        <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>id <span class=\"token operator\">=</span> id<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>        <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>name <span class=\"token operator\">=</span> name<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>        <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>pwd <span class=\"token operator\">=</span> pwd<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token keyword\">int</span> <span class=\"token function\">getId</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>        <span class=\"token keyword\">return</span> id<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token keyword\">void</span> <span class=\"token function\">setId</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> id<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>        <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>id <span class=\"token operator\">=</span> id<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token class-name\">String</span> <span class=\"token function\">getName</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>        <span class=\"token keyword\">return</span> name<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token keyword\">void</span> <span class=\"token function\">setName</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">String</span> name<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre>        <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>name <span class=\"token operator\">=</span> name<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre></pre></td></tr><tr><td data-num=\"28\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token class-name\">String</span> <span class=\"token function\">getPwd</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"29\"></td><td><pre>        <span class=\"token keyword\">return</span> pwd<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"30\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"31\"></td><td><pre></pre></td></tr><tr><td data-num=\"32\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token keyword\">void</span> <span class=\"token function\">setPwd</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">String</span> pwd<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"33\"></td><td><pre>        <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>pwd <span class=\"token operator\">=</span> pwd<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"34\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"35\"></td><td><pre></pre></td></tr><tr><td data-num=\"36\"></td><td><pre>    <span class=\"token annotation punctuation\">@Override</span></pre></td></tr><tr><td data-num=\"37\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token class-name\">String</span>  <span class=\"token function\">toString</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"38\"></td><td><pre>        <span class=\"token keyword\">return</span> <span class=\"token string\">\"User&#123;\"</span> <span class=\"token operator\">+</span></pre></td></tr><tr><td data-num=\"39\"></td><td><pre>                <span class=\"token string\">\"id=\"</span> <span class=\"token operator\">+</span> id <span class=\"token operator\">+</span></pre></td></tr><tr><td data-num=\"40\"></td><td><pre>                <span class=\"token string\">\", name='\"</span> <span class=\"token operator\">+</span> name <span class=\"token operator\">+</span> <span class=\"token char\">'\\''</span> <span class=\"token operator\">+</span></pre></td></tr><tr><td data-num=\"41\"></td><td><pre>                <span class=\"token string\">\", pwd='\"</span> <span class=\"token operator\">+</span> pwd <span class=\"token operator\">+</span> <span class=\"token char\">'\\''</span> <span class=\"token operator\">+</span></pre></td></tr><tr><td data-num=\"42\"></td><td><pre>                <span class=\"token char\">'&#125;'</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"43\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"44\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><ul>\n<li>Dao 接口</li>\n</ul>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>pub1ic interface UserDao <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>    List<span class=\"token operator\">&lt;</span>User<span class=\"token operator\">></span> getuserlist<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><ul>\n<li>接口实现类由原来的 UserDaoImpl 转变为一个 Mapper 配置文件</li>\n</ul>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token operator\">&lt;</span>?xml <span class=\"token assign-left variable\">version</span><span class=\"token operator\">=</span><span class=\"token string\">\"1.0\"</span> <span class=\"token assign-left variable\">encoding</span><span class=\"token operator\">=</span><span class=\"token string\">\"UTF-8\"</span> ?<span class=\"token operator\">></span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token operator\">&lt;</span><span class=\"token operator\">!</span>DOCTYPE mapper</pre></td></tr><tr><td data-num=\"3\"></td><td><pre>        PUBLIC <span class=\"token string\">\"-//mybatis.org//DTD Mapper 3.0//EN\"</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>        <span class=\"token string\">\"https://mybatis.org/dtd/mybatis-3-mapper.dtd\"</span><span class=\"token operator\">></span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token operator\">&lt;</span><span class=\"token operator\">!</span>--namespace<span class=\"token operator\">=</span>绑定一个 对应的Dao/Mapper接口--<span class=\"token operator\">></span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token operator\">&lt;</span>mapper <span class=\"token assign-left variable\">namespace</span><span class=\"token operator\">=</span><span class=\"token string\">\"com.kuang.dao.UseDao\"</span><span class=\"token operator\">></span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>    <span class=\"token operator\">&lt;</span>select <span class=\"token assign-left variable\">id</span><span class=\"token operator\">=</span><span class=\"token string\">\"getUserList\"</span> <span class=\"token assign-left variable\">resultType</span><span class=\"token operator\">=</span><span class=\"token string\">\"com.kuang.pojo.User\"</span><span class=\"token operator\">></span> // <span class=\"token operator\">!</span><span class=\"token operator\">!</span>编写配置文件中的类要写全路径<span class=\"token operator\">!</span><span class=\"token operator\">!</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>        <span class=\"token keyword\">select</span> * from mybatis.user<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>    <span class=\"token operator\">&lt;</span>/select<span class=\"token operator\">></span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre><span class=\"token operator\">&lt;</span>/mapper<span class=\"token operator\">></span></pre></td></tr></table></figure><h2 id=\"测试\"><a class=\"anchor\" href=\"#测试\">#</a> 测试</h2>\n<p>常见错误</p>\n<ul>\n<li>org.apache.ibatis.binding.BindingException: Type interface com.kuang.dao.UserDao is not known to the MapperRegistry.</li>\n</ul>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token operator\">&lt;</span>mappers<span class=\"token operator\">></span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>        <span class=\"token operator\">&lt;</span>mapper <span class=\"token assign-left variable\">resource</span><span class=\"token operator\">=</span><span class=\"token string\">\"com/kuang/dao/UserMapper.xml\"</span>/<span class=\"token operator\">></span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    <span class=\"token operator\">&lt;</span>/mappers<span class=\"token operator\">></span></pre></td></tr></table></figure><ul>\n<li>资源导出问题</li>\n</ul>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>在pom.xml加上</pre></td></tr><tr><td data-num=\"2\"></td><td><pre>    <span class=\"token operator\">&lt;</span>build<span class=\"token operator\">></span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>        <span class=\"token operator\">&lt;</span>resources<span class=\"token operator\">></span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>            <span class=\"token operator\">&lt;</span>resource<span class=\"token operator\">></span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>                <span class=\"token operator\">&lt;</span>directory<span class=\"token operator\">></span>src/main/resources<span class=\"token operator\">&lt;</span>/directory<span class=\"token operator\">></span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>                <span class=\"token operator\">&lt;</span>includes<span class=\"token operator\">></span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>                    <span class=\"token operator\">&lt;</span>include<span class=\"token operator\">></span>**/*.xml<span class=\"token operator\">&lt;</span>/include<span class=\"token operator\">></span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>                    <span class=\"token operator\">&lt;</span>include<span class=\"token operator\">></span>**/*.properties<span class=\"token operator\">&lt;</span>/include<span class=\"token operator\">></span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>                <span class=\"token operator\">&lt;</span>/includes<span class=\"token operator\">></span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>                <span class=\"token operator\">&lt;</span>filtering<span class=\"token operator\">></span>true<span class=\"token operator\">&lt;</span>/filtering<span class=\"token operator\">></span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>            <span class=\"token operator\">&lt;</span>/resource<span class=\"token operator\">></span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>            <span class=\"token operator\">&lt;</span>resource<span class=\"token operator\">></span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>                <span class=\"token operator\">&lt;</span>directory<span class=\"token operator\">></span>src/main/java<span class=\"token operator\">&lt;</span>/directory<span class=\"token operator\">></span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>                <span class=\"token operator\">&lt;</span>includes<span class=\"token operator\">></span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>                    <span class=\"token operator\">&lt;</span>include<span class=\"token operator\">></span>**/*.xml<span class=\"token operator\">&lt;</span>/include<span class=\"token operator\">></span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>                    <span class=\"token operator\">&lt;</span>include<span class=\"token operator\">></span>**/*.properties<span class=\"token operator\">&lt;</span>/include<span class=\"token operator\">></span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>                <span class=\"token operator\">&lt;</span>/includes<span class=\"token operator\">></span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>                <span class=\"token operator\">&lt;</span>filtering<span class=\"token operator\">></span>true<span class=\"token operator\">&lt;</span>/filtering<span class=\"token operator\">></span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>            <span class=\"token operator\">&lt;</span>/resource<span class=\"token operator\">></span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>        <span class=\"token operator\">&lt;</span>/resources<span class=\"token operator\">></span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>    <span class=\"token operator\">&lt;</span>/build<span class=\"token operator\">></span></pre></td></tr></table></figure><ul>\n<li>junit 测试</li>\n</ul>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>package com.kuang.dao<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token function\">import</span> com.kuang.pojo.User<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token function\">import</span> com.kuang.utils.MybatisUtils<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token function\">import</span> org.apache.ibatis.session.SqlSession<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token function\">import</span> org.junit.Test<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre></pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token function\">import</span> java.util.List<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>public class UserDaoTest <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>    @Test</pre></td></tr><tr><td data-num=\"13\"></td><td><pre>    public void <span class=\"token function-name function\">test</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>        //获取SqlSession</pre></td></tr><tr><td data-num=\"16\"></td><td><pre>        SqlSession sqlSession <span class=\"token operator\">=</span> MybatisUtils.getSqlSession<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>        try <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>            //方式一 getMapper</pre></td></tr><tr><td data-num=\"20\"></td><td><pre>            UserDao UserDao <span class=\"token operator\">=</span> sqlSession.getMapper<span class=\"token punctuation\">(</span>UserDao.class<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>            List<span class=\"token operator\">&lt;</span>User<span class=\"token operator\">></span> userList <span class=\"token operator\">=</span> UserDao.getUserList<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>            //方式二</pre></td></tr><tr><td data-num=\"23\"></td><td><pre>            //sqlSession.selectList<span class=\"token punctuation\">(</span><span class=\"token string\">\"com.kuang.dao.UserDao.getUserList\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>            for<span class=\"token punctuation\">(</span>User user <span class=\"token builtin class-name\">:</span> userList<span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre>                System.out.println<span class=\"token punctuation\">(</span>user<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre>            <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span>catch <span class=\"token punctuation\">(</span>Exception e<span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre>            e.printStackTrace<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"29\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span>finally <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"30\"></td><td><pre>            sqlSession.close<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"31\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"32\"></td><td><pre></pre></td></tr><tr><td data-num=\"33\"></td><td><pre></pre></td></tr><tr><td data-num=\"34\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"35\"></td><td><pre></pre></td></tr><tr><td data-num=\"36\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure>",
            "tags": [
                "学习Java",
                "SSM",
                "Mybatis",
                "java"
            ]
        },
        {
            "id": "https://love.youhuamao.xyz/2022/10/18/aiproject/%E5%9F%BA%E4%BA%8Ecosine%E7%9B%B8%E4%BC%BC%E5%BA%A6%E7%9A%84%E6%8E%A8%E8%8D%90%E7%B3%BB%E7%BB%9F/",
            "url": "https://love.youhuamao.xyz/2022/10/18/aiproject/%E5%9F%BA%E4%BA%8Ecosine%E7%9B%B8%E4%BC%BC%E5%BA%A6%E7%9A%84%E6%8E%A8%E8%8D%90%E7%B3%BB%E7%BB%9F/",
            "title": "基于cosine相似度的推荐系统",
            "date_published": "2022-10-17T16:00:00.000Z",
            "content_html": "<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">import</span> numpy <span class=\"token keyword\">as</span> np</pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">import</span> pandas <span class=\"token keyword\">as</span> pd</pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token keyword\">from</span> sklearn<span class=\"token punctuation\">.</span>metrics<span class=\"token punctuation\">.</span>pairwise <span class=\"token keyword\">import</span> cosine_similarity</pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token keyword\">from</span> sklearn<span class=\"token punctuation\">.</span>feature_extraction<span class=\"token punctuation\">.</span>text <span class=\"token keyword\">import</span> CountVectorizer</pre></td></tr></table></figure><figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>datas <span class=\"token operator\">=</span> pd<span class=\"token punctuation\">.</span>read_csv<span class=\"token punctuation\">(</span><span class=\"token string\">'./movie_dataset.csv'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>datas<span class=\"token punctuation\">[</span><span class=\"token string\">'关键词'</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> datas<span class=\"token punctuation\">[</span><span class=\"token string\">'overview'</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">+</span> datas<span class=\"token punctuation\">[</span><span class=\"token string\">'tagline'</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">+</span> datas<span class=\"token punctuation\">[</span><span class=\"token string\">'keywords'</span><span class=\"token punctuation\">]</span> <span class=\"token comment\">#创建需要向量化的特征</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>data1 <span class=\"token operator\">=</span> datas<span class=\"token punctuation\">.</span>dropna<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>drop_duplicates<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token comment\">#去重去空</span></pre></td></tr></table></figure><figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\"># 文本向量化</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>vectors <span class=\"token operator\">=</span> CountVectorizer<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>  <span class=\"token comment\">#构建对象</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>vects <span class=\"token operator\">=</span> vectors<span class=\"token punctuation\">.</span>fit_transform<span class=\"token punctuation\">(</span>data1<span class=\"token punctuation\">[</span><span class=\"token string\">'关键词'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>X <span class=\"token operator\">=</span> vects<span class=\"token punctuation\">.</span>toarray<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr></table></figure><figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>sample <span class=\"token operator\">=</span> X<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">:</span><span class=\"token number\">1</span><span class=\"token punctuation\">:</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span><span class=\"token number\">0</span><span class=\"token punctuation\">:</span><span class=\"token punctuation\">:</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span> <span class=\"token comment\">#取出 Avatar（阿凡达）的特征向量</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>data2 <span class=\"token operator\">=</span> X<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">:</span><span class=\"token punctuation\">:</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span><span class=\"token number\">0</span><span class=\"token punctuation\">:</span><span class=\"token punctuation\">:</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span> <span class=\"token comment\">#取出除 Avatar（阿凡达）的特征向量</span></pre></td></tr></table></figure><figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>comp_sim <span class=\"token operator\">=</span> cosine_similarity<span class=\"token punctuation\">(</span>sample<span class=\"token punctuation\">,</span>data2<span class=\"token punctuation\">)</span>  <span class=\"token comment\">#计算余弦相似性</span></pre></td></tr></table></figure><figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>result <span class=\"token operator\">=</span> comp_sim<span class=\"token punctuation\">.</span>argsort<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>flatten<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">[</span><span class=\"token operator\">-</span><span class=\"token number\">10</span><span class=\"token punctuation\">:</span><span class=\"token punctuation\">]</span> <span class=\"token comment\">#取出余弦相似度前十</span></pre></td></tr></table></figure><figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>datas<span class=\"token punctuation\">.</span>loc<span class=\"token punctuation\">[</span>result<span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token string\">'original_title'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span> <span class=\"token comment\">#推荐的十个影片名称</span></pre></td></tr></table></figure><pre><code>1117                      Charlie St. Cloud\n496     Cloudy with a Chance of Meatballs 2\n672        Perfume: The Story of a Murderer\n40                                   Cars 2\n66                                       Up\n115                                 Hancock\n225                             Speed Racer\n442                                Face/Off\n312                              Green Zone\n571                    Inglourious Basterds\nName: original_title, dtype: object\n</code></pre>\n",
            "tags": [
                "人工智能项目实例",
                "java"
            ]
        },
        {
            "id": "https://love.youhuamao.xyz/2022/10/18/aiproject/%E5%9F%BA%E4%BA%8ESVD%E5%88%86%E8%A7%A3%E7%9A%84%E5%BD%A9%E8%89%B2%E5%9B%BE%E7%89%87%E5%8E%8B%E7%BC%A9/",
            "url": "https://love.youhuamao.xyz/2022/10/18/aiproject/%E5%9F%BA%E4%BA%8ESVD%E5%88%86%E8%A7%A3%E7%9A%84%E5%BD%A9%E8%89%B2%E5%9B%BE%E7%89%87%E5%8E%8B%E7%BC%A9/",
            "title": "基于SVD分解的彩色图片压缩",
            "date_published": "2022-10-17T16:00:00.000Z",
            "content_html": "<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">from</span> skimage <span class=\"token keyword\">import</span> io</pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">import</span> matplotlib<span class=\"token punctuation\">.</span>pyplot <span class=\"token keyword\">as</span> plt</pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token keyword\">import</span> numpy <span class=\"token keyword\">as</span> np</pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token keyword\">import</span> warnings</pre></td></tr><tr><td data-num=\"5\"></td><td><pre>warnings<span class=\"token punctuation\">.</span>filterwarnings<span class=\"token punctuation\">(</span><span class=\"token string\">\"ignore\"</span><span class=\"token punctuation\">)</span></pre></td></tr></table></figure><figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>img <span class=\"token operator\">=</span> io<span class=\"token punctuation\">.</span>imread<span class=\"token punctuation\">(</span><span class=\"token string\">'tuxiangyangli.jpeg'</span><span class=\"token punctuation\">)</span> <span class=\"token comment\">#读取图片</span></pre></td></tr></table></figure><figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\"># 将图片分成三个通道</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>R <span class=\"token operator\">=</span> img<span class=\"token punctuation\">[</span><span class=\"token punctuation\">:</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">:</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>G <span class=\"token operator\">=</span> img<span class=\"token punctuation\">[</span><span class=\"token punctuation\">:</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">:</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>B <span class=\"token operator\">=</span> img<span class=\"token punctuation\">[</span><span class=\"token punctuation\">:</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">:</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">]</span></pre></td></tr></table></figure><figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\">#SVD 分解 取 K 个特征向量合并 </span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">def</span> <span class=\"token function\">recoverBySVD</span><span class=\"token punctuation\">(</span>imgMat<span class=\"token punctuation\">,</span> k<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>   </pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    U<span class=\"token punctuation\">,</span> s<span class=\"token punctuation\">,</span> VT <span class=\"token operator\">=</span> np<span class=\"token punctuation\">.</span>linalg<span class=\"token punctuation\">.</span>svd<span class=\"token punctuation\">(</span>imgMat<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    </pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    Uk <span class=\"token operator\">=</span> U<span class=\"token punctuation\">[</span><span class=\"token punctuation\">:</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">:</span>k<span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>    sk <span class=\"token operator\">=</span> np<span class=\"token punctuation\">.</span>diag<span class=\"token punctuation\">(</span>s<span class=\"token punctuation\">[</span><span class=\"token punctuation\">:</span>k<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>    Vk <span class=\"token operator\">=</span> VT<span class=\"token punctuation\">[</span><span class=\"token punctuation\">:</span>k<span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>    </pre></td></tr><tr><td data-num=\"9\"></td><td><pre>    new_img <span class=\"token operator\">=</span> Uk @ sk @ Vk</pre></td></tr><tr><td data-num=\"10\"></td><td><pre>    <span class=\"token keyword\">return</span> new_img</pre></td></tr></table></figure><figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\"># 将三通道的图片合并</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">def</span> <span class=\"token function\">recoverRGB</span><span class=\"token punctuation\">(</span>R<span class=\"token punctuation\">,</span> G<span class=\"token punctuation\">,</span> B<span class=\"token punctuation\">,</span> k<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>   </pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    reR <span class=\"token operator\">=</span> recoverBySVD<span class=\"token punctuation\">(</span>R<span class=\"token punctuation\">,</span>k<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    reG <span class=\"token operator\">=</span> recoverBySVD<span class=\"token punctuation\">(</span>G<span class=\"token punctuation\">,</span>k<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    reB <span class=\"token operator\">=</span> recoverBySVD<span class=\"token punctuation\">(</span>B<span class=\"token punctuation\">,</span>k<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>    reI <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>np<span class=\"token punctuation\">.</span>stack<span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>reR<span class=\"token punctuation\">,</span>reG<span class=\"token punctuation\">,</span>reB<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span><span class=\"token number\">2</span><span class=\"token punctuation\">)</span><span class=\"token operator\">/</span><span class=\"token number\">255</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>    <span class=\"token keyword\">return</span> reI</pre></td></tr></table></figure><figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>plt<span class=\"token punctuation\">.</span>imshow<span class=\"token punctuation\">(</span>recoverRGB<span class=\"token punctuation\">(</span>R<span class=\"token punctuation\">,</span> G<span class=\"token punctuation\">,</span> B<span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr></table></figure><pre><code>Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).\n\n\n\n\n\n&lt;matplotlib.image.AxesImage at 0x1cbea863cd0&gt;\n</code></pre>\n<p><img data-src=\"/pic/%E4%BA%BA%E5%B7%A5%E6%99%BA%E8%83%BD%E9%A1%B9%E7%9B%AE%E5%AE%9E%E4%BE%8B/g20221018008.png\" alt=\"png\" /></p>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>plt<span class=\"token punctuation\">.</span>imshow<span class=\"token punctuation\">(</span>recoverRGB<span class=\"token punctuation\">(</span>R<span class=\"token punctuation\">,</span> G<span class=\"token punctuation\">,</span> B<span class=\"token punctuation\">,</span> <span class=\"token number\">5</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr></table></figure><pre><code>Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).\n\n\n\n\n\n&lt;matplotlib.image.AxesImage at 0x1cbea819be0&gt;\n</code></pre>\n<p><img data-src=\"/pic/%E4%BA%BA%E5%B7%A5%E6%99%BA%E8%83%BD%E9%A1%B9%E7%9B%AE%E5%AE%9E%E4%BE%8B/a20221018008.png\" alt=\"png\" /></p>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>plt<span class=\"token punctuation\">.</span>imshow<span class=\"token punctuation\">(</span>recoverRGB<span class=\"token punctuation\">(</span>R<span class=\"token punctuation\">,</span> G<span class=\"token punctuation\">,</span> B<span class=\"token punctuation\">,</span> <span class=\"token number\">10</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr></table></figure><pre><code>Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).\n\n\n\n\n\n&lt;matplotlib.image.AxesImage at 0x1cbea792ca0&gt;\n</code></pre>\n<p><img data-src=\"/pic/%E4%BA%BA%E5%B7%A5%E6%99%BA%E8%83%BD%E9%A1%B9%E7%9B%AE%E5%AE%9E%E4%BE%8B/b20221018008.png\" alt=\"png\" /></p>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>plt<span class=\"token punctuation\">.</span>imshow<span class=\"token punctuation\">(</span>recoverRGB<span class=\"token punctuation\">(</span>R<span class=\"token punctuation\">,</span> G<span class=\"token punctuation\">,</span> B<span class=\"token punctuation\">,</span> <span class=\"token number\">20</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr></table></figure><pre><code>Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).\n\n\n\n\n\n&lt;matplotlib.image.AxesImage at 0x1cbda65f4c0&gt;\n</code></pre>\n<p><img data-src=\"/pic/%E4%BA%BA%E5%B7%A5%E6%99%BA%E8%83%BD%E9%A1%B9%E7%9B%AE%E5%AE%9E%E4%BE%8B/c20221018008.png\" alt=\"png\" /></p>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>R<span class=\"token punctuation\">.</span>shape</pre></td></tr></table></figure><pre><code>(316, 316)\n</code></pre>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>A <span class=\"token operator\">=</span> np<span class=\"token punctuation\">.</span>zeros<span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token number\">316</span><span class=\"token punctuation\">,</span><span class=\"token number\">316</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr></table></figure><figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>plt<span class=\"token punctuation\">.</span>imshow<span class=\"token punctuation\">(</span>recoverRGB<span class=\"token punctuation\">(</span>R<span class=\"token punctuation\">,</span> G<span class=\"token punctuation\">,</span> A<span class=\"token punctuation\">,</span> <span class=\"token number\">50</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr></table></figure><pre><code>Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).\n\n\n\n\n\n&lt;matplotlib.image.AxesImage at 0x1cbda6ac040&gt;\n</code></pre>\n<p><img data-src=\"/pic/%E4%BA%BA%E5%B7%A5%E6%99%BA%E8%83%BD%E9%A1%B9%E7%9B%AE%E5%AE%9E%E4%BE%8B/d20221018008.png\" alt=\"png\" /></p>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>U<span class=\"token punctuation\">,</span> s<span class=\"token punctuation\">,</span> VT <span class=\"token operator\">=</span> np<span class=\"token punctuation\">.</span>linalg<span class=\"token punctuation\">.</span>svd<span class=\"token punctuation\">(</span>img<span class=\"token punctuation\">)</span></pre></td></tr></table></figure><figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>A <span class=\"token operator\">=</span> U @ s @VT</pre></td></tr><tr><td data-num=\"2\"></td><td><pre>plt<span class=\"token punctuation\">.</span>imshow<span class=\"token punctuation\">(</span>A<span class=\"token operator\">/</span><span class=\"token number\">255</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>plt<span class=\"token punctuation\">.</span>show</pre></td></tr></table></figure><pre><code>Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).\n\n\n\n\n\n&lt;function matplotlib.pyplot.show(close=None, block=None)&gt;\n</code></pre>\n<p><img data-src=\"/pic/%E4%BA%BA%E5%B7%A5%E6%99%BA%E8%83%BD%E9%A1%B9%E7%9B%AE%E5%AE%9E%E4%BE%8B/e20221018008.png\" alt=\"png\" /></p>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>A <span class=\"token operator\">=</span> U @ s @VT</pre></td></tr><tr><td data-num=\"2\"></td><td><pre>plt<span class=\"token punctuation\">.</span>imshow<span class=\"token punctuation\">(</span>A<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>plt<span class=\"token punctuation\">.</span>show</pre></td></tr></table></figure><pre><code>Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).\n\n\n\n\n\n&lt;function matplotlib.pyplot.show(close=None, block=None)&gt;\n</code></pre>\n<p><img data-src=\"/pic/%E4%BA%BA%E5%B7%A5%E6%99%BA%E8%83%BD%E9%A1%B9%E7%9B%AE%E5%AE%9E%E4%BE%8B/f20221018008.png\" alt=\"png\" /></p>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>A<span class=\"token punctuation\">.</span>shape</pre></td></tr></table></figure><pre><code>(316, 316, 3)\n</code></pre>\n",
            "tags": [
                "人工智能项目实例",
                "java"
            ]
        },
        {
            "id": "https://love.youhuamao.xyz/2022/10/18/aiproject/%E8%AE%A1%E7%AE%97%E5%90%91%E9%87%8F%E7%9A%84%E8%B7%9D%E7%A6%BB(Numpy%E5%AE%9E%E7%8E%B0)/",
            "url": "https://love.youhuamao.xyz/2022/10/18/aiproject/%E8%AE%A1%E7%AE%97%E5%90%91%E9%87%8F%E7%9A%84%E8%B7%9D%E7%A6%BB(Numpy%E5%AE%9E%E7%8E%B0)/",
            "title": "计算向量的距离(Numpy实现)",
            "date_published": "2022-10-17T16:00:00.000Z",
            "content_html": "<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">import</span> numpy <span class=\"token keyword\">as</span> np</pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">from</span> scipy<span class=\"token punctuation\">.</span>spatial <span class=\"token keyword\">import</span> distance</pre></td></tr></table></figure><figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>datas <span class=\"token operator\">=</span> np<span class=\"token punctuation\">.</span>loadtxt<span class=\"token punctuation\">(</span><span class=\"token string\">\"./iris.data\"</span><span class=\"token punctuation\">,</span> dtype <span class=\"token operator\">=</span> <span class=\"token string\">'str'</span><span class=\"token punctuation\">,</span> delimiter<span class=\"token operator\">=</span><span class=\"token string\">\",\"</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>data1 <span class=\"token operator\">=</span> datas<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">:</span><span class=\"token punctuation\">:</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span><span class=\"token number\">0</span><span class=\"token punctuation\">:</span><span class=\"token number\">4</span><span class=\"token punctuation\">]</span>  <span class=\"token comment\">#数据第一行没有用处且会影响后续计算，删掉，取出其中数字</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>data2 <span class=\"token operator\">=</span> data1<span class=\"token punctuation\">.</span>astype<span class=\"token punctuation\">(</span><span class=\"token builtin\">float</span><span class=\"token punctuation\">)</span> <span class=\"token comment\">#将数字类型转化为浮点数</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>data3 <span class=\"token operator\">=</span> datas<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">:</span><span class=\"token punctuation\">:</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span><span class=\"token number\">0</span><span class=\"token punctuation\">:</span><span class=\"token number\">5</span><span class=\"token punctuation\">]</span>  <span class=\"token comment\">#用于拼接备用</span></pre></td></tr></table></figure><figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">def</span> <span class=\"token function\">Distances</span> <span class=\"token punctuation\">(</span>data<span class=\"token punctuation\">,</span>target<span class=\"token punctuation\">,</span>sample<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>    dist <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span>distance<span class=\"token punctuation\">.</span>euclidean<span class=\"token punctuation\">(</span>sample<span class=\"token punctuation\">,</span> data<span class=\"token punctuation\">)</span> <span class=\"token keyword\">for</span> data <span class=\"token keyword\">in</span> data2<span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    dist <span class=\"token operator\">=</span> np<span class=\"token punctuation\">.</span>array<span class=\"token punctuation\">(</span>dist<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    dist <span class=\"token operator\">=</span> dist<span class=\"token punctuation\">[</span><span class=\"token punctuation\">:</span><span class=\"token punctuation\">,</span>np<span class=\"token punctuation\">.</span>newaxis<span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    result <span class=\"token operator\">=</span> np<span class=\"token punctuation\">.</span>concatenate<span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>dist<span class=\"token punctuation\">,</span>data3<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>axis<span class=\"token operator\">=</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>    result <span class=\"token operator\">=</span> np<span class=\"token punctuation\">.</span>sort<span class=\"token punctuation\">(</span>result<span class=\"token punctuation\">,</span>axis<span class=\"token operator\">=</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>    <span class=\"token keyword\">return</span> result</pre></td></tr></table></figure><figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>sample <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token number\">5.9</span> <span class=\"token punctuation\">,</span> <span class=\"token number\">3.5</span><span class=\"token punctuation\">,</span> <span class=\"token number\">4.1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1.7</span><span class=\"token punctuation\">]</span></pre></td></tr></table></figure><figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token punctuation\">(</span>Distances<span class=\"token punctuation\">(</span>data2<span class=\"token punctuation\">,</span>data3<span class=\"token punctuation\">,</span><span class=\"token punctuation\">[</span><span class=\"token number\">5.9</span> <span class=\"token punctuation\">,</span> <span class=\"token number\">3.5</span><span class=\"token punctuation\">,</span> <span class=\"token number\">4.1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1.7</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">:</span><span class=\"token number\">5</span><span class=\"token punctuation\">:</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">:</span><span class=\"token punctuation\">:</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span></pre></td></tr></table></figure><pre><code>array([['0.4358898943540676', '4.3', '2.0', '1.0', '0.1', 'Iris-setosa'],\n       ['0.5477225575051662', '4.4', '2.2', '1.1', '0.1', 'Iris-setosa'],\n       ['0.7071067811865478', '4.4', '2.2', '1.2', '0.1', 'Iris-setosa'],\n       ['0.7348469228349536', '4.4', '2.2', '1.2', '0.1', 'Iris-setosa'],\n       ['0.7348469228349539', '4.5', '2.3', '1.3', '0.1', 'Iris-setosa']],\n      dtype='&lt;U32')\n</code></pre>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>因为K<span class=\"token operator\">=</span><span class=\"token number\">5</span>，由排序结果可知，该样本属于Iris<span class=\"token operator\">-</span>setosa</pre></td></tr></table></figure>",
            "tags": [
                "人工智能项目实例",
                "java"
            ]
        },
        {
            "id": "https://love.youhuamao.xyz/2022/10/18/aiproject/%E5%88%A9%E7%94%A8PCA%E5%AE%8C%E6%88%90%E5%9B%BE%E7%89%87%E7%9A%84%E5%8E%8B%E7%BC%A9%E4%B8%8E%E9%87%8D%E6%9E%84/",
            "url": "https://love.youhuamao.xyz/2022/10/18/aiproject/%E5%88%A9%E7%94%A8PCA%E5%AE%8C%E6%88%90%E5%9B%BE%E7%89%87%E7%9A%84%E5%8E%8B%E7%BC%A9%E4%B8%8E%E9%87%8D%E6%9E%84/",
            "title": "利用PCA完成图片的压缩与重构",
            "date_published": "2022-10-17T16:00:00.000Z",
            "content_html": "<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">import</span> numpy <span class=\"token keyword\">as</span> np</pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">import</span> pandas <span class=\"token keyword\">as</span> pd</pre></td></tr><tr><td data-num=\"3\"></td><td><pre></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token keyword\">import</span> matplotlib<span class=\"token punctuation\">.</span>pyplot <span class=\"token keyword\">as</span> plt</pre></td></tr><tr><td data-num=\"5\"></td><td><pre></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token keyword\">from</span> sklearn<span class=\"token punctuation\">.</span>decomposition <span class=\"token keyword\">import</span> PCA</pre></td></tr><tr><td data-num=\"7\"></td><td><pre></pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token keyword\">import</span> cv2 </pre></td></tr><tr><td data-num=\"9\"></td><td><pre></pre></td></tr><tr><td data-num=\"10\"></td><td><pre><span class=\"token keyword\">import</span> matplotlib<span class=\"token punctuation\">.</span>image <span class=\"token keyword\">as</span> mp </pre></td></tr><tr><td data-num=\"11\"></td><td><pre><span class=\"token keyword\">from</span> sklearn<span class=\"token punctuation\">.</span>decomposition <span class=\"token keyword\">import</span> IncrementalPCA<span class=\"token punctuation\">,</span> PCA</pre></td></tr></table></figure><h1 id=\"三通道展示\"><a class=\"anchor\" href=\"#三通道展示\">#</a> 三通道展示</h1>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>img <span class=\"token operator\">=</span> cv2<span class=\"token punctuation\">.</span>imread<span class=\"token punctuation\">(</span><span class=\"token string\">\"tuxianglianxi.jpeg\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">:</span><span class=\"token punctuation\">:</span><span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>r<span class=\"token punctuation\">,</span> g<span class=\"token punctuation\">,</span> b <span class=\"token operator\">=</span> img<span class=\"token punctuation\">[</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> img<span class=\"token punctuation\">[</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> img<span class=\"token punctuation\">[</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">]</span></pre></td></tr></table></figure><figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>plt<span class=\"token punctuation\">.</span>imshow<span class=\"token punctuation\">(</span>r<span class=\"token punctuation\">)</span></pre></td></tr></table></figure><pre><code>&lt;matplotlib.image.AxesImage at 0x12cc4671cd0&gt;\n</code></pre>\n<p><img data-src=\"/pic/%E4%BA%BA%E5%B7%A5%E6%99%BA%E8%83%BD%E9%A1%B9%E7%9B%AE%E5%AE%9E%E4%BE%8B/20221018017a.png\" alt=\"20221018017a.png\" /></p>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>plt<span class=\"token punctuation\">.</span>imshow<span class=\"token punctuation\">(</span>g<span class=\"token punctuation\">)</span></pre></td></tr></table></figure><pre><code>&lt;matplotlib.image.AxesImage at 0x12cc48d72e0&gt;\n</code></pre>\n<p><img data-src=\"/pic/%E4%BA%BA%E5%B7%A5%E6%99%BA%E8%83%BD%E9%A1%B9%E7%9B%AE%E5%AE%9E%E4%BE%8B/20221018017b.png\" alt=\"png\" /></p>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>plt<span class=\"token punctuation\">.</span>imshow<span class=\"token punctuation\">(</span>b<span class=\"token punctuation\">)</span></pre></td></tr></table></figure><pre><code>&lt;matplotlib.image.AxesImage at 0x12cc4b336d0&gt;\n</code></pre>\n<p><img data-src=\"/pic/%E4%BA%BA%E5%B7%A5%E6%99%BA%E8%83%BD%E9%A1%B9%E7%9B%AE%E5%AE%9E%E4%BE%8B/20221018017c.png\" alt=\"png\" /></p>\n<h1 id=\"转换为灰度图\"><a class=\"anchor\" href=\"#转换为灰度图\">#</a> 转换为灰度图</h1>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">def</span> <span class=\"token function\">grayimg</span><span class=\"token punctuation\">(</span>img<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>  <span class=\"token comment\">#三通道变为灰度图</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>    img_sum <span class=\"token operator\">=</span> img<span class=\"token punctuation\">.</span><span class=\"token builtin\">sum</span><span class=\"token punctuation\">(</span>axis <span class=\"token operator\">=</span> <span class=\"token number\">2</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    img_gray <span class=\"token operator\">=</span> img_sum <span class=\"token operator\">/</span> img_sum<span class=\"token punctuation\">.</span><span class=\"token builtin\">max</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    plt<span class=\"token punctuation\">.</span>imshow<span class=\"token punctuation\">(</span>img_gray<span class=\"token punctuation\">,</span> cmap <span class=\"token operator\">=</span> <span class=\"token string\">'gray'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    <span class=\"token keyword\">return</span> img_gray</pre></td></tr></table></figure><figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>img_gray <span class=\"token operator\">=</span> grayimg<span class=\"token punctuation\">(</span>img<span class=\"token punctuation\">)</span></pre></td></tr></table></figure><p><img data-src=\"/pic/%E4%BA%BA%E5%B7%A5%E6%99%BA%E8%83%BD%E9%A1%B9%E7%9B%AE%E5%AE%9E%E4%BE%8B/20221018017d.png\" alt=\"png\" /></p>\n<h1 id=\"图像压缩\"><a class=\"anchor\" href=\"#图像压缩\">#</a> 图像压缩</h1>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\"># pca = PCA (n_components=0.95, svd_solver='full') #取百分之 95 的信息占比</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token comment\"># pca_imager = pca.fit_transform(r)</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token comment\"># pca_imageg = pca.fit_transform(g)</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token comment\"># pca_imageb = pca.fit_transform(b)</span></pre></td></tr></table></figure><figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\"># var_cumu = np.cumsum(pca.explained_variance_ratio_)</span></pre></td></tr></table></figure><figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\"># reI = (np.stack((pca_imager,pca_imageg,pca_imageb),2)/255)</span></pre></td></tr></table></figure><figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\"># 失败原因 每个通道达到 95 信息占比所需的特征数量不同</span></pre></td></tr></table></figure><figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">def</span> <span class=\"token function\">getK</span><span class=\"token punctuation\">(</span>img_gray<span class=\"token punctuation\">,</span>n<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>  <span class=\"token comment\">#获得保留百分之 n 所要保留的特征数量 k 的值</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>    pca <span class=\"token operator\">=</span> PCA<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    pca_image <span class=\"token operator\">=</span> pca<span class=\"token punctuation\">.</span>fit_transform<span class=\"token punctuation\">(</span>img_gray<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    np<span class=\"token punctuation\">.</span>set_printoptions<span class=\"token punctuation\">(</span>precision <span class=\"token operator\">=</span> <span class=\"token number\">4</span> <span class=\"token punctuation\">,</span> suppress <span class=\"token operator\">=</span> <span class=\"token boolean\">True</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    var_cumu <span class=\"token operator\">=</span> np<span class=\"token punctuation\">.</span>cumsum<span class=\"token punctuation\">(</span>pca<span class=\"token punctuation\">.</span>explained_variance_ratio_<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>    k  <span class=\"token operator\">=</span> np<span class=\"token punctuation\">.</span>argmax<span class=\"token punctuation\">(</span>var_cumu <span class=\"token operator\">></span> n<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>    <span class=\"token keyword\">return</span> k</pre></td></tr></table></figure><figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">def</span> <span class=\"token function\">getKmin</span><span class=\"token punctuation\">(</span>r<span class=\"token punctuation\">,</span>g<span class=\"token punctuation\">,</span>b<span class=\"token punctuation\">,</span>n<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span> <span class=\"token comment\">#获得保留百分之 n 所要保留的特征数量 k 的最小值</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>    num1 <span class=\"token operator\">=</span>getK<span class=\"token punctuation\">(</span>r<span class=\"token punctuation\">,</span>n<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    num2 <span class=\"token operator\">=</span> getK<span class=\"token punctuation\">(</span>g<span class=\"token punctuation\">,</span>n<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    num3 <span class=\"token operator\">=</span> getK<span class=\"token punctuation\">(</span>b<span class=\"token punctuation\">,</span>n<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    <span class=\"token builtin\">max</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>num1 <span class=\"token keyword\">if</span> num1 <span class=\"token operator\">></span> num2 <span class=\"token keyword\">else</span> num2<span class=\"token punctuation\">)</span> <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>num1 <span class=\"token keyword\">if</span> num1 <span class=\"token operator\">></span> num2 <span class=\"token keyword\">else</span> num2<span class=\"token punctuation\">)</span> <span class=\"token operator\">></span> num3 <span class=\"token keyword\">else</span> num3</pre></td></tr><tr><td data-num=\"6\"></td><td><pre>    <span class=\"token keyword\">return</span> <span class=\"token builtin\">max</span></pre></td></tr></table></figure><figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">def</span> <span class=\"token function\">rebuildimg</span><span class=\"token punctuation\">(</span>r<span class=\"token punctuation\">,</span>g<span class=\"token punctuation\">,</span>b<span class=\"token punctuation\">,</span>n<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>  <span class=\"token comment\">#压缩图片并合并</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>    k <span class=\"token operator\">=</span> getKmin<span class=\"token punctuation\">(</span>r<span class=\"token punctuation\">,</span>g<span class=\"token punctuation\">,</span>b<span class=\"token punctuation\">,</span>n<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    ipca <span class=\"token operator\">=</span> IncrementalPCA<span class=\"token punctuation\">(</span>n_components <span class=\"token operator\">=</span> k <span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    image_rebuildr <span class=\"token operator\">=</span> ipca<span class=\"token punctuation\">.</span>inverse_transform<span class=\"token punctuation\">(</span>ipca<span class=\"token punctuation\">.</span>fit_transform<span class=\"token punctuation\">(</span>r<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    image_rebuildg <span class=\"token operator\">=</span> ipca<span class=\"token punctuation\">.</span>inverse_transform<span class=\"token punctuation\">(</span>ipca<span class=\"token punctuation\">.</span>fit_transform<span class=\"token punctuation\">(</span>g<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>    image_rebuildb <span class=\"token operator\">=</span> ipca<span class=\"token punctuation\">.</span>inverse_transform<span class=\"token punctuation\">(</span>ipca<span class=\"token punctuation\">.</span>fit_transform<span class=\"token punctuation\">(</span>b<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>    reI <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>np<span class=\"token punctuation\">.</span>stack<span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>image_rebuildr<span class=\"token punctuation\">,</span>image_rebuildg<span class=\"token punctuation\">,</span>image_rebuildb<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span><span class=\"token number\">2</span><span class=\"token punctuation\">)</span><span class=\"token operator\">/</span><span class=\"token number\">255</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>    plt<span class=\"token punctuation\">.</span>imshow<span class=\"token punctuation\">(</span>reI<span class=\"token punctuation\">)</span></pre></td></tr></table></figure><figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>rebuildimg<span class=\"token punctuation\">(</span>r<span class=\"token punctuation\">,</span>g<span class=\"token punctuation\">,</span>b<span class=\"token punctuation\">,</span><span class=\"token number\">0.95</span><span class=\"token punctuation\">)</span></pre></td></tr></table></figure><pre><code>Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).\n</code></pre>\n<p><img data-src=\"/pic/%E4%BA%BA%E5%B7%A5%E6%99%BA%E8%83%BD%E9%A1%B9%E7%9B%AE%E5%AE%9E%E4%BE%8B/20221018017e.png\" alt=\"png\" /></p>\n<h1 id=\"浮雕核\"><a class=\"anchor\" href=\"#浮雕核\">#</a> 浮雕核</h1>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>kernel <span class=\"token operator\">=</span> np<span class=\"token punctuation\">.</span>array<span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>    <span class=\"token punctuation\">[</span><span class=\"token operator\">-</span><span class=\"token number\">6</span><span class=\"token punctuation\">,</span> <span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    <span class=\"token punctuation\">[</span><span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    <span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">6</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span></pre></td></tr></table></figure><figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>new_image <span class=\"token operator\">=</span> cv2<span class=\"token punctuation\">.</span>filter2D<span class=\"token punctuation\">(</span>img_gray<span class=\"token punctuation\">,</span> <span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> kernel<span class=\"token punctuation\">)</span></pre></td></tr></table></figure><figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>plt<span class=\"token punctuation\">.</span>figure<span class=\"token punctuation\">(</span>figsize<span class=\"token operator\">=</span><span class=\"token punctuation\">[</span><span class=\"token number\">12</span><span class=\"token punctuation\">,</span><span class=\"token number\">8</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>plt<span class=\"token punctuation\">.</span>imshow<span class=\"token punctuation\">(</span>new_image<span class=\"token punctuation\">,</span> cmap <span class=\"token operator\">=</span> <span class=\"token string\">'gray'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>plt<span class=\"token punctuation\">.</span>axis<span class=\"token punctuation\">(</span><span class=\"token string\">'off'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>plt<span class=\"token punctuation\">.</span>show<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr></table></figure><p><img data-src=\"/pic/%E4%BA%BA%E5%B7%A5%E6%99%BA%E8%83%BD%E9%A1%B9%E7%9B%AE%E5%AE%9E%E4%BE%8B/20221018017f.png\" alt=\"png\" /></p>\n<h1 id=\"素描效果\"><a class=\"anchor\" href=\"#素描效果\">#</a> 素描效果</h1>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>img_gray <span class=\"token operator\">=</span> cv2<span class=\"token punctuation\">.</span>cvtColor<span class=\"token punctuation\">(</span>img<span class=\"token punctuation\">,</span> cv2<span class=\"token punctuation\">.</span>COLOR_RGB2GRAY<span class=\"token punctuation\">)</span> <span class=\"token comment\">#用 cv2 获得灰度图</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre></pre></td></tr><tr><td data-num=\"3\"></td><td><pre></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>img_blurred <span class=\"token operator\">=</span> cv2<span class=\"token punctuation\">.</span>GaussianBlur<span class=\"token punctuation\">(</span>img_gray<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span><span class=\"token number\">5</span><span class=\"token punctuation\">,</span> <span class=\"token number\">5</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span> <span class=\"token comment\"># 进行高斯模糊</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre></pre></td></tr><tr><td data-num=\"6\"></td><td><pre></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>img_threshold1 <span class=\"token operator\">=</span> cv2<span class=\"token punctuation\">.</span>adaptiveThreshold<span class=\"token punctuation\">(</span>img_blurred<span class=\"token punctuation\">,</span> <span class=\"token number\">255</span><span class=\"token punctuation\">,</span> cv2<span class=\"token punctuation\">.</span>ADAPTIVE_THRESH_GAUSSIAN_C<span class=\"token punctuation\">,</span> cv2<span class=\"token punctuation\">.</span>THRESH_BINARY<span class=\"token punctuation\">,</span> <span class=\"token number\">5</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">)</span> <span class=\"token comment\">#图像二值化</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre></pre></td></tr><tr><td data-num=\"9\"></td><td><pre></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>img_threshold1_blurred <span class=\"token operator\">=</span> cv2<span class=\"token punctuation\">.</span>GaussianBlur<span class=\"token punctuation\">(</span>img_threshold1<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span><span class=\"token number\">5</span><span class=\"token punctuation\">,</span> <span class=\"token number\">5</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span> <span class=\"token comment\"># 二次模糊</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre></pre></td></tr><tr><td data-num=\"12\"></td><td><pre></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>_<span class=\"token punctuation\">,</span> img_threshold2 <span class=\"token operator\">=</span> cv2<span class=\"token punctuation\">.</span>threshold<span class=\"token punctuation\">(</span>img_threshold1_blurred<span class=\"token punctuation\">,</span> <span class=\"token number\">200</span><span class=\"token punctuation\">,</span> <span class=\"token number\">255</span><span class=\"token punctuation\">,</span> cv2<span class=\"token punctuation\">.</span>THRESH_BINARY<span class=\"token punctuation\">)</span> <span class=\"token comment\">#图像二值化</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>cv2<span class=\"token punctuation\">.</span>imshow<span class=\"token punctuation\">(</span><span class=\"token string\">'img_threshold2'</span><span class=\"token punctuation\">,</span> img_threshold1<span class=\"token punctuation\">)</span> <span class=\"token comment\">#输出在窗口</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre></pre></td></tr><tr><td data-num=\"16\"></td><td><pre><span class=\"token comment\">#关闭窗口</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>cv2<span class=\"token punctuation\">.</span>waitKey<span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>cv2<span class=\"token punctuation\">.</span>destroyAllWindows<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr></table></figure>",
            "tags": [
                "人工智能项目实例",
                "java"
            ]
        },
        {
            "id": "https://love.youhuamao.xyz/2022/10/17/python/%E5%AD%97%E5%85%B8/",
            "url": "https://love.youhuamao.xyz/2022/10/17/python/%E5%AD%97%E5%85%B8/",
            "title": "字典",
            "date_published": "2022-10-16T16:00:00.000Z",
            "content_html": "<h1 id=\"字典输出键对应的值\"><a class=\"anchor\" href=\"#字典输出键对应的值\">#</a> 字典输出键对应的值</h1>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>y <span class=\"token operator\">=</span> <span class=\"token punctuation\">&#123;</span><span class=\"token string\">\"吕布\"</span>：<span class=\"token string\">\"口口布\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"关羽\"</span><span class=\"token punctuation\">:</span><span class=\"token string\">\"关习习\"</span><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>y<span class=\"token punctuation\">[</span><span class=\"token string\">\"吕布\"</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>  </pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token operator\">//</span>输出键对应的值</pre></td></tr></table></figure><h1 id=\"增加新的键值对\"><a class=\"anchor\" href=\"#增加新的键值对\">#</a> 增加新的键值对</h1>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>y <span class=\"token operator\">=</span> <span class=\"token punctuation\">&#123;</span><span class=\"token string\">\"吕布\"</span>：<span class=\"token string\">\"口口布\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"关羽\"</span><span class=\"token punctuation\">:</span><span class=\"token string\">\"关习习\"</span><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>y<span class=\"token punctuation\">[</span><span class=\"token string\">\"刘备\"</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token string\">\"刘baby\"</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token operator\">//</span>在y字典中增加<span class=\"token punctuation\">&#123;</span><span class=\"token string\">\"刘备\"</span>：<span class=\"token string\">\"刘baby\"</span><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><h1 id=\"创建字典\"><a class=\"anchor\" href=\"#创建字典\">#</a> 创建字典</h1>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>a <span class=\"token operator\">=</span> <span class=\"token punctuation\">&#123;</span><span class=\"token string\">\"吕布\"</span>：<span class=\"token string\">\"口口布\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"关羽\"</span><span class=\"token punctuation\">:</span><span class=\"token string\">\"关习习\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"刘备\"</span><span class=\"token punctuation\">:</span><span class=\"token string\">\"刘baby\"</span><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>b <span class=\"token operator\">=</span> <span class=\"token builtin\">dict</span><span class=\"token punctuation\">(</span>吕布<span class=\"token operator\">==</span><span class=\"token string\">\"口口布\"</span><span class=\"token punctuation\">,</span> 关羽<span class=\"token operator\">==</span><span class=\"token string\">\"关习习\"</span><span class=\"token punctuation\">,</span> 刘备<span class=\"token operator\">==</span><span class=\"token string\">\"刘baby\"</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>c <span class=\"token operator\">=</span> <span class=\"token builtin\">dict</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"吕布\"</span><span class=\"token punctuation\">,</span><span class=\"token string\">\"口口布\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"关羽\"</span><span class=\"token punctuation\">,</span><span class=\"token string\">\"关习习\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"刘备\"</span><span class=\"token punctuation\">,</span><span class=\"token string\">\"刘baby\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>d <span class=\"token operator\">=</span> <span class=\"token builtin\">dict</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">&#123;</span><span class=\"token string\">\"吕布\"</span>：<span class=\"token string\">\"口口布\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"关羽\"</span><span class=\"token punctuation\">:</span><span class=\"token string\">\"关习习\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"刘备\"</span><span class=\"token punctuation\">:</span><span class=\"token string\">\"刘baby\"</span><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>e <span class=\"token operator\">=</span> <span class=\"token builtin\">dict</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">&#123;</span><span class=\"token string\">\"吕布\"</span>：<span class=\"token string\">\"口口布\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"关羽\"</span><span class=\"token punctuation\">:</span><span class=\"token string\">\"关习习\"</span><span class=\"token punctuation\">,</span><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span> 刘备<span class=\"token operator\">==</span><span class=\"token string\">\"刘baby\"</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>f <span class=\"token operator\">=</span> <span class=\"token builtin\">dict</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">zip</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span><span class=\"token string\">\"吕布\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"关羽\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"刘备\"</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">[</span><span class=\"token string\">\"口口布\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"关习习\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"刘baby\"</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr></table></figure><p>//dict () 创建字典，每个参数是一个键值对，键和值用等号连接<br />\n //zip 生成迭代，两个之间对应</p>\n<blockquote>\n<blockquote>\n<blockquote>\n<p>a = [1,2,3]<br />\nb = [4,5,6]<br />\nc = [4,5,6,7,8]<br />\n zipped = zip (a,b)     # 返回一个对象<br />\n zipped<br />\n&lt;zip object at 0x103abc288&gt;</p>\n</blockquote>\n</blockquote>\n<blockquote>\n<blockquote>\n<p>list (zipped)  # list () 转换为列表<br />\n [(1, 4), (2, 5), (3, 6)]</p>\n</blockquote>\n</blockquote>\n<blockquote>\n<blockquote>\n<p>list (zip (a,c))              # 元素个数与最短的列表一致<br />\n [(1, 4), (2, 5), (3, 6)]</p>\n</blockquote>\n</blockquote>\n</blockquote>\n<blockquote>\n<blockquote>\n<blockquote>\n<p>a1, a2 = zip(<em>zip (a,b))          # 与 zip 相反，zip (</em>) 可理解为解压，返回二维矩阵式<br />\n list (a1)<br />\n[1, 2, 3]</p>\n</blockquote>\n</blockquote>\n<blockquote>\n<blockquote>\n<p>list(a2)<br />\n[4, 5, 6]</p>\n</blockquote>\n</blockquote>\n<blockquote>\n<blockquote></blockquote>\n</blockquote>\n</blockquote>\n<h1 id=\"formkeys\"><a class=\"anchor\" href=\"#formkeys\">#</a> formkeys</h1>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>d <span class=\"token operator\">=</span> <span class=\"token builtin\">dict</span><span class=\"token punctuation\">.</span>fromkeys<span class=\"token punctuation\">(</span><span class=\"token string\">\"guojiacheng\"</span><span class=\"token punctuation\">,</span> <span class=\"token number\">150</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token operator\">//</span> 将前边每一个字符当做键，后边的参数为值（默认为<span class=\"token boolean\">None</span>）</pre></td></tr><tr><td data-num=\"3\"></td><td><pre>，生成字典</pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token operator\">></span><span class=\"token punctuation\">&#123;</span><span class=\"token string\">'g'</span><span class=\"token punctuation\">:</span> <span class=\"token number\">150</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'u'</span><span class=\"token punctuation\">:</span> <span class=\"token number\">150</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'o'</span><span class=\"token punctuation\">:</span> <span class=\"token number\">150</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'j'</span><span class=\"token punctuation\">:</span> <span class=\"token number\">150</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'i'</span><span class=\"token punctuation\">:</span> <span class=\"token number\">150</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'a'</span><span class=\"token punctuation\">:</span> <span class=\"token number\">150</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'c'</span><span class=\"token punctuation\">:</span> <span class=\"token number\">150</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'h'</span><span class=\"token punctuation\">:</span> <span class=\"token number\">150</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'e'</span><span class=\"token punctuation\">:</span> <span class=\"token number\">150</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'n'</span><span class=\"token punctuation\">:</span> <span class=\"token number\">150</span><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><h1 id=\"修改字典中的值\"><a class=\"anchor\" href=\"#修改字典中的值\">#</a> 修改字典中的值</h1>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>a <span class=\"token operator\">=</span> <span class=\"token punctuation\">&#123;</span><span class=\"token string\">'g'</span><span class=\"token punctuation\">:</span> <span class=\"token number\">150</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'u'</span><span class=\"token punctuation\">:</span> <span class=\"token number\">150</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'o'</span><span class=\"token punctuation\">:</span> <span class=\"token number\">150</span><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>a<span class=\"token punctuation\">[</span><span class=\"token string\">'g'</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token number\">100</span> <span class=\"token operator\">//</span>如果没有会在字典中增加新的键值对</pre></td></tr></table></figure><h1 id=\"删除字典中的键值\"><a class=\"anchor\" href=\"#删除字典中的键值\">#</a> 删除字典中的键值</h1>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>a <span class=\"token operator\">=</span> <span class=\"token punctuation\">&#123;</span><span class=\"token string\">'g'</span><span class=\"token punctuation\">:</span> <span class=\"token number\">150</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'u'</span><span class=\"token punctuation\">:</span> <span class=\"token number\">150</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'o'</span><span class=\"token punctuation\">:</span> <span class=\"token number\">150</span><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>d<span class=\"token punctuation\">.</span>pop<span class=\"token punctuation\">(</span><span class=\"token string\">'g'</span><span class=\"token punctuation\">,</span><span class=\"token string\">\"gou\"</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">//</span>删除字典中的键值，如果没有输出逗号  </pre></td></tr><tr><td data-num=\"3\"></td><td><pre>                   后的内容，都好后没有内容则会报错</pre></td></tr><tr><td data-num=\"4\"></td><td><pre>d<span class=\"token punctuation\">.</span>popitem<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>  <span class=\"token operator\">//</span>删除最后一个键值对</pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token keyword\">del</span> d<span class=\"token punctuation\">[</span><span class=\"token string\">'g'</span><span class=\"token punctuation\">]</span>  <span class=\"token operator\">//</span>删除指定的键值对</pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token keyword\">del</span> d <span class=\"token operator\">//</span>删除字典</pre></td></tr><tr><td data-num=\"7\"></td><td><pre>d<span class=\"token punctuation\">.</span>clear <span class=\"token operator\">//</span>清空d这个字典</pre></td></tr></table></figure><h1 id=\"修改多个键值对\"><a class=\"anchor\" href=\"#修改多个键值对\">#</a> 修改多个键值对</h1>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>a <span class=\"token operator\">=</span> <span class=\"token punctuation\">&#123;</span><span class=\"token string\">'g'</span><span class=\"token punctuation\">:</span> <span class=\"token number\">150</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'u'</span><span class=\"token punctuation\">:</span> <span class=\"token number\">150</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'o'</span><span class=\"token punctuation\">:</span> <span class=\"token number\">150</span><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>d<span class=\"token punctuation\">.</span>updata<span class=\"token punctuation\">(</span><span class=\"token punctuation\">&#123;</span><span class=\"token string\">'g'</span><span class=\"token punctuation\">:</span> <span class=\"token number\">100</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'u'</span><span class=\"token punctuation\">:</span> <span class=\"token number\">100</span><span class=\"token punctuation\">,</span><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>d<span class=\"token punctuation\">.</span>updata<span class=\"token punctuation\">(</span>g<span class=\"token operator\">=</span><span class=\"token string\">'10'</span><span class=\"token punctuation\">,</span> u<span class=\"token operator\">=</span><span class=\"token string\">'56'</span><span class=\"token punctuation\">)</span></pre></td></tr></table></figure><h1 id=\"查找键值对\"><a class=\"anchor\" href=\"#查找键值对\">#</a> 查找键值对</h1>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>a <span class=\"token operator\">=</span> <span class=\"token punctuation\">&#123;</span><span class=\"token string\">'g'</span><span class=\"token punctuation\">:</span> <span class=\"token number\">150</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'u'</span><span class=\"token punctuation\">:</span> <span class=\"token number\">150</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'o'</span><span class=\"token punctuation\">:</span> <span class=\"token number\">150</span><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>d<span class=\"token punctuation\">.</span>get<span class=\"token punctuation\">(</span><span class=\"token string\">'g'</span><span class=\"token punctuation\">,</span><span class=\"token string\">'这里没有g'</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">//</span>同pop<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>d<span class=\"token punctuation\">.</span>setdefault<span class=\"token punctuation\">(</span><span class=\"token string\">'g'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"code\"</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token operator\">></span><span class=\"token number\">150</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>d<span class=\"token punctuation\">.</span>setdefault<span class=\"token punctuation\">(</span><span class=\"token string\">'G'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"code\"</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token operator\">></span>code</pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>a<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token operator\">></span><span class=\"token punctuation\">&#123;</span><span class=\"token string\">'g'</span><span class=\"token punctuation\">:</span> <span class=\"token number\">150</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'u'</span><span class=\"token punctuation\">:</span> <span class=\"token number\">150</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'o'</span><span class=\"token punctuation\">:</span> <span class=\"token number\">150</span><span class=\"token punctuation\">,</span><span class=\"token string\">'G'</span><span class=\"token punctuation\">:</span><span class=\"token string\">\"code\"</span> <span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><h1 id=\"获得视图\"><a class=\"anchor\" href=\"#获得视图\">#</a> 获得视图</h1>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>a <span class=\"token operator\">=</span> <span class=\"token punctuation\">&#123;</span><span class=\"token string\">'g'</span><span class=\"token punctuation\">:</span> <span class=\"token number\">150</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'u'</span><span class=\"token punctuation\">:</span> <span class=\"token number\">150</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'o'</span><span class=\"token punctuation\">:</span> <span class=\"token number\">150</span><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>keys <span class=\"token operator\">=</span> a<span class=\"token punctuation\">.</span>keys<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">//</span>获取键</pre></td></tr><tr><td data-num=\"3\"></td><td><pre>values <span class=\"token operator\">=</span> a<span class=\"token punctuation\">.</span>values<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">//</span>获取值</pre></td></tr><tr><td data-num=\"4\"></td><td><pre>items <span class=\"token operator\">=</span> a<span class=\"token punctuation\">.</span>items<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>  <span class=\"token operator\">//</span>获取键值对</pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token operator\">//</span>会随着原字典的变化而变化</pre></td></tr></table></figure><p>dict_keys(['g', 'u', 'o'])<br />\ndict_values([150, 150, 150])<br />\ndict_items([('g', 150), ('u', 150), ('o', 150)])、</p>\n<h1 id=\"拷贝字典\"><a class=\"anchor\" href=\"#拷贝字典\">#</a> 拷贝字典</h1>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>a <span class=\"token operator\">=</span> <span class=\"token punctuation\">&#123;</span><span class=\"token string\">'g'</span><span class=\"token punctuation\">:</span> <span class=\"token number\">150</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'u'</span><span class=\"token punctuation\">:</span> <span class=\"token number\">150</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'o'</span><span class=\"token punctuation\">:</span> <span class=\"token number\">150</span><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>e <span class=\"token operator\">=</span> a<span class=\"token punctuation\">.</span>copy<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">//</span>用e拷贝a</pre></td></tr></table></figure><h1 id=\"键值对的数量\"><a class=\"anchor\" href=\"#键值对的数量\">#</a> 键值对的数量</h1>\n<p>a = {'g': 150, 'u': 150, 'o': 150}<br />\nlen(a)</p>\n<blockquote>\n<p>3</p>\n</blockquote>\n<h1 id=\"list\"><a class=\"anchor\" href=\"#list\">#</a> list</h1>\n<p>a = {'g': 150, 'u': 150, 'o': 150}<br />\n list (a) // 将字典中的键变成列表<br />\n list (a.values ()) // 将字典中的值变成列表</p>\n<h1 id=\"字典嵌套\"><a class=\"anchor\" href=\"#字典嵌套\">#</a> 字典嵌套</h1>\n<p>d = {吕布 &quot;: {&quot; 语文 &quot;:60，&quot; 数学 &quot;:70，&quot; 英语 &quot;:80},&quot; 关羽 &quot;: {&quot; 语文 &quot;:80，&quot; 数学 &quot;:90，&quot; 英语 &quot;:70}}<br />\n d [&quot;吕布&quot;][&quot;数学&quot;]</p>\n<blockquote>\n<p>70</p>\n</blockquote>\n<p>d = {吕布 &quot;: [60, 70, 80],&quot; 关羽 &quot;: [60, 70 ,80]}<br />\n d [&quot;吕布&quot;][1]</p>\n<blockquote>\n<p>70</p>\n</blockquote>\n<h1 id=\"字典推导式\"><a class=\"anchor\" href=\"#字典推导式\">#</a> 字典推导式</h1>\n<p>d = {'F':70, 'i': 80, 's':90, 'h':200}<br />\nb = {v:k for k,v in d.items()}<br />\nb</p>\n<blockquote 70:F,=\"\" 80:=\"\" i,=\"\" 90:s,=\"\" 200:h=\"\">\n<p></p>\n</blockquote>\n<p>c = {v:k for k,v in d.items() if v&gt;100}<br />\nc</p>\n<blockquote 200:h=\"\">\n<p></p>\n</blockquote>\n<p>d = {x:y for x in [1, 3, 5] for y in [2, 4, 6]}<br />\nd</p>\n<blockquote 1:2,=\"\" 3:4=\"\" ,5:6=\"\">\n<p></p>\n</blockquote>\n",
            "tags": [
                "数据库",
                "数据库"
            ]
        },
        {
            "id": "https://love.youhuamao.xyz/2022/10/16/shujuku/%E6%95%B0%E6%8D%AE%E5%BA%93%E8%BF%9E%E6%8E%A5%E6%B1%A0/",
            "url": "https://love.youhuamao.xyz/2022/10/16/shujuku/%E6%95%B0%E6%8D%AE%E5%BA%93%E8%BF%9E%E6%8E%A5%E6%B1%A0/",
            "title": "数据库连接池",
            "date_published": "2022-10-15T16:00:00.000Z",
            "content_html": "<h1 id=\"dbcp-c3p0连接池\"><a class=\"anchor\" href=\"#dbcp-c3p0连接池\">#</a> DBCP-C3P0 连接池</h1>\n<p>数据库连接 -- 执行完毕 -- 释放</p>\n<p>连接 -- 释放 是十分浪费系统资源的</p>\n<p>池化技术：准备一些预先的资源，过来就连接预先准备好的</p>\n<p>最小连接数：10 (常用连接)</p>\n<p>最大连接数：100 （业务最高承载上线）</p>\n<p>等待超时：100ms</p>\n<p>编写连接池，实现一个接口 DataSource</p>\n<h2 id=\"开源数据源实现\"><a class=\"anchor\" href=\"#开源数据源实现\">#</a> 开源数据源实现</h2>\n<ul>\n<li>DBCP</li>\n<li>C3p0</li>\n<li>Druid: 阿里巴巴<br />\n使用了这些数据库连接池之后，我们在项目开发中就不需要编写连接数据库的代码了</li>\n</ul>\n<h2 id=\"dbcp\"><a class=\"anchor\" href=\"#dbcp\">#</a> DBCP</h2>\n<p>需要用到的 jar 包<br />\n commons-dbcp-1.4  commons-pool-1.6</p>\n<ul>\n<li>配置文件 dbcp.properties</li>\n</ul>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\">#连接设置</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token assign-left variable\">driverClassName</span><span class=\"token operator\">=</span>com.mysql.jdbc.Driver</pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token assign-left variable\">url</span><span class=\"token operator\">=</span>jdbc:mysql://localhost:3306/jdbcstudy?useUnicode<span class=\"token operator\">=</span>true<span class=\"token operator\">&amp;</span><span class=\"token assign-left variable\">characterEncoding</span><span class=\"token operator\">=</span>utf8<span class=\"token operator\">&amp;</span><span class=\"token assign-left variable\">useSSL</span><span class=\"token operator\">=</span>false</pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token assign-left variable\">username</span><span class=\"token operator\">=</span>root</pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token assign-left variable\">password</span><span class=\"token operator\">=</span><span class=\"token number\">123456</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token comment\">#初始化连接</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token assign-left variable\">initialSize</span><span class=\"token operator\">=</span><span class=\"token number\">10</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre></pre></td></tr><tr><td data-num=\"10\"></td><td><pre><span class=\"token comment\">#最大连接数量</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre><span class=\"token assign-left variable\">maxActive</span><span class=\"token operator\">=</span><span class=\"token number\">50</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre></pre></td></tr><tr><td data-num=\"13\"></td><td><pre><span class=\"token comment\">#最大空闲连接</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre><span class=\"token assign-left variable\">maxIdle</span><span class=\"token operator\">=</span><span class=\"token number\">20</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre></pre></td></tr><tr><td data-num=\"16\"></td><td><pre><span class=\"token comment\">#最小空闲连接</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre><span class=\"token assign-left variable\">minIdle</span><span class=\"token operator\">=</span><span class=\"token number\">5</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre></pre></td></tr><tr><td data-num=\"19\"></td><td><pre><span class=\"token comment\">#超时等待时间以毫秒为单位 6000 毫秒 / 1000 等于 60 秒</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre><span class=\"token assign-left variable\">maxWait</span><span class=\"token operator\">=</span><span class=\"token number\">60000</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre><span class=\"token comment\">#JDBC 驱动建立连接时附带的连接属性属性的格式必须为这样：【属性名 = property;】</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre><span class=\"token comment\">#注意：user 与 password 两个属性会被明确地传递，因此这里不需要包含他们。</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre><span class=\"token assign-left variable\">connectionProperties</span><span class=\"token operator\">=</span>useUnicode<span class=\"token operator\">=</span>true<span class=\"token punctuation\">;</span><span class=\"token assign-left variable\">characterEncoding</span><span class=\"token operator\">=</span>UTF8</pre></td></tr><tr><td data-num=\"24\"></td><td><pre></pre></td></tr><tr><td data-num=\"25\"></td><td><pre><span class=\"token comment\">#指定由连接池所创建的连接的自动提交（auto-commit）状态。</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre><span class=\"token assign-left variable\">defaultAutoCommit</span><span class=\"token operator\">=</span>true</pre></td></tr><tr><td data-num=\"27\"></td><td><pre></pre></td></tr><tr><td data-num=\"28\"></td><td><pre><span class=\"token comment\">#driver default 指定由连接池所创建的连接的只读（read-only）状态。</span></pre></td></tr><tr><td data-num=\"29\"></td><td><pre><span class=\"token comment\">#如果没有设置该值，则 “setReadOnly” 方法将不被调用。（某些驱动并不支持只读模式，如：Informix）</span></pre></td></tr><tr><td data-num=\"30\"></td><td><pre><span class=\"token assign-left variable\">defaultReadOnly</span><span class=\"token operator\">=</span></pre></td></tr><tr><td data-num=\"31\"></td><td><pre></pre></td></tr><tr><td data-num=\"32\"></td><td><pre><span class=\"token comment\">#driver default 指定由连接池所创建的连接的事务级别（TransactionIsolation）。</span></pre></td></tr><tr><td data-num=\"33\"></td><td><pre><span class=\"token comment\">#可用值为下列之一：（详情可见 javadoc。）NONE,READ_UNCOMMITTED, READ_COMMITTED, REPEATABLE_READ, SERIALIZABLE</span></pre></td></tr><tr><td data-num=\"34\"></td><td><pre><span class=\"token assign-left variable\">defaultTransactionIsolation</span><span class=\"token operator\">=</span>READ_COMMITTED</pre></td></tr></table></figure><ul>\n<li>工具类</li>\n</ul>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token function\">import</span> org.apache.commons.dbcp.BasicDataSourceFactory<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token function\">import</span> javax.sql.DataSource<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token function\">import</span> java.io.IOException<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token function\">import</span> java.io.InputStream<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token function\">import</span> java.sql.Connection<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token function\">import</span> java.sql.ResultSet<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token function\">import</span> java.sql.SQLException<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre><span class=\"token function\">import</span> java.sql.Statement<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre><span class=\"token function\">import</span> java.util.Properties<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>/**</pre></td></tr><tr><td data-num=\"13\"></td><td><pre> * @ClassName: JDBCDBCPUtils</pre></td></tr><tr><td data-num=\"14\"></td><td><pre> * @Description: TODO 类描述</pre></td></tr><tr><td data-num=\"15\"></td><td><pre> * @Author: zyy</pre></td></tr><tr><td data-num=\"16\"></td><td><pre> * @Date: <span class=\"token number\">2021</span>/07/14 <span class=\"token number\">17</span>:48</pre></td></tr><tr><td data-num=\"17\"></td><td><pre> * @Version: <span class=\"token number\">1.0</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre> */</pre></td></tr><tr><td data-num=\"19\"></td><td><pre>public class JDBCDBCPUtils <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>    private static DataSource dataSource <span class=\"token operator\">=</span> null<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>    static <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>        try <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>            InputStream <span class=\"token keyword\">in</span> <span class=\"token operator\">=</span> JDBCDBCPUtils.class.getClassLoader<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>.getResourceAsStream<span class=\"token punctuation\">(</span><span class=\"token string\">\"dbcp.properties\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre>            Properties properties <span class=\"token operator\">=</span> new Properties<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre>            properties.load<span class=\"token punctuation\">(</span>in<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre>            //创建数据源 工厂模式</pre></td></tr><tr><td data-num=\"28\"></td><td><pre>            dataSource <span class=\"token operator\">=</span> BasicDataSourceFactory.createDataSource<span class=\"token punctuation\">(</span>properties<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"29\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span> catch <span class=\"token punctuation\">(</span>IOException e<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"30\"></td><td><pre>            e.printStackTrace<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"31\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span> catch <span class=\"token punctuation\">(</span>ClassNotFoundException e<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"32\"></td><td><pre>            e.printStackTrace<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"33\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span> catch <span class=\"token punctuation\">(</span>Exception e<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"34\"></td><td><pre>            e.printStackTrace<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"35\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"36\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"37\"></td><td><pre></pre></td></tr><tr><td data-num=\"38\"></td><td><pre>    /**</pre></td></tr><tr><td data-num=\"39\"></td><td><pre>     * 获取连接</pre></td></tr><tr><td data-num=\"40\"></td><td><pre>     */</pre></td></tr><tr><td data-num=\"41\"></td><td><pre>    public static Connection getConnection<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> throws SQLException <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"42\"></td><td><pre>        //从数据源中获取连接</pre></td></tr><tr><td data-num=\"43\"></td><td><pre>        <span class=\"token builtin class-name\">return</span> dataSource.getConnection<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"44\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"45\"></td><td><pre></pre></td></tr><tr><td data-num=\"46\"></td><td><pre>    /**</pre></td></tr><tr><td data-num=\"47\"></td><td><pre>     * 释放资源</pre></td></tr><tr><td data-num=\"48\"></td><td><pre>     */</pre></td></tr><tr><td data-num=\"49\"></td><td><pre>    public static void release<span class=\"token punctuation\">(</span>Connection con, Statement st, ResultSet rs<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"50\"></td><td><pre>        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>rs <span class=\"token operator\">!=</span> null<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"51\"></td><td><pre>            try <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"52\"></td><td><pre>                rs.close<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"53\"></td><td><pre>            <span class=\"token punctuation\">&#125;</span> catch <span class=\"token punctuation\">(</span>SQLException e<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"54\"></td><td><pre>                e.printStackTrace<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"55\"></td><td><pre>            <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"56\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"57\"></td><td><pre>        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>st <span class=\"token operator\">!=</span> null<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"58\"></td><td><pre>            try <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"59\"></td><td><pre>                st.close<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"60\"></td><td><pre>            <span class=\"token punctuation\">&#125;</span> catch <span class=\"token punctuation\">(</span>SQLException e<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"61\"></td><td><pre>                e.printStackTrace<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"62\"></td><td><pre>            <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"63\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"64\"></td><td><pre>        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>con <span class=\"token operator\">!=</span> null<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"65\"></td><td><pre>            try <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"66\"></td><td><pre>                con.close<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"67\"></td><td><pre>            <span class=\"token punctuation\">&#125;</span> catch <span class=\"token punctuation\">(</span>SQLException e<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"68\"></td><td><pre>                e.printStackTrace<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"69\"></td><td><pre>            <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"70\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"71\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"72\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><ul>\n<li>测试类</li>\n</ul>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token function\">import</span> com.zyy.lesson02.utils.JDBCUtils<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token function\">import</span> com.zyy.lesson05.utils.JDBCDBCPUtils<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token function\">import</span> java.sql.Connection<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token function\">import</span> java.sql.PreparedStatement<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token function\">import</span> java.sql.ResultSet<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token function\">import</span> java.sql.SQLException<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>/**</pre></td></tr><tr><td data-num=\"10\"></td><td><pre> * @ClassName: TestDBCP</pre></td></tr><tr><td data-num=\"11\"></td><td><pre> * @Description: TODO 类描述</pre></td></tr><tr><td data-num=\"12\"></td><td><pre> * @Author: zyy</pre></td></tr><tr><td data-num=\"13\"></td><td><pre> * @Date: <span class=\"token number\">2021</span>/07/15 <span class=\"token number\">22</span>:41</pre></td></tr><tr><td data-num=\"14\"></td><td><pre> * @Version: <span class=\"token number\">1.0</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre> */</pre></td></tr><tr><td data-num=\"16\"></td><td><pre>public class TestDBCP <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>    public static void main<span class=\"token punctuation\">(</span>String<span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> args<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>        Connection con <span class=\"token operator\">=</span> null<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>        PreparedStatement st <span class=\"token operator\">=</span> null<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>        ResultSet rs <span class=\"token operator\">=</span> null<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>        try <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>            con <span class=\"token operator\">=</span> JDBCDBCPUtils.getConnection<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>            //使用?占位符代替参数</pre></td></tr><tr><td data-num=\"24\"></td><td><pre>            String sql <span class=\"token operator\">=</span> <span class=\"token string\">\"INSERT INTO users(<span class=\"token variable\"><span class=\"token variable\">`</span><span class=\"token function\">id</span><span class=\"token variable\">`</span></span>,<span class=\"token variable\"><span class=\"token variable\">`</span>name<span class=\"token variable\">`</span></span>,<span class=\"token variable\"><span class=\"token variable\">`</span>password<span class=\"token variable\">`</span></span>,<span class=\"token variable\"><span class=\"token variable\">`</span>email<span class=\"token variable\">`</span></span>,<span class=\"token variable\"><span class=\"token variable\">`</span>birthday<span class=\"token variable\">`</span></span>) VALUES (?,?,?,?,?)\"</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre>            //预编译SQL，先写SQL，然后不执行</pre></td></tr><tr><td data-num=\"26\"></td><td><pre>            st <span class=\"token operator\">=</span> con.prepareStatement<span class=\"token punctuation\">(</span>sql<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre>            //手动给参数赋值</pre></td></tr><tr><td data-num=\"28\"></td><td><pre>            st.setInt<span class=\"token punctuation\">(</span><span class=\"token number\">1</span>, <span class=\"token number\">5</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"29\"></td><td><pre>            st.setString<span class=\"token punctuation\">(</span><span class=\"token number\">2</span>, <span class=\"token string\">\"钱七\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"30\"></td><td><pre>            st.setString<span class=\"token punctuation\">(</span><span class=\"token number\">3</span>, <span class=\"token string\">\"123456\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"31\"></td><td><pre>            st.setString<span class=\"token punctuation\">(</span><span class=\"token number\">4</span>, <span class=\"token string\">\"qianqi@sina.com\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"32\"></td><td><pre>            st.setDate<span class=\"token punctuation\">(</span><span class=\"token number\">5</span>, new java.sql.Date<span class=\"token punctuation\">(</span>new java.util.Date<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>.getTime<span class=\"token punctuation\">(</span><span class=\"token punctuation\">))</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"33\"></td><td><pre>            int num <span class=\"token operator\">=</span> st.executeUpdate<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"34\"></td><td><pre>            <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>num <span class=\"token operator\">></span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"35\"></td><td><pre>                System.out.println<span class=\"token punctuation\">(</span><span class=\"token string\">\"插入成功！\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"36\"></td><td><pre>            <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"37\"></td><td><pre></pre></td></tr><tr><td data-num=\"38\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span> catch <span class=\"token punctuation\">(</span>SQLException e<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"39\"></td><td><pre>            e.printStackTrace<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"40\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span> finally <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"41\"></td><td><pre>            JDBCDBCPUtils.release<span class=\"token punctuation\">(</span>con, st, rs<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"42\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"43\"></td><td><pre></pre></td></tr><tr><td data-num=\"44\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"45\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><h2 id=\"c3p0\"><a class=\"anchor\" href=\"#c3p0\">#</a> C3P0</h2>\n<p>需要用到的 jar 包<br />\n c3p0-0.9.5.5.jar<br />\nmchange-commons-java-0.2.19.jar</p>\n<ul>\n<li>配置文件 c3p0-config.xml</li>\n</ul>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token operator\">&lt;</span>?xml <span class=\"token assign-left variable\">version</span><span class=\"token operator\">=</span><span class=\"token string\">\"1.0\"</span> <span class=\"token assign-left variable\">encoding</span><span class=\"token operator\">=</span><span class=\"token string\">\"UTF-8\"</span>?<span class=\"token operator\">></span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token operator\">&lt;</span>c3p0-config<span class=\"token operator\">></span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    <span class=\"token operator\">&lt;</span><span class=\"token operator\">!</span>--</pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    c3p0的缺省（默认）配置</pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    如果在代码中ComboPooledDataSource <span class=\"token assign-left variable\">ds</span><span class=\"token operator\">=</span>new ComboPooledDataSource<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>这样写就表示使用的是c3p0的缺省（默认）</pre></td></tr><tr><td data-num=\"6\"></td><td><pre>    --<span class=\"token operator\">></span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>    <span class=\"token operator\">&lt;</span>default-config<span class=\"token operator\">></span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>        <span class=\"token operator\">&lt;</span>property <span class=\"token assign-left variable\">name</span><span class=\"token operator\">=</span><span class=\"token string\">\"driverClass\"</span><span class=\"token operator\">></span>com.mysql.jdbc.Driver<span class=\"token operator\">&lt;</span>/property<span class=\"token operator\">></span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>        <span class=\"token operator\">&lt;</span>property <span class=\"token assign-left variable\">name</span><span class=\"token operator\">=</span><span class=\"token string\">\"jdbcUrl\"</span><span class=\"token operator\">></span>jdbc:mysql://localhost:3306/jdbcstudy?useUnicode<span class=\"token operator\">=</span>true<span class=\"token operator\">&amp;</span>amp<span class=\"token punctuation\">;</span><span class=\"token assign-left variable\">characterEncoding</span><span class=\"token operator\">=</span>utf8<span class=\"token operator\">&amp;</span>amp<span class=\"token punctuation\">;</span><span class=\"token assign-left variable\">useSSL</span><span class=\"token operator\">=</span>false<span class=\"token operator\">&amp;</span>amp<span class=\"token punctuation\">;</span><span class=\"token assign-left variable\">serverTimezone</span><span class=\"token operator\">=</span>UTC<span class=\"token operator\">&lt;</span>/property<span class=\"token operator\">></span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>        <span class=\"token operator\">&lt;</span>property <span class=\"token assign-left variable\">name</span><span class=\"token operator\">=</span><span class=\"token string\">\"user\"</span><span class=\"token operator\">></span>root<span class=\"token operator\">&lt;</span>/property<span class=\"token operator\">></span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>        <span class=\"token operator\">&lt;</span>property <span class=\"token assign-left variable\">name</span><span class=\"token operator\">=</span><span class=\"token string\">\"password\"</span><span class=\"token operator\">></span><span class=\"token number\">12345</span><span class=\"token operator\"><span class=\"token file-descriptor important\">6</span>&lt;</span>/property<span class=\"token operator\">></span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>        <span class=\"token operator\">&lt;</span>property <span class=\"token assign-left variable\">name</span><span class=\"token operator\">=</span><span class=\"token string\">\"acquiredIncrement\"</span><span class=\"token operator\">></span><span class=\"token operator\"><span class=\"token file-descriptor important\">5</span>&lt;</span>/property<span class=\"token operator\">></span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>        <span class=\"token operator\">&lt;</span>property <span class=\"token assign-left variable\">name</span><span class=\"token operator\">=</span><span class=\"token string\">\"initialPoolSize\"</span><span class=\"token operator\">></span><span class=\"token number\">1</span><span class=\"token operator\"><span class=\"token file-descriptor important\">0</span>&lt;</span>/property<span class=\"token operator\">></span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>        <span class=\"token operator\">&lt;</span>property <span class=\"token assign-left variable\">name</span><span class=\"token operator\">=</span><span class=\"token string\">\"minPoolSize\"</span><span class=\"token operator\">></span><span class=\"token operator\"><span class=\"token file-descriptor important\">5</span>&lt;</span>/property<span class=\"token operator\">></span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>        <span class=\"token operator\">&lt;</span>property <span class=\"token assign-left variable\">name</span><span class=\"token operator\">=</span><span class=\"token string\">\"maxPoolSize\"</span><span class=\"token operator\">></span><span class=\"token number\">2</span><span class=\"token operator\"><span class=\"token file-descriptor important\">0</span>&lt;</span>/property<span class=\"token operator\">></span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>    <span class=\"token operator\">&lt;</span>/default-config<span class=\"token operator\">></span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre></pre></td></tr><tr><td data-num=\"18\"></td><td><pre></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>    <span class=\"token operator\">&lt;</span><span class=\"token operator\">!</span>--</pre></td></tr><tr><td data-num=\"20\"></td><td><pre>    c3p0的命名配置</pre></td></tr><tr><td data-num=\"21\"></td><td><pre>    如果在代码中ComboPooledDataSource <span class=\"token assign-left variable\">ds</span><span class=\"token operator\">=</span>new ComboPooledDataSource<span class=\"token punctuation\">(</span><span class=\"token string\">\"MySQL\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>这样写就表示使用的是name是MySQL</pre></td></tr><tr><td data-num=\"22\"></td><td><pre>    --<span class=\"token operator\">></span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>    <span class=\"token operator\">&lt;</span>name-config <span class=\"token assign-left variable\">name</span><span class=\"token operator\">=</span><span class=\"token string\">\"MySQL\"</span><span class=\"token operator\">></span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>        <span class=\"token operator\">&lt;</span>property <span class=\"token assign-left variable\">name</span><span class=\"token operator\">=</span><span class=\"token string\">\"driverClass\"</span><span class=\"token operator\">></span>com.mysql.jdbc.Driver<span class=\"token operator\">&lt;</span>/property<span class=\"token operator\">></span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre>        <span class=\"token operator\">&lt;</span>property <span class=\"token assign-left variable\">name</span><span class=\"token operator\">=</span><span class=\"token string\">\"jdbcUrl\"</span><span class=\"token operator\">></span>jdbc:mysql://localhost:3306/jdbcstudy?useUnicode<span class=\"token operator\">=</span>true<span class=\"token operator\">&amp;</span>amp<span class=\"token punctuation\">;</span><span class=\"token assign-left variable\">characterEncoding</span><span class=\"token operator\">=</span>utf8<span class=\"token operator\">&amp;</span>amp<span class=\"token punctuation\">;</span><span class=\"token assign-left variable\">useSSL</span><span class=\"token operator\">=</span>false<span class=\"token operator\">&amp;</span>amp<span class=\"token punctuation\">;</span><span class=\"token assign-left variable\">serverTimezone</span><span class=\"token operator\">=</span>UTC<span class=\"token operator\">&lt;</span>/property<span class=\"token operator\">></span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre>        <span class=\"token operator\">&lt;</span>property <span class=\"token assign-left variable\">name</span><span class=\"token operator\">=</span><span class=\"token string\">\"user\"</span><span class=\"token operator\">></span>root<span class=\"token operator\">&lt;</span>/property<span class=\"token operator\">></span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre>        <span class=\"token operator\">&lt;</span>property <span class=\"token assign-left variable\">name</span><span class=\"token operator\">=</span><span class=\"token string\">\"password\"</span><span class=\"token operator\">></span><span class=\"token number\">12345</span><span class=\"token operator\"><span class=\"token file-descriptor important\">6</span>&lt;</span>/property<span class=\"token operator\">></span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre>        <span class=\"token operator\">&lt;</span>property <span class=\"token assign-left variable\">name</span><span class=\"token operator\">=</span><span class=\"token string\">\"acquiredIncrement\"</span><span class=\"token operator\">></span><span class=\"token operator\"><span class=\"token file-descriptor important\">5</span>&lt;</span>/property<span class=\"token operator\">></span></pre></td></tr><tr><td data-num=\"29\"></td><td><pre>        <span class=\"token operator\">&lt;</span>property <span class=\"token assign-left variable\">name</span><span class=\"token operator\">=</span><span class=\"token string\">\"initialPoolSize\"</span><span class=\"token operator\">></span><span class=\"token number\">1</span><span class=\"token operator\"><span class=\"token file-descriptor important\">0</span>&lt;</span>/property<span class=\"token operator\">></span></pre></td></tr><tr><td data-num=\"30\"></td><td><pre>        <span class=\"token operator\">&lt;</span>property <span class=\"token assign-left variable\">name</span><span class=\"token operator\">=</span><span class=\"token string\">\"minPoolSize\"</span><span class=\"token operator\">></span><span class=\"token operator\"><span class=\"token file-descriptor important\">5</span>&lt;</span>/property<span class=\"token operator\">></span></pre></td></tr><tr><td data-num=\"31\"></td><td><pre>        <span class=\"token operator\">&lt;</span>property <span class=\"token assign-left variable\">name</span><span class=\"token operator\">=</span><span class=\"token string\">\"maxPoolSize\"</span><span class=\"token operator\">></span><span class=\"token number\">2</span><span class=\"token operator\"><span class=\"token file-descriptor important\">0</span>&lt;</span>/property<span class=\"token operator\">></span></pre></td></tr><tr><td data-num=\"32\"></td><td><pre>    <span class=\"token operator\">&lt;</span>/name-config<span class=\"token operator\">></span></pre></td></tr><tr><td data-num=\"33\"></td><td><pre><span class=\"token operator\">&lt;</span>/c3p0-config<span class=\"token operator\">></span></pre></td></tr></table></figure><ul>\n<li>工具类</li>\n</ul>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token function\">import</span> com.mchange.v2.c3p0.ComboPooledDataSource<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token function\">import</span> java.sql.Connection<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token function\">import</span> java.sql.ResultSet<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token function\">import</span> java.sql.SQLException<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token function\">import</span> java.sql.Statement<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>/**</pre></td></tr><tr><td data-num=\"9\"></td><td><pre> * @ClassName: JDBCC3P0Utils</pre></td></tr><tr><td data-num=\"10\"></td><td><pre> * @Description: TODO 类描述</pre></td></tr><tr><td data-num=\"11\"></td><td><pre> * @Author: zyy</pre></td></tr><tr><td data-num=\"12\"></td><td><pre> * @Date: <span class=\"token number\">2021</span>/07/14 <span class=\"token number\">17</span>:48</pre></td></tr><tr><td data-num=\"13\"></td><td><pre> * @Version: <span class=\"token number\">1.0</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre> */</pre></td></tr><tr><td data-num=\"15\"></td><td><pre>public class JDBCC3P0Utils <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>    private static DataSource dataSource <span class=\"token operator\">=</span> null<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>    //private static ComboPooledDataSource dataSource <span class=\"token operator\">=</span> null<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre></pre></td></tr><tr><td data-num=\"19\"></td><td><pre></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>    static <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>        try <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>            //代码的方式配置</pre></td></tr><tr><td data-num=\"23\"></td><td><pre>//            dataSource <span class=\"token operator\">=</span> new ComboPooledDataSource<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>//            dataSource.setDriverClass<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre>//            dataSource.setJdbcUrl<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre>//            dataSource.setUser<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre>//            dataSource.setPassword<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre>//            dataSource.setMaxPoolSize<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"29\"></td><td><pre>//            dataSource.setMinPoolSize<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"30\"></td><td><pre>            //配置文件写法</pre></td></tr><tr><td data-num=\"31\"></td><td><pre>            dataSource <span class=\"token operator\">=</span> new ComboPooledDataSource<span class=\"token punctuation\">(</span><span class=\"token string\">\"MySQL\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"32\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span> catch <span class=\"token punctuation\">(</span>Exception e<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"33\"></td><td><pre>            e.printStackTrace<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"34\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"35\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"36\"></td><td><pre></pre></td></tr><tr><td data-num=\"37\"></td><td><pre>    /**</pre></td></tr><tr><td data-num=\"38\"></td><td><pre>     * 获取连接</pre></td></tr><tr><td data-num=\"39\"></td><td><pre>     */</pre></td></tr><tr><td data-num=\"40\"></td><td><pre>    public static Connection getConnection<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> throws SQLException <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"41\"></td><td><pre>        //从数据源中获取连接</pre></td></tr><tr><td data-num=\"42\"></td><td><pre>        <span class=\"token builtin class-name\">return</span> dataSource.getConnection<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"43\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"44\"></td><td><pre></pre></td></tr><tr><td data-num=\"45\"></td><td><pre>    /**</pre></td></tr><tr><td data-num=\"46\"></td><td><pre>     * 释放资源</pre></td></tr><tr><td data-num=\"47\"></td><td><pre>     */</pre></td></tr><tr><td data-num=\"48\"></td><td><pre>    public static void release<span class=\"token punctuation\">(</span>Connection con, Statement st, ResultSet rs<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"49\"></td><td><pre>        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>rs <span class=\"token operator\">!=</span> null<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"50\"></td><td><pre>            try <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"51\"></td><td><pre>                rs.close<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"52\"></td><td><pre>            <span class=\"token punctuation\">&#125;</span> catch <span class=\"token punctuation\">(</span>SQLException e<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"53\"></td><td><pre>                e.printStackTrace<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"54\"></td><td><pre>            <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"55\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"56\"></td><td><pre>        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>st <span class=\"token operator\">!=</span> null<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"57\"></td><td><pre>            try <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"58\"></td><td><pre>                st.close<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"59\"></td><td><pre>            <span class=\"token punctuation\">&#125;</span> catch <span class=\"token punctuation\">(</span>SQLException e<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"60\"></td><td><pre>                e.printStackTrace<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"61\"></td><td><pre>            <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"62\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"63\"></td><td><pre>        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>con <span class=\"token operator\">!=</span> null<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"64\"></td><td><pre>            try <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"65\"></td><td><pre>                con.close<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"66\"></td><td><pre>            <span class=\"token punctuation\">&#125;</span> catch <span class=\"token punctuation\">(</span>SQLException e<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"67\"></td><td><pre>                e.printStackTrace<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"68\"></td><td><pre>            <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"69\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"70\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"71\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><ul>\n<li>测试类</li>\n</ul>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token function\">import</span> com.zyy.lesson05.utils.JDBCC3P0Utils<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token function\">import</span> com.zyy.lesson05.utils.JDBCDBCPUtils<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token function\">import</span> java.sql.Connection<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token function\">import</span> java.sql.PreparedStatement<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token function\">import</span> java.sql.ResultSet<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token function\">import</span> java.sql.SQLException<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>/**</pre></td></tr><tr><td data-num=\"10\"></td><td><pre> * @ClassName: TestC3P0</pre></td></tr><tr><td data-num=\"11\"></td><td><pre> * @Description: TODO 类描述</pre></td></tr><tr><td data-num=\"12\"></td><td><pre> * @Author: zyy</pre></td></tr><tr><td data-num=\"13\"></td><td><pre> * @Date: <span class=\"token number\">2021</span>/07/15 <span class=\"token number\">22</span>:41</pre></td></tr><tr><td data-num=\"14\"></td><td><pre> * @Version: <span class=\"token number\">1.0</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre> */</pre></td></tr><tr><td data-num=\"16\"></td><td><pre>public class TestC3P0 <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>    public static void main<span class=\"token punctuation\">(</span>String<span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> args<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>        Connection con <span class=\"token operator\">=</span> null<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>        PreparedStatement st <span class=\"token operator\">=</span> null<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>        ResultSet rs <span class=\"token operator\">=</span> null<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>        try <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>            con <span class=\"token operator\">=</span> JDBCC3P0Utils.getConnection<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>            //使用?占位符代替参数</pre></td></tr><tr><td data-num=\"24\"></td><td><pre>            String sql <span class=\"token operator\">=</span> <span class=\"token string\">\"INSERT INTO users(<span class=\"token variable\"><span class=\"token variable\">`</span><span class=\"token function\">id</span><span class=\"token variable\">`</span></span>,<span class=\"token variable\"><span class=\"token variable\">`</span>name<span class=\"token variable\">`</span></span>,<span class=\"token variable\"><span class=\"token variable\">`</span>password<span class=\"token variable\">`</span></span>,<span class=\"token variable\"><span class=\"token variable\">`</span>email<span class=\"token variable\">`</span></span>,<span class=\"token variable\"><span class=\"token variable\">`</span>birthday<span class=\"token variable\">`</span></span>) VALUES (?,?,?,?,?)\"</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre>            //预编译SQL，先写SQL，然后不执行</pre></td></tr><tr><td data-num=\"26\"></td><td><pre>            st <span class=\"token operator\">=</span> con.prepareStatement<span class=\"token punctuation\">(</span>sql<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre>            //手动给参数赋值</pre></td></tr><tr><td data-num=\"28\"></td><td><pre>            st.setInt<span class=\"token punctuation\">(</span><span class=\"token number\">1</span>, <span class=\"token number\">6</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"29\"></td><td><pre>            st.setString<span class=\"token punctuation\">(</span><span class=\"token number\">2</span>, <span class=\"token string\">\"刘八\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"30\"></td><td><pre>            st.setString<span class=\"token punctuation\">(</span><span class=\"token number\">3</span>, <span class=\"token string\">\"123456\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"31\"></td><td><pre>            st.setString<span class=\"token punctuation\">(</span><span class=\"token number\">4</span>, <span class=\"token string\">\"liuba@sina.com\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"32\"></td><td><pre>            st.setDate<span class=\"token punctuation\">(</span><span class=\"token number\">5</span>, new java.sql.Date<span class=\"token punctuation\">(</span>new java.util.Date<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>.getTime<span class=\"token punctuation\">(</span><span class=\"token punctuation\">))</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"33\"></td><td><pre>            int num <span class=\"token operator\">=</span> st.executeUpdate<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"34\"></td><td><pre>            <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>num <span class=\"token operator\">></span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"35\"></td><td><pre>                System.out.println<span class=\"token punctuation\">(</span><span class=\"token string\">\"插入成功！\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"36\"></td><td><pre>            <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"37\"></td><td><pre></pre></td></tr><tr><td data-num=\"38\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span> catch <span class=\"token punctuation\">(</span>SQLException e<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"39\"></td><td><pre>            e.printStackTrace<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"40\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span> finally <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"41\"></td><td><pre>            JDBCC3P0Utils.release<span class=\"token punctuation\">(</span>con, st, rs<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"42\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"43\"></td><td><pre></pre></td></tr><tr><td data-num=\"44\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"45\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><h1 id=\"总结\"><a class=\"anchor\" href=\"#总结\">#</a> 总结</h1>\n<ul>\n<li>无论用什么数据源，本质还是一样的，DataSource 接口不会变，方法就不会变</li>\n</ul>\n",
            "tags": [
                "数据库",
                "数据库"
            ]
        },
        {
            "id": "https://love.youhuamao.xyz/2022/10/16/computer-science/DataStructureandalgorithm/%E4%B8%B2%EF%BC%8C%E6%95%B0%E5%AD%97%E5%92%8C%E5%B9%BF%E4%B9%89%E8%A1%A8/",
            "url": "https://love.youhuamao.xyz/2022/10/16/computer-science/DataStructureandalgorithm/%E4%B8%B2%EF%BC%8C%E6%95%B0%E5%AD%97%E5%92%8C%E5%B9%BF%E4%B9%89%E8%A1%A8/",
            "title": "串，数字和广义表",
            "date_published": "2022-10-15T16:00:00.000Z",
            "content_html": "<h1 id=\"串\"><a class=\"anchor\" href=\"#串\">#</a> 串</h1>\n<p>串 ———— 零个或多个任意字符组成的有限序列<br />\n字串 ———— 串中任意个连续字符组成的子序列称为该串的子串<br />\n主串 ———— 包含子串的串相应地称为主串<br />\n字符位置 ———— 字符在序列中的序号为该字符在串中的位置<br />\n字串位置 ———— 子串第一个字符在主串中的位置<br />\n空格串 ———— 由一个或多个空格组成的串，与空串不同<br />\n串相等：当且仅当两个串的长度相等并且各个对应位置上的字符都相同时，这两个串才是相等的</p>\n<h1 id=\"串的顺序存储结构\"><a class=\"anchor\" href=\"#串的顺序存储结构\">#</a> 串的顺序存储结构</h1>\n<p class=\"gallery\" data-height=\"750px\"><img data-src=\"/pic/shujujiegouyusuanfa/img_9.png\" alt=\"img_9.png\" /></p>\n<h1 id=\"串的链式存储结构\"><a class=\"anchor\" href=\"#串的链式存储结构\">#</a> 串的链式存储结构</h1>\n<p class=\"gallery\" data-height=\"750px\"><img data-src=\"/pic/shujujiegouyusuanfa/img_10.png\" alt=\"img_10.png\" /></p>\n<h1 id=\"串的模式匹配算法\"><a class=\"anchor\" href=\"#串的模式匹配算法\">#</a> 串的模式匹配算法</h1>\n<ul class=\"gallery gallery\" data-height=\"750px\" data-height=\"750px\">\n<li>\n<p>BF 算法<br />\n<img data-src=\"/pic/shujujiegouyusuanfa/img_12.png\" alt=\"img_12.png\" /><br />\n<img data-src=\"/pic/shujujiegouyusuanfa/img_13.png\" alt=\"img_13.png\" /></p>\n</li>\n<li>\n<p>KMP 算法<br />\n<img data-src=\"/pic/shujujiegouyusuanfa/img_14.png\" alt=\"img_14.png\" /><br />\n<img data-src=\"/pic/shujujiegouyusuanfa/img_15.png\" alt=\"img_15.png\" /><br />\n<img data-src=\"/pic/shujujiegouyusuanfa/img_16.png\" alt=\"img_16.png\" /><br />\n<img data-src=\"/pic/shujujiegouyusuanfa/img_17.png\" alt=\"img_17.png\" /><br />\n<img data-src=\"/pic/shujujiegouyusuanfa/img_18.png\" alt=\"img_18.png\" /></p>\n</li>\n</ul>\n<h1 id=\"数组\"><a class=\"anchor\" href=\"#数组\">#</a> 数组</h1>\n<p class=\"gallery\" data-height=\"750px\">数组 ———— 按一定格式排列起来的具有相同类型的数据元素的集合<br />\n<img data-src=\"/pic/shujujiegouyusuanfa/img_19.png\" alt=\"img_19.png\" /></p>\n<h1 id=\"数组的顺序存储\"><a class=\"anchor\" href=\"#数组的顺序存储\">#</a> 数组的顺序存储</h1>\n<p class=\"gallery\" data-height=\"750px\"><img data-src=\"/pic/shujujiegouyusuanfa/img_20.png\" alt=\"img_20.png\" /></p>\n<ul class=\"gallery\" data-height=\"750px\">\n<li>\n<p>二维数组可有两种存储方式：1 以行序为主序，2 以列序为主序<br />\n<img data-src=\"/pic/shujujiegouyusuanfa/img_21.png\" alt=\"img_21.png\" /><br />\n<img data-src=\"/pic/shujujiegouyusuanfa/img_22.png\" alt=\"img_22.png\" /></p>\n</li>\n<li>\n<p>特殊存储方法</p>\n</li>\n</ul>\n<h2 id=\"以对角线为顺序\"><a class=\"anchor\" href=\"#以对角线为顺序\">#</a> 以对角线为顺序</h2>\n<p class=\"gallery\" data-height=\"750px\"><img data-src=\"/pic/shujujiegouyusuanfa/img_23.png\" alt=\"img_23.png\" /></p>\n<h2 id=\"稀疏数组的存储\"><a class=\"anchor\" href=\"#稀疏数组的存储\">#</a> 稀疏数组的存储</h2>\n<p class=\"gallery\" data-height=\"750px\">稀疏矩阵：设在 mx n 的矩阵中有 t 个非零元素。令 δ= t/(m * n)，当 δ≤0.05 时称为稀疏矩阵。<br />\n<img data-src=\"/pic/shujujiegouyusuanfa/img_24.png\" alt=\"img_24.png\" /></p>\n<h2 id=\"稀疏数组链式存储\"><a class=\"anchor\" href=\"#稀疏数组链式存储\">#</a> 稀疏数组链式存储</h2>\n<p class=\"gallery\" data-height=\"750px\"><img data-src=\"/pic/shujujiegouyusuanfa/img_25.png\" alt=\"img_25.png\" /><br />\n<img data-src=\"/pic/shujujiegouyusuanfa/img_26.png\" alt=\"img_26.png\" /></p>\n<h1 id=\"广义表\"><a class=\"anchor\" href=\"#广义表\">#</a> 广义表</h1>\n<p class=\"gallery\" data-height=\"750px\">广义表 (又称列表 Lists) 是≥0 个元素.... a 的有限序列，其中每 - - 个 a; 或者是原子，或者是一个广义表。<br />\n<img data-src=\"/pic/shujujiegouyusuanfa/img_27.png\" alt=\"img_27.png\" /><br />\n<img data-src=\"/pic/shujujiegouyusuanfa/img_28.png\" alt=\"img_28.png\" /><br />\n<img data-src=\"/pic/shujujiegouyusuanfa/img_30.png\" alt=\"img_30.png\" /><br />\n<img data-src=\"/pic/shujujiegouyusuanfa/img_32.png\" alt=\"img_32.png\" /></p>\n",
            "tags": [
                "计算机科学",
                "数据结构与算法"
            ]
        },
        {
            "id": "https://love.youhuamao.xyz/2022/10/16/computer-science/DataStructureandalgorithm/%E5%93%88%E5%A4%AB%E6%9B%BC%E6%A0%91%E5%8F%8A%E5%85%B6%E5%BA%94%E7%94%A8/",
            "url": "https://love.youhuamao.xyz/2022/10/16/computer-science/DataStructureandalgorithm/%E5%93%88%E5%A4%AB%E6%9B%BC%E6%A0%91%E5%8F%8A%E5%85%B6%E5%BA%94%E7%94%A8/",
            "title": "哈夫曼树及其应用",
            "date_published": "2022-10-15T16:00:00.000Z",
            "content_html": "<p class=\"gallery\" data-height=\"750px\"><img data-src=\"/pic/shujujiegouyusuanfa/img_75.png\" alt=\"img_75.png\" /><br />\n<img data-src=\"/pic/shujujiegouyusuanfa/img_77.png\" alt=\"img_77.png\" /></p>\n<h1 id=\"哈夫曼算法\"><a class=\"anchor\" href=\"#哈夫曼算法\">#</a> 哈夫曼算法</h1>\n<p class=\"gallery\" data-height=\"750px\"><img data-src=\"/pic/shujujiegouyusuanfa/img_78.png\" alt=\"img_78.png\" /><br />\n<img data-src=\"/pic/shujujiegouyusuanfa/img_79.png\" alt=\"img_79.png\" /><br />\n<img data-src=\"/pic/shujujiegouyusuanfa/img_80.png\" alt=\"img_80.png\" /></p>\n<h1 id=\"顺序结构存储\"><a class=\"anchor\" href=\"#顺序结构存储\">#</a> 顺序结构存储</h1>\n<p class=\"gallery\" data-height=\"750px\"><img data-src=\"/pic/shujujiegouyusuanfa/img_81.png\" alt=\"img_81.png\" /><br />\n<img data-src=\"/pic/shujujiegouyusuanfa/img_82.png\" alt=\"img_82.png\" /><br />\n<img data-src=\"/pic/shujujiegouyusuanfa/img_83.png\" alt=\"img_83.png\" /></p>\n<h1 id=\"哈夫曼编码\"><a class=\"anchor\" href=\"#哈夫曼编码\">#</a> 哈夫曼编码</h1>\n<p class=\"gallery\" data-height=\"750px\"><img data-src=\"/pic/shujujiegouyusuanfa/img_84.png\" alt=\"img_84.png\" /><br />\n<img data-src=\"/pic/shujujiegouyusuanfa/img_86.png\" alt=\"img_86.png\" /><br />\n<img data-src=\"/pic/shujujiegouyusuanfa/img_85.png\" alt=\"img_85.png\" /></p>\n",
            "tags": [
                "计算机科学",
                "数据结构与算法"
            ]
        },
        {
            "id": "https://love.youhuamao.xyz/2022/10/16/computer-science/DataStructureandalgorithm/%E5%9B%BE/",
            "url": "https://love.youhuamao.xyz/2022/10/16/computer-science/DataStructureandalgorithm/%E5%9B%BE/",
            "title": "图",
            "date_published": "2022-10-15T16:00:00.000Z",
            "content_html": "<p>完全图：任意两个点都有一条边相连</p>\n<p>稀疏图：有很少边或弧的图 (e&lt;nlogn)</p>\n<p>稠密图：有较多边或弧的图</p>\n<p>网：边 / 弧带权的图</p>\n<p>邻接：有边 / 弧相连的两个顶点之间的关系</p>\n<p class=\"gallery\" data-height=\"750px\"><img data-src=\"/pic/shujujiegouyusuanfa/img_87.png\" alt=\"img_87.png\" /></p>\n<p>路径：接续的边构成的顶点序列</p>\n<p>路径长度：路径上边或弧的数目 / 权值之和</p>\n<p>回路 (环): 第一一个顶点和最后一个顶点相同的路径</p>\n<p>简单路径：除路径起点和终点可以相同外，其余顶点均不相同的路径</p>\n<p>简单回路 (简单环): 除路径起点和终点相同外，其余顶点均不相同的路径</p>\n<p>连通图 (强连通图)：在无 (有) 向图 G=( V, {E} ) 中，若对任何两个顶点 v、u 都存在从 v 到<br />\n u 的路径 ，则称 G 是连通图 (强连通图)</p>\n<p>权与网：图中边或弧所具有的相关数称为权。表明从一个顶点到另一个顶点的距离或耗费。带权<br />\n的图称 为网。</p>\n<p>连通分量 (强连通分量)：无向图 G 的极大连通子图称为 G 的连通分量</p>\n<p>极大连通子图意思是：该子图是 G 连通子图，将 G 的任何不在该子图中的顶点加入，子图不再连通</p>\n<p>有向图 G 的极大强连通子图称为 G 的强连通分量</p>\n<p>极大强连通子图意思是：该子图是 G 的强连通子图，将 D 的任何不在该子图中的顶点加入，子图不<br />\n再是强连通的</p>\n<p>极小连通子图：该子图是 G 的连通子图，在该子图中删除任何一条边子图不再连通</p>\n<p>生成树：包含无向图 G 所有顶点的极小连通子图</p>\n<p>生成森林：对非连通图，由各个连通分量的生成树的集合</p>\n<h1 id=\"图的类型定义\"><a class=\"anchor\" href=\"#图的类型定义\">#</a> 图的类型定义</h1>\n<p class=\"gallery\" data-height=\"750px\"><img data-src=\"/pic/shujujiegouyusuanfa/img_89.png\" alt=\"img_89.png\" /></p>\n<h1 id=\"数组邻接矩阵表示法\"><a class=\"anchor\" href=\"#数组邻接矩阵表示法\">#</a> 数组（邻接矩阵）表示法</h1>\n<p class=\"gallery\" data-height=\"750px\"><img data-src=\"/pic/shujujiegouyusuanfa/img_90.png\" alt=\"img_90.png\" /><br />\n<img data-src=\"/pic/shujujiegouyusuanfa/img_88.png\" alt=\"img_88.png\" /><br />\n<img data-src=\"/pic/shujujiegouyusuanfa/img_91.png\" alt=\"img_91.png\" /><br />\n<img data-src=\"/pic/shujujiegouyusuanfa/img_92.png\" alt=\"img_92.png\" /><br />\n<img data-src=\"/pic/shujujiegouyusuanfa/img_93.png\" alt=\"img_93.png\" /></p>\n<h1 id=\"邻接表表示法链式\"><a class=\"anchor\" href=\"#邻接表表示法链式\">#</a> 邻接表表示法（链式）</h1>\n<p class=\"gallery\" data-height=\"750px\"><img data-src=\"/pic/shujujiegouyusuanfa/img_94.png\" alt=\"img_94.png\" /></p>\n<h1 id=\"图的邻接存储表示\"><a class=\"anchor\" href=\"#图的邻接存储表示\">#</a> 图的邻接存储表示</h1>\n<p class=\"gallery\" data-height=\"750px\"><img data-src=\"/pic/shujujiegouyusuanfa/img_96.png\" alt=\"img_96.png\" /><br />\n<img data-src=\"/pic/shujujiegouyusuanfa/img_98.png\" alt=\"img_98.png\" /><br />\n<img data-src=\"/pic/shujujiegouyusuanfa/img_97.png\" alt=\"img_97.png\" /><br />\n<img data-src=\"/pic/shujujiegouyusuanfa/img_99.png\" alt=\"img_99.png\" /><br />\n<img data-src=\"/pic/shujujiegouyusuanfa/img_100.png\" alt=\"img_100.png\" /></p>\n<h1 id=\"十字链表\"><a class=\"anchor\" href=\"#十字链表\">#</a> 十字链表</h1>\n<p class=\"gallery\" data-height=\"750px\"><img data-src=\"/pic/shujujiegouyusuanfa/img_101.png\" alt=\"img_101.png\" /><br />\n<img data-src=\"/pic/shujujiegouyusuanfa/img_103.png\" alt=\"img_103.png\" /></p>\n<h1 id=\"深度优先遍历\"><a class=\"anchor\" href=\"#深度优先遍历\">#</a> 深度优先遍历</h1>\n<p class=\"gallery\" data-height=\"750px\"><img data-src=\"/pic/shujujiegouyusuanfa/img_102.png\" alt=\"img_102.png\" /></p>\n<h1 id=\"广度优先遍历dfs\"><a class=\"anchor\" href=\"#广度优先遍历dfs\">#</a> 广度优先遍历（DFS）</h1>\n<p class=\"gallery\" data-height=\"750px\"><img data-src=\"/pic/shujujiegouyusuanfa/img_104.png\" alt=\"img_104.png\" /></p>\n<h1 id=\"图的应用\"><a class=\"anchor\" href=\"#图的应用\">#</a> 图的应用</h1>\n<p>生成树：所有顶点均由边连接在一起，但不存在回路的图</p>\n<h1 id=\"最小生成树\"><a class=\"anchor\" href=\"#最小生成树\">#</a> 最小生成树</h1>\n<p>最小生成树：给定一个无向网络在该网的所有生成树中，使得各边权值之和最小的那棵生成树<br />\n称为该网的最小生成树，也叫最小代价生成树。</p>\n<h1 id=\"构建最小生成树mst\"><a class=\"anchor\" href=\"#构建最小生成树mst\">#</a> 构建最小生成树 (MST)</h1>\n<p>MST 性质：设 N = (V, E) 是一个连通网，U 是顶点集 V 的一个非空子集。若边 (u,v) 是一条<br />\n具有最小权值的边，其中 u∈U，v∈（V-U) 则必存在一棵包含边 (u, v) 的最小生成树。</p>\n<h2 id=\"普里姆算法prim\"><a class=\"anchor\" href=\"#普里姆算法prim\">#</a> 普里姆算法（prim）</h2>\n<p class=\"gallery\" data-height=\"750px\"><img data-src=\"/pic/shujujiegouyusuanfa/img_105.png\" alt=\"img_105.png\" /></p>\n<h2 id=\"克鲁斯卡尔kruskal\"><a class=\"anchor\" href=\"#克鲁斯卡尔kruskal\">#</a> 克鲁斯卡尔 (Kruskal)</h2>\n<p class=\"gallery\" data-height=\"750px\"><img data-src=\"/pic/shujujiegouyusuanfa/img_106.png\" alt=\"img_106.png\" /></p>\n<h1 id=\"单源路径\"><a class=\"anchor\" href=\"#单源路径\">#</a> 单源路径</h1>\n<p>单源最短路径 —— 用 Dijkstra (迪杰斯特拉) 算法<br />\n所有顶点间的最短路径一用 Floyd (弗洛伊德) 算法</p>\n<h2 id=\"dijkstra-迪杰斯特拉算法\"><a class=\"anchor\" href=\"#dijkstra-迪杰斯特拉算法\">#</a> Dijkstra (迪杰斯特拉) 算法</h2>\n<p class=\"gallery\" data-height=\"750px\"><img data-src=\"/pic/shujujiegouyusuanfa/img_107.png\" alt=\"img_107.png\" /></p>\n<h2 id=\"floyd-弗洛伊德算法\"><a class=\"anchor\" href=\"#floyd-弗洛伊德算法\">#</a> Floyd (弗洛伊德) 算法</h2>\n<p class=\"gallery\" data-height=\"750px\"><img data-src=\"/pic/shujujiegouyusuanfa/img_108.png\" alt=\"img_108.png\" /></p>\n<h1 id=\"拓扑排序\"><a class=\"anchor\" href=\"#拓扑排序\">#</a> 拓扑排序</h1>\n<p class=\"gallery\" data-height=\"750px\"><img data-src=\"/pic/shujujiegouyusuanfa/img_109.png\" alt=\"img_109.png\" /><br />\n<img data-src=\"/pic/shujujiegouyusuanfa/img_110.png\" alt=\"img_110.png\" /><br />\n<img data-src=\"/pic/shujujiegouyusuanfa/img_111.png\" alt=\"img_111.png\" /></p>\n<h1 id=\"关键路径\"><a class=\"anchor\" href=\"#关键路径\">#</a> 关键路径</h1>\n<p class=\"gallery\" data-height=\"750px\"><img data-src=\"/pic/shujujiegouyusuanfa/img_112.png\" alt=\"img_112.png\" /><br />\n<img data-src=\"/pic/shujujiegouyusuanfa/img_114.png\" alt=\"img_114.png\" /><br />\n<img data-src=\"/pic/shujujiegouyusuanfa/img_113.png\" alt=\"img_113.png\" /><br />\n<img data-src=\"/pic/shujujiegouyusuanfa/img_115.png\" alt=\"img_115.png\" /></p>\n",
            "tags": [
                "计算机科学",
                "数据结构与算法"
            ]
        }
    ]
}