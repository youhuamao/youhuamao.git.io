{
    "version": "https://jsonfeed.org/version/1",
    "title": "幽化猫の博客",
    "subtitle": "生活朗朗，万物可爱",
    "icon": "https://love.youhuamao.xyz/images/favicon.ico",
    "description": "这是一个人的博客",
    "home_page_url": "https://love.youhuamao.xyz",
    "items": [
        {
            "id": "https://love.youhuamao.xyz/2022/10/22/Java/Java%E5%9F%BA%E7%A1%80/%E5%BC%82%E5%B8%B8%E5%A4%84%E7%90%86/",
            "url": "https://love.youhuamao.xyz/2022/10/22/Java/Java%E5%9F%BA%E7%A1%80/%E5%BC%82%E5%B8%B8%E5%A4%84%E7%90%86/",
            "title": "异常处理",
            "date_published": "2022-10-21T16:00:00.000Z",
            "content_html": "<h1 id=\"异常介绍\"><a class=\"anchor\" href=\"#异常介绍\">#</a> 异常介绍</h1>\n<p>Java 语言中，将程序执行中发生的不正常情况称为 “异常”。(开发过程中的语法错误和逻辑错误不是异常)</p>\n<ul>\n<li>执行过程中所发生的异常事件可分为两大类</li>\n</ul>\n<ol>\n<li>Error (错误): Java 虚拟机无法解决的严重问题。如: JVM 系统内部错误、资源耗尽等严重情况。比如: StackOverflowError [栈溢出] 和 OOM (out ofmemory), Error 是严重错误，程序会崩溃。</li>\n<li>Exception: 其它因编程错误或偶然的外在因素导致的一般性问题，可以使用针对性的代码进行处理。例如空指针访问，试图读取不存在的文件，网络连接中断等等，Exception 分为两大类：运行时异常 [程序运行时，发生的异常] 和编译时异常 [编程时，编译器检查出的异常]。</li>\n</ol>\n<ul>\n<li>异常分为两大类，运行时异常和编译时异常。运行时异常，编译器不要求强制处置的异常。</li>\n<li>一般是指编程时的逻辑错误，是程序员应该避免其出现的异常。java.lang.RuntimeException 类及它的子类都是运行时异常</li>\n<li>对于运行时异常，可以不作处理，因为这类异常很普遍，若全处理可能会对程序的可读性和运行效率产生影响</li>\n<li>编译时异常，是编译器要求必须处置的异常。</li>\n</ul>\n<h1 id=\"常见运行时异常\"><a class=\"anchor\" href=\"#常见运行时异常\">#</a> 常见运行时异常</h1>\n<ul>\n<li>NullPointerException 空指针异常 NullPointerException.java 当应用程序试图在需要对象的地方使用 null 时，抛出该异常</li>\n<li>ArithmeticException 数学运算异常 当出现异常的运算条件时，抛出此异常。例如，一个整数 “除以零” 时，抛出此类的一一个实例</li>\n<li>ArrayIndexOutOfBoundsException 数组下标越界异常用非法索引访问数组时抛出的异常。如果索引为负或大于等于数组大小，则该索引为非法索引</li>\n<li>ClassCastException 类型转换异常当试图将对象强制转换为不是实例的子类时，抛出该异常。例如，以下代码将生成一个 ClassCastException</li>\n<li>NumberFormatException 数字格式不正确异常当应用程序试图将字符串转换成一种数值类型，但该字符串不能转换为适当格式时，抛出该异常 =&gt; 使用异常我们可以确保输入是满足条件数字.</li>\n</ul>\n<h1 id=\"常见的编译异常\"><a class=\"anchor\" href=\"#常见的编译异常\">#</a> 常见的编译异常</h1>\n<p>编译异常是指在编译期间，就必须处理的异常，否则代码不能通过编译。</p>\n<ul>\n<li>SQLException // 操作数据库时，查询表可能发生异常</li>\n<li>IOException // 操作文件时，发生的异常</li>\n<li>FileNotFoundException // 当操作一个不存在的文件时， 发生异常</li>\n<li>ClassNotFoundException // 加载类，而该类不存在时，异常</li>\n<li>EOFException / 操作文件，到文件末尾，发生异常</li>\n<li>IllegalArguementException // 参数异常</li>\n</ul>\n<h1 id=\"异常处理\"><a class=\"anchor\" href=\"#异常处理\">#</a> 异常处理</h1>\n<p>异常处理就是当异常发生时，对异常处理的方式。</p>\n<ul>\n<li>try-catch-finally 程序员在代码中捕获发生的异常，自行处理</li>\n</ul>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>try <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>    代码/可能有异常</pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token punctuation\">&#125;</span>catch<span class=\"token punctuation\">(</span>Exception e<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    //捕获到异常</pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    //1当异常发生时</pre></td></tr><tr><td data-num=\"6\"></td><td><pre>    //2.系统将异常封装成Exception对象e,传递给catch</pre></td></tr><tr><td data-num=\"7\"></td><td><pre>    //3得到异常对象后，程序 员，自己处理</pre></td></tr><tr><td data-num=\"8\"></td><td><pre>    //4.注意,如果没有发生异常catch代码块不执行</pre></td></tr><tr><td data-num=\"9\"></td><td><pre><span class=\"token punctuation\">&#125;</span>finally<span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>        //1.不管try代码块是否有异常 发生，始终要执行finally</pre></td></tr><tr><td data-num=\"11\"></td><td><pre>        //2.所以，通常将释放资源的代码，放在finally</pre></td></tr><tr><td data-num=\"12\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><ul>\n<li>throws 将发生的异常抛出，交给调用者 (方法) 来处理，最顶级的处理者就是 JVM</li>\n<li>如果程序员，没有显示是处理异常，默认 throws</li>\n</ul>\n<h1 id=\"try-catch\"><a class=\"anchor\" href=\"#try-catch\">#</a> try-catch</h1>\n<ul>\n<li>Java 提供 try 和 catch 块来处理异常。try 块用于包含可能出错的代码。catch 块用于处理 try 块中发生的异常。可以根据需要在程序中有多个 try..catch 块。</li>\n<li>如果异常发生了，则异常发生后面的代码不会执行，直接进入到 catch 块.</li>\n<li>如果异常没有发生，则顺序执行 try 的代码块，不会进入到 catch.</li>\n<li>如果希望不管是否发生异常，都执行某段代码 (比如关闭连接，释放资源等) 则使用如下代码 - finally</li>\n<li>可以有多个 catch 语句，捕获不同的异常 (进行不同的业务处理)，要求父类异常在后，子类异常在前，比如 (Exception 在后，NullPointerException 在前)，如果发生异常，只会匹配一 - 个 catch</li>\n</ul>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>try <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>    Person person <span class=\"token operator\">=</span> new Person<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    person <span class=\"token operator\">=</span> null<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    System.out.printLn<span class=\"token punctuation\">(</span>person.getName<span class=\"token punctuation\">(</span><span class=\"token punctuation\">))</span><span class=\"token punctuation\">;</span> //NuLLPointerException</pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    int n1 <span class=\"token operator\">=</span> <span class=\"token number\">10</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>    int n2 <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>    int res <span class=\"token operator\">=</span> n1 / n2<span class=\"token punctuation\">;</span> //ArithmeticException</pre></td></tr><tr><td data-num=\"8\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span> catch <span class=\"token punctuation\">(</span>NullPointerException e<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>    System.out.printLn<span class=\"token punctuation\">(</span><span class=\"token string\">\"空指针异常=\"</span> + e.getMessage<span class=\"token punctuation\">(</span><span class=\"token punctuation\">))</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span> catch <span class=\"token punctuation\">(</span>ArithmeticException e<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>    System.out.println<span class=\"token punctuation\">(</span><span class=\"token string\">\"算术异常=\"</span> + e.getMessage<span class=\"token punctuation\">(</span><span class=\"token punctuation\">))</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span> catch <span class=\"token punctuation\">(</span>Exception e<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>    System.out.printLn<span class=\"token punctuation\">(</span>e.getMessage<span class=\"token punctuation\">(</span><span class=\"token punctuation\">))</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span> finally <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><ul>\n<li>可以进行 try-finally 配合使用，这种用法相当于没有捕获异常，因此程序会直接崩掉。应用场景，就是执行一段代码，不管是否发生异常，都必须执行某个业务逻辑</li>\n</ul>\n<h1 id=\"throw异常处理\"><a class=\"anchor\" href=\"#throw异常处理\">#</a> throw 异常处理</h1>\n<ul>\n<li>如果一个方法 (中的语句执行时) 可能生成某种异常，但是并不能确定如何处理这种异常，则此方法应显示地声明抛出异常，表明该方法将不对这些异常进行处理，而由该方法的调用者负责处理。（例如 f2 方法被 f1 调用，f1 就是 f2 的调用者）</li>\n<li>在方法声明中用 throws 语句可以声明抛出异常的列表，throws 后面的异常类型可以是方法中产生的异常类型，也可以是它的父类。</li>\n<li>对于编译异常，程序中必须处理，比如 try-atch 或者 throws</li>\n<li>对于运行时异常，程序中如果没有处理，默认就是 throws 的方式处理</li>\n<li>子类重写父类的方法时，对抛出异常的规定：于类重写的方法，所抛出的异常类型要么和父类抛出的异常一致， 要么为父类抛出的异常的类型的子类型</li>\n<li>在 throws 过程中，如果有方法 try-catch , 就相当于处理异常，就可以不必 throws</li>\n</ul>\n<h1 id=\"自定义异常\"><a class=\"anchor\" href=\"#自定义异常\">#</a> 自定义异常</h1>\n<ul>\n<li>定义类：自定义异常类名 (程序员自己写) 继承 Exception 或 RuntimeException</li>\n<li>如果继承 Exception, 属于编译异常</li>\n<li>如果继承 RuntimeException, 属于运行异常 (一般来说，继承 RuntimeException)</li>\n</ul>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>int age <span class=\"token operator\">=</span><span class=\"token number\">180</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>//要求范围在18 - <span class=\"token number\">120</span>之间，否则抛出一个自定义异常</pre></td></tr><tr><td data-num=\"3\"></td><td><pre>if<span class=\"token punctuation\">(</span><span class=\"token operator\">!</span><span class=\"token punctuation\">(</span>age <span class=\"token operator\">>=</span> <span class=\"token number\">18</span> <span class=\"token operator\">&amp;&amp;</span> age <span class=\"token operator\">&lt;=</span><span class=\"token number\">120</span><span class=\"token punctuation\">))</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>//这里我们可以通过构造器,设置信息</pre></td></tr><tr><td data-num=\"5\"></td><td><pre>throw new AgeException<span class=\"token punctuation\">(</span><span class=\"token string\">\"年龄需要在18~120之 间\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>System.out.println<span class=\"token punctuation\">(</span><span class=\"token string\">\"你的年龄范围正确.\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>//自定义一一个异常</pre></td></tr><tr><td data-num=\"10\"></td><td><pre>cLass AgeException extends RuntimeException <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>    pubLic AgeException<span class=\"token punctuation\">(</span>String message<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>//构造器</pre></td></tr><tr><td data-num=\"12\"></td><td><pre>        super<span class=\"token punctuation\">(</span>message<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><h1 id=\"throw和throws的区别\"><a class=\"anchor\" href=\"#throw和throws的区别\">#</a> throw 和 throws 的区别</h1>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>意义                        位置            后面跟的东西</pre></td></tr><tr><td data-num=\"2\"></td><td><pre>throws  异常处理的一种方式          方法声明处      异常类型</pre></td></tr><tr><td data-num=\"3\"></td><td><pre>throw   手动生成异常对象的关键字    方法体中        异常对象 <span class=\"token punctuation\">(</span>new 异常类型<span class=\"token punctuation\">)</span></pre></td></tr></table></figure>",
            "tags": [
                "学习Java",
                "Java基础",
                "java"
            ]
        },
        {
            "id": "https://love.youhuamao.xyz/2022/10/21/Java/Java%E5%9F%BA%E7%A1%80/%E6%9E%9A%E4%B8%BE%EF%BC%8C%E6%B3%A8%E8%A7%A3/",
            "url": "https://love.youhuamao.xyz/2022/10/21/Java/Java%E5%9F%BA%E7%A1%80/%E6%9E%9A%E4%B8%BE%EF%BC%8C%E6%B3%A8%E8%A7%A3/",
            "title": "枚举，注解",
            "date_published": "2022-10-20T16:00:00.000Z",
            "content_html": "<h1 id=\"自定义枚举类\"><a class=\"anchor\" href=\"#自定义枚举类\">#</a> 自定义枚举类</h1>\n<ul>\n<li>枚举属于一种特殊的类，里面只包含一组有限的特定的对象。枚举是一组常量的集合。</li>\n<li>不需要提供 setXxx 方法，因为枚举对象值通常为只读.</li>\n<li>对枚举对象 / 属性使用 final + static 共同修饰，实现底层优化.(静态类如果使用 final 修饰，则不会被直接加载，需要调用才加载)</li>\n<li>枚举对象名通常使用全部大写，常量的命名规范.</li>\n<li>枚举对象根据需要，也可以有多个属性</li>\n</ul>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>class Season<span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>    private String name<span class=\"token punctuation\">;</span>//季节名称</pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    private String description<span class=\"token punctuation\">;</span>//季节描述</pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    public String <span class=\"token function-name function\">getName</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    <span class=\"token builtin class-name\">return</span> name<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>    public String <span class=\"token function-name function\">getDescription</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>    <span class=\"token builtin class-name\">return</span> description<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>    private Season<span class=\"token punctuation\">(</span>String name,String description<span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>    this.name <span class=\"token operator\">=</span> name<span class=\"token punctuation\">;</span> </pre></td></tr><tr><td data-num=\"12\"></td><td><pre>    this.description <span class=\"token operator\">=</span>  description<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>    public final static Season SPRING <span class=\"token operator\">=</span> new Season<span class=\"token punctuation\">(</span><span class=\"token string\">\"春天\"</span>,<span class=\"token string\">\"温暖\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>    public final static Season SUMMER <span class=\"token operator\">=</span> new Season<span class=\"token punctuation\">(</span><span class=\"token string\">\"夏天\"</span>,<span class=\"token string\">\"炎热\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>    public final static Season AUTUMN <span class=\"token operator\">=</span> new Season<span class=\"token punctuation\">(</span><span class=\"token string\">\"秋天\"</span>,<span class=\"token string\">\"凉爽\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>    public final static Season WINTER <span class=\"token operator\">=</span> new Season<span class=\"token punctuation\">(</span><span class=\"token string\">\"冬天\"</span>,<span class=\"token string\">\"寒冷\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>System.out.println<span class=\"token punctuation\">(</span>Season.AUTUMMN<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr></table></figure><h1 id=\"enum关键字实现枚举\"><a class=\"anchor\" href=\"#enum关键字实现枚举\">#</a> enum 关键字实现枚举</h1>\n<ul>\n<li>如果使用 enum 来实现枚举，要求将定义常量对象，写在前面</li>\n<li>当我们使用 enum 关键字开发一个枚举类时， 默认会继承 Enum 类</li>\n<li>传统的 public static final Season2 SPRING = new Season2 (&quot;春天&quot;,&quot;温暖&quot;); 简化成 SPRING (&quot;春天&quot;, &quot;温暖&quot;), 这里必须知道，它调用的是哪个构造器.</li>\n<li>如果使用无参构造器创建枚举对象，则实参列表和小括号都可以省略</li>\n<li>当有多个枚举对象时，使用间隔，最后有一个分号结尾</li>\n<li>枚举对象必须放在枚举类的行首.</li>\n</ul>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>class Season<span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>    WINTER<span class=\"token punctuation\">(</span><span class=\"token string\">\"冬天\"</span>,<span class=\"token string\">\"寒冷\"</span><span class=\"token punctuation\">)</span>,AUTUMN<span class=\"token punctuation\">(</span><span class=\"token string\">\"秋天\"</span>,<span class=\"token string\">\"凉爽\"</span><span class=\"token punctuation\">)</span>,SUMMER<span class=\"token punctuation\">(</span><span class=\"token string\">\"夏天\"</span>,<span class=\"token string\">\"炎热\"</span><span class=\"token punctuation\">)</span>,SPRING<span class=\"token punctuation\">(</span><span class=\"token string\">\"春天\"</span>,<span class=\"token string\">\"温暖\"</span><span class=\"token punctuation\">)</span>,What<span class=\"token punctuation\">;</span> </pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    private String name<span class=\"token punctuation\">;</span>//季节名称</pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    private String description<span class=\"token punctuation\">;</span>//季节描述</pre></td></tr><tr><td data-num=\"5\"></td><td><pre></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>    private Season<span class=\"token punctuation\">(</span>String name,String description<span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>    this.name <span class=\"token operator\">=</span> name<span class=\"token punctuation\">;</span> </pre></td></tr><tr><td data-num=\"8\"></td><td><pre>    this.description <span class=\"token operator\">=</span> description<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>    private Season<span class=\"token punctuation\">(</span>String name,String description<span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre></pre></td></tr><tr><td data-num=\"14\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>System.out.println<span class=\"token punctuation\">(</span>Season.AUTUMMN<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr></table></figure><ul>\n<li>当有多个枚举对象时，使用，间隔，最后有一个分号结尾</li>\n<li>枚举对象必须放在枚举类的行首.</li>\n</ul>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>class Season<span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>    WINTER<span class=\"token punctuation\">(</span><span class=\"token string\">\"冬天\"</span>,<span class=\"token string\">\"寒冷\"</span><span class=\"token punctuation\">)</span>,AUTUMN<span class=\"token punctuation\">(</span><span class=\"token string\">\"秋天\"</span>,<span class=\"token string\">\"凉爽\"</span><span class=\"token punctuation\">)</span>,SUMMER<span class=\"token punctuation\">(</span><span class=\"token string\">\"夏天\"</span>,<span class=\"token string\">\"炎热\"</span><span class=\"token punctuation\">)</span>,SPRING<span class=\"token punctuation\">(</span><span class=\"token string\">\"春天\"</span>,<span class=\"token string\">\"温暖\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> </pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    private String name<span class=\"token punctuation\">;</span>//季节名称</pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    private String description<span class=\"token punctuation\">;</span>//季节描述</pre></td></tr><tr><td data-num=\"5\"></td><td><pre></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>    private Season<span class=\"token punctuation\">(</span>String name,String description<span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>    this.name <span class=\"token operator\">=</span> name<span class=\"token punctuation\">;</span> </pre></td></tr><tr><td data-num=\"8\"></td><td><pre>    this.description <span class=\"token operator\">=</span>  description<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre></pre></td></tr><tr><td data-num=\"11\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>System.out.println<span class=\"token punctuation\">(</span>Season.AUTUMMN<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr></table></figure><figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>enum</pre></td></tr><tr><td data-num=\"2\"></td><td><pre>Gender2<span class=\"token punctuation\">&#123;</span> //父类Enum的toString</pre></td></tr><tr><td data-num=\"3\"></td><td><pre>BOY,GIRL<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>Gender2 boy <span class=\"token operator\">=</span> Gender2.BOY<span class=\"token punctuation\">;</span>//OK</pre></td></tr><tr><td data-num=\"6\"></td><td><pre>Gender2 boy2 <span class=\"token operator\">=</span> Gender2.BOY<span class=\"token punctuation\">;</span>//OK</pre></td></tr><tr><td data-num=\"7\"></td><td><pre>System.out.println<span class=\"token punctuation\">(</span>boy<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> //本质就是调用Gender2的父类Enum的toString<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>public String <span class=\"token function-name function\">toString</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>    <span class=\"token builtin class-name\">return</span> name<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>System.out.println<span class=\"token punctuation\">(</span>boy2 <span class=\"token operator\">==</span> boy<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>//True</pre></td></tr></table></figure><h1 id=\"enum常用方法应用实例\"><a class=\"anchor\" href=\"#enum常用方法应用实例\">#</a> enum 常用方法应用实例</h1>\n<ul>\n<li>toString:Enum 类已经重写过了，返回的是当前对象名，子类可以重写该方法，用于返回对象的属性信息</li>\n<li>name: 返回当前对象名 (常量名) , 子类中不能重写</li>\n<li>ordinal: 返回当前对象的位置号，默认从 0 开始</li>\n<li>values: 返回当前枚举类中所有的常量</li>\n<li>valueOf: 将字符串转换成枚举对象，要求字符串必须为已有的常量名，否则报异常！</li>\n<li>compareTo: 比较两个枚举常量，比较的就是位置号！</li>\n</ul>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>Season2 autumn <span class=\"token operator\">=</span> Season2.AUTUMN<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>System.out.println<span class=\"token punctuation\">(</span>autumn<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>System.out.println<span class=\"token punctuation\">(</span>autumn.name<span class=\"token punctuation\">(</span><span class=\"token punctuation\">))</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>System.out.println<span class=\"token punctuation\">(</span>autumn.ordinal<span class=\"token punctuation\">(</span><span class=\"token punctuation\">))</span><span class=\"token punctuation\">;</span> //2</pre></td></tr><tr><td data-num=\"5\"></td><td><pre>Season2<span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> values F Season2.values<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span>Season2 season2 <span class=\"token builtin class-name\">:</span> values<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>/增强for</pre></td></tr><tr><td data-num=\"7\"></td><td><pre>System.out.println<span class=\"token punctuation\">(</span>season2<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>Season2 value <span class=\"token operator\">=</span> Season2.valueOf<span class=\"token punctuation\">(</span><span class=\"token string\">\"SPRING\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>System.out.println<span class=\"token punctuation\">(</span>value<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>System.out.println<span class=\"token punctuation\">(</span>autumn.compare To<span class=\"token punctuation\">(</span>value<span class=\"token punctuation\">))</span><span class=\"token punctuation\">;</span></pre></td></tr></table></figure><h1 id=\"enum实现接口\"><a class=\"anchor\" href=\"#enum实现接口\">#</a> enum 实现接口</h1>\n<ul>\n<li>使用 enum 关键字后，就不能再继承其它类了，因为 enum 会隐式继承 Enum, 而 Java 是单继承机制。</li>\n<li>枚举类和普通类一样，可以实现接口，如下形式。<br />\nenum 类名 implements 接口 1, 接口 2 {}</li>\n</ul>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>interface IPLaying <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>public void pLaying<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>enum Music impLements IPLaying <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    CLASSICMUISC<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>    @Override </pre></td></tr><tr><td data-num=\"7\"></td><td><pre>    pubLic void <span class=\"token function-name function\">playing</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>    System.out.println<span class=\"token punctuation\">(</span><span class=\"token string\">\"播放好听的音乐...\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>Music.CLASSICMUISC.playing<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr></table></figure><h1 id=\"注解\"><a class=\"anchor\" href=\"#注解\">#</a> 注解</h1>\n<ul>\n<li>注解 (Annotation 也被称为元数据 (Metadata), 用于修饰解释包、类、方法、属性、构造器、局部变量等数据信息。</li>\n<li>和注释一样，注解不影响程序逻辑，但注解可以被编译或运行，相当于嵌入在代码中的补充信息。</li>\n<li>在 JavaSE 中， 注解的使用目的比较简单，例如标记过时的功能，忽略警告等。在 JavaEE 中注解占据了更重要的角色，例如用来配置应用程序的任何切面，代替 java EE 旧版中所遗留的繁冗代码和 XML 配置等。</li>\n</ul>\n<h1 id=\"基本的annotation介绍\"><a class=\"anchor\" href=\"#基本的annotation介绍\">#</a> 基本的 Annotation 介绍</h1>\n<p>使用 Annotation 时要在其前面增加 @符号，并把该 Annotation 当成一个修饰符使用。用于修饰它支持的程序元素</p>\n<ul>\n<li>@Override: 限定某个方法，是重写父类方法，该注解只能用于方法</li>\n<li>@Override 表示指定重写父类的方法 (从编译层面验证) , 如果父类没有 fly 方法，则会报错</li>\n<li>如果不写 @Override 注解，而父类仍有 public void fly (){} , 仍然构成重写</li>\n<li>@Override 只能修饰方法，不能修饰其它类，包，属性等等</li>\n<li>查看 @Override 注解源码为 @Target (ElementType.METHOD), 说明只能修饰方法</li>\n<li>@Target 是修饰注解的注解，称为元注解</li>\n</ul>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>class Father<span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>    public void <span class=\"token function-name function\">fly</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>        System.out.println<span class=\"token punctuation\">(</span><span class=\"token string\">\"Father fly..\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>class Son extends Father <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>    @Override //说明 @Override放在fLy方法上，表示子类的fly方法时重写了父类的fly</pre></td></tr><tr><td data-num=\"8\"></td><td><pre>              //如果你写了@Override注解，编译器就会去检查该方法是否真的重写了父类的方法，如果的确重写了，则编译通过，如果没有构成重写，则编译错误</pre></td></tr><tr><td data-num=\"9\"></td><td><pre></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>    public void <span class=\"token function-name function\">fly</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>        System.out.println<span class=\"token punctuation\">(</span><span class=\"token string\">\"Son f.y..\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span class=\"token builtin class-name\">.</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><ul>\n<li>@Deprecated: 用于表示某个程序元素 (类，方法等) 已过时 即不在推荐使用，但是仍然可以使用</li>\n<li>可以修饰方法，美，字段，包，参数等等</li>\n<li>@Target(value= {CONSTRUCTOR, FIELD, LOCAL VARIABLE, METHOD,PACKAGE, PARAMETER, TYPE})</li>\n<li>@Deprecated 的作用可以做到新旧版本的兼容和过渡</li>\n</ul>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>@Deprecated</pre></td></tr><tr><td data-num=\"2\"></td><td><pre>    class Father<span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>        @Deprecated</pre></td></tr><tr><td data-num=\"4\"></td><td><pre>        public String Aame<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>        public void <span class=\"token function-name function\">fly</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>            System.out.printIn<span class=\"token punctuation\">(</span><span class=\"token string\">\"Faterfly.. \"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>    //@Deprecated的说明几点.</pre></td></tr><tr><td data-num=\"9\"></td><td><pre>        @Deprecated</pre></td></tr><tr><td data-num=\"10\"></td><td><pre>        public void <span class=\"token function-name function\">sing</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>            System.out.println<span class=\"token punctuation\">(</span><span class=\"token string\">\"Father sing... \"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>class Son extends Father<span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>    //Override使用说明</pre></td></tr><tr><td data-num=\"16\"></td><td><pre>    @Override</pre></td></tr><tr><td data-num=\"17\"></td><td><pre>    public void <span class=\"token function-name function\">fly</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>        System.out.println<span class=\"token punctuation\">(</span><span class=\"token string\">\"Son fly.... \"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><ul>\n<li>@SuppressWarnings 抑制编译器警告</li>\n</ul>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>@SuppressWarnings<span class=\"token punctuation\">(</span><span class=\"token punctuation\">&#123;</span><span class=\"token string\">\"aU\"</span><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span> //抑制所有警告</pre></td></tr><tr><td data-num=\"2\"></td><td><pre></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    public class AnnotationDemo01 <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>        public static void main<span class=\"token punctuation\">(</span>String<span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> args<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>            List list <span class=\"token operator\">=</span> new ArrayList<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>            list.add<span class=\"token punctuation\">(</span><span class=\"token string\">\"\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>            list.add<span class=\"token punctuation\">(</span><span class=\"token string\">\"\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>            list.add<span class=\"token punctuation\">(</span><span class=\"token string\">\"\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>            int i<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>            System.out.println<span class=\"token punctuation\">(</span>list.get<span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">))</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre></pre></td></tr><tr><td data-num=\"14\"></td><td><pre></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>    unchecked 是忽略没有检查的警告</pre></td></tr><tr><td data-num=\"16\"></td><td><pre>    rawtypes 是忽略没有指定泛型的警告<span class=\"token punctuation\">(</span>传参时没有指定泛型的警告错误<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>    unused 是忽略没有使用某个变量的警告错误</pre></td></tr><tr><td data-num=\"18\"></td><td><pre>    @SuppressWarnings 可以修饰的程序元素为，查看@Target </pre></td></tr><tr><td data-num=\"19\"></td><td><pre>    生成@SupperssWarnings时，不用背，直接点击左侧的黄色提示，就可以选择<span class=\"token punctuation\">(</span>注意可以指定生成的位置<span class=\"token punctuation\">)</span></pre></td></tr></table></figure><h1 id=\"四种元注解\"><a class=\"anchor\" href=\"#四种元注解\">#</a> 四种元注解</h1>\n<ul>\n<li>Retention // 指定注解的作用范围，三种 SOURCE,CLASS, RUNTIME</li>\n<li>Target // 指定注解可以在哪些地方使用</li>\n<li>Documented // 指定该注解是否会在 javadoc 体现</li>\n<li>Inherited // 子类会继承父类注解</li>\n</ul>\n",
            "tags": [
                "学习Java",
                "Java基础",
                "java"
            ]
        },
        {
            "id": "https://love.youhuamao.xyz/2022/10/21/Java/SSM/Mybatis/%E5%88%9D%E8%AF%86%E5%88%ABMybatis/",
            "url": "https://love.youhuamao.xyz/2022/10/21/Java/SSM/Mybatis/%E5%88%9D%E8%AF%86%E5%88%ABMybatis/",
            "title": "初识别Mybatis",
            "date_published": "2022-10-20T16:00:00.000Z",
            "content_html": "<h1 id=\"mybatis-928\"><a class=\"anchor\" href=\"#mybatis-928\">#</a> Mybatis-9.28</h1>\n<ul>\n<li>环境</li>\n</ul>\n<ol>\n<li>JDK1.8</li>\n<li>Mysql 5.7</li>\n<li>maven 3.6.1</li>\n<li>IDEA</li>\n</ol>\n<h1 id=\"什么是mybatis\"><a class=\"anchor\" href=\"#什么是mybatis\">#</a> 什么是 Mybatis</h1>\n<ul>\n<li>MyBatis 是一款优秀的持久层框架</li>\n<li>它支持定制化 SQL、存储过程以及高级映射。</li>\n<li>MyBatis 避免了几乎所有的 JDBC 代码和手动设置参数以及获取结果集。</li>\n<li>MyBatis 可以使用简单的 XML 或注解来配置和映射原生类型、接口和 Java 的 POJO (Plain Old Java</li>\n<li>Objects, 普通老式 Java 对象) 为数据库中的记录。</li>\n<li>MyBatis 本是 apache 的一一个开源项目 Batis, 2010 年这个项目由 apache software foundation 迁移到了</li>\n<li>google code, 并且改名为 MyBatis。</li>\n<li>2013 年 11 月迁移到 Github.</li>\n</ul>\n<h1 id=\"如何获得mybatis\"><a class=\"anchor\" href=\"#如何获得mybatis\">#</a> 如何获得 Mybatis</h1>\n<ul>\n<li>maven 仓库</li>\n</ul>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token operator\">&lt;</span><span class=\"token operator\">!</span>-- https: //mvnreposi tory. com/arti fact/org. mybatis/mybatis --<span class=\"token operator\">></span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token operator\">&lt;</span>dependency<span class=\"token operator\">></span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    <span class=\"token operator\">&lt;</span>groupId<span class=\"token operator\">></span>org. mybatis<span class=\"token operator\">&lt;</span>/ groupId<span class=\"token operator\">></span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    <span class=\"token operator\">&lt;</span>artifactId<span class=\"token operator\">></span>mybatis<span class=\"token operator\">&lt;</span>/artifactId<span class=\"token operator\">></span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    <span class=\"token operator\">&lt;</span>version<span class=\"token operator\">></span><span class=\"token number\">3.5</span>.<span class=\"token operator\"><span class=\"token file-descriptor important\">2</span>&lt;</span>/versi on<span class=\"token operator\">></span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token operator\">&lt;</span>/dependency<span class=\"token operator\">></span></pre></td></tr></table></figure><ul>\n<li>Github:<span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL215YmF0aXMvbXliYXRpcy0zL3JlbGVhc2Vz\">https://github.com/mybatis/mybatis-3/releases</span></li>\n<li>中文文档: <span class=\"exturl\" data-url=\"aHR0cHM6Ly9teWJhdGlzLm9yZy9teWJhdGlzLTMvemgvaW5kZXguaHRtbA==\">https://mybatis.org/mybatis-3/zh/index.html</span></li>\n</ul>\n<h1 id=\"持久化\"><a class=\"anchor\" href=\"#持久化\">#</a> 持久化</h1>\n<ul>\n<li>数据持久化</li>\n</ul>\n<ol>\n<li>持久化就是将程序的数据在持久状态和瞬时状态转化的过程</li>\n<li>内存：断电即失</li>\n<li>数据库 (Jdbc), io 文件持久化。</li>\n<li>生活：冷藏。罐头。</li>\n</ol>\n<ul>\n<li>为什么需要持久化</li>\n</ul>\n<ol>\n<li>有一些对象，不能让他丢掉</li>\n<li>内存太贵了</li>\n</ol>\n<h1 id=\"持久层\"><a class=\"anchor\" href=\"#持久层\">#</a> 持久层</h1>\n<ul>\n<li>Dao 层，Service 层， Controller 层. ..</li>\n<li>完成持久化工作的代码块</li>\n<li>层界限十分明显。</li>\n</ul>\n<h1 id=\"为什么需要mybatis\"><a class=\"anchor\" href=\"#为什么需要mybatis\">#</a> 为什么需要 Mybatis</h1>\n<ul>\n<li>帮助程序猿将数据存入到数据库中。</li>\n<li>方便</li>\n<li>传统的 JDBC 代码太复杂了。简化。框架。自动化。</li>\n<li>不用 Mybatis 也可以。 更容易上手。技术没有高低之分</li>\n<li>优点:</li>\n</ul>\n<ol>\n<li>简单易学</li>\n<li>灵活</li>\n<li>sq | 和代码的分离，提高了可维护性。</li>\n<li>提供映射标签，支持对象与数据库的 orm 字段关系映射</li>\n<li>提供对象关系映射标签，支持对象关系组建维护</li>\n<li>提供 xml 标签，支持编写动态 sq|。</li>\n</ol>\n<h1 id=\"第一个mybatis程序\"><a class=\"anchor\" href=\"#第一个mybatis程序\">#</a> 第一个 Mybatis 程序</h1>\n<h2 id=\"搭建环境\"><a class=\"anchor\" href=\"#搭建环境\">#</a> 搭建环境</h2>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>CREATE DATABASE <span class=\"token variable\"><span class=\"token variable\">`</span>mybatis<span class=\"token variable\">`</span></span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>USE <span class=\"token variable\"><span class=\"token variable\">`</span>mybatis<span class=\"token variable\">`</span></span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>CREATE TABLE <span class=\"token variable\"><span class=\"token variable\">`</span>user<span class=\"token variable\">`</span></span><span class=\"token punctuation\">(</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>\t<span class=\"token variable\"><span class=\"token variable\">`</span><span class=\"token function\">id</span><span class=\"token variable\">`</span></span> INT <span class=\"token punctuation\">(</span><span class=\"token number\">20</span><span class=\"token punctuation\">)</span> NOT NULL PRIMARY KEY,\t</pre></td></tr><tr><td data-num=\"7\"></td><td><pre>\t<span class=\"token variable\"><span class=\"token variable\">`</span>name<span class=\"token variable\">`</span></span> VARCHAR <span class=\"token punctuation\">(</span><span class=\"token number\">30</span><span class=\"token punctuation\">)</span> DEFAULT NULL,</pre></td></tr><tr><td data-num=\"8\"></td><td><pre>\t<span class=\"token variable\"><span class=\"token variable\">`</span><span class=\"token builtin class-name\">pwd</span><span class=\"token variable\">`</span></span> VARCHAR <span class=\"token punctuation\">(</span><span class=\"token number\">30</span><span class=\"token punctuation\">)</span> DEFAULT NULL</pre></td></tr><tr><td data-num=\"9\"></td><td><pre><span class=\"token punctuation\">)</span> <span class=\"token assign-left variable\">ENGINE</span><span class=\"token operator\">=</span> INNODB DEFAULT <span class=\"token assign-left variable\">CHARSET</span><span class=\"token operator\">=</span>utf8<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>INSERT INTO <span class=\"token variable\"><span class=\"token variable\">`</span>user<span class=\"token variable\">`</span></span><span class=\"token punctuation\">(</span><span class=\"token variable\"><span class=\"token variable\">`</span><span class=\"token function\">id</span><span class=\"token variable\">`</span></span>,<span class=\"token variable\"><span class=\"token variable\">`</span>name<span class=\"token variable\">`</span></span>,<span class=\"token variable\"><span class=\"token variable\">`</span><span class=\"token builtin class-name\">pwd</span><span class=\"token variable\">`</span></span><span class=\"token punctuation\">)</span> VALUES</pre></td></tr><tr><td data-num=\"12\"></td><td><pre><span class=\"token punctuation\">(</span><span class=\"token number\">1</span>,<span class=\"token string\">'幽化猫'</span>,<span class=\"token string\">'123456'</span><span class=\"token punctuation\">)</span> ,</pre></td></tr><tr><td data-num=\"13\"></td><td><pre><span class=\"token punctuation\">(</span><span class=\"token number\">2</span>,<span class=\"token string\">'张三'</span>,<span class=\"token string\">'123456'</span><span class=\"token punctuation\">)</span> ,</pre></td></tr><tr><td data-num=\"14\"></td><td><pre><span class=\"token punctuation\">(</span><span class=\"token number\">3</span>,<span class=\"token string\">'李四'</span>,<span class=\"token string\">'123456'</span><span class=\"token punctuation\">)</span></pre></td></tr></table></figure><h2 id=\"新建项目\"><a class=\"anchor\" href=\"#新建项目\">#</a> 新建项目</h2>\n<ul>\n<li>新建一一个普通的 maven 项目</li>\n<li>删除 src 目录</li>\n<li>导入 maven 依赖</li>\n</ul>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token operator\">&lt;</span><span class=\"token operator\">!</span>--导入依赖--<span class=\"token operator\">></span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>    <span class=\"token operator\">&lt;</span>dependencies<span class=\"token operator\">></span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>        <span class=\"token operator\">&lt;</span><span class=\"token operator\">!</span>--mysql驱动--<span class=\"token operator\">></span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>        <span class=\"token operator\">&lt;</span>dependency<span class=\"token operator\">></span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>            <span class=\"token operator\">&lt;</span>groupId<span class=\"token operator\">></span>mysql<span class=\"token operator\">&lt;</span>/groupId<span class=\"token operator\">></span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>            <span class=\"token operator\">&lt;</span>artifactId<span class=\"token operator\">></span>mysql-connector-java<span class=\"token operator\">&lt;</span>/artifactId<span class=\"token operator\">></span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>            <span class=\"token operator\">&lt;</span>version<span class=\"token operator\">></span><span class=\"token number\">5.1</span>.4<span class=\"token operator\"><span class=\"token file-descriptor important\">6</span>&lt;</span>/version<span class=\"token operator\">></span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>        <span class=\"token operator\">&lt;</span>/dependency<span class=\"token operator\">></span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>        <span class=\"token operator\">&lt;</span><span class=\"token operator\">!</span>--mybatis--<span class=\"token operator\">></span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>        <span class=\"token operator\">&lt;</span>dependency<span class=\"token operator\">></span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>            <span class=\"token operator\">&lt;</span>groupId<span class=\"token operator\">></span>org.mybatis<span class=\"token operator\">&lt;</span>/groupId<span class=\"token operator\">></span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>            <span class=\"token operator\">&lt;</span>artifactId<span class=\"token operator\">></span>mybatis<span class=\"token operator\">&lt;</span>/artifactId<span class=\"token operator\">></span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>            <span class=\"token operator\">&lt;</span>version<span class=\"token operator\">></span><span class=\"token number\">3.5</span>.<span class=\"token operator\"><span class=\"token file-descriptor important\">2</span>&lt;</span>/version<span class=\"token operator\">></span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>        <span class=\"token operator\">&lt;</span>/dependency<span class=\"token operator\">></span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>        <span class=\"token operator\">&lt;</span><span class=\"token operator\">!</span>--junit--<span class=\"token operator\">></span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>        <span class=\"token operator\">&lt;</span>dependency<span class=\"token operator\">></span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>            <span class=\"token operator\">&lt;</span>groupId<span class=\"token operator\">></span>junit<span class=\"token operator\">&lt;</span>/groupId<span class=\"token operator\">></span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>            <span class=\"token operator\">&lt;</span>artifactId<span class=\"token operator\">></span>junit<span class=\"token operator\">&lt;</span>/artifactId<span class=\"token operator\">></span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>            <span class=\"token operator\">&lt;</span>version<span class=\"token operator\">></span><span class=\"token number\">4.1</span><span class=\"token operator\"><span class=\"token file-descriptor important\">2</span>&lt;</span>/version<span class=\"token operator\">></span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>        <span class=\"token operator\">&lt;</span>/dependency<span class=\"token operator\">></span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>    <span class=\"token operator\">&lt;</span>/dependencies<span class=\"token operator\">></span></pre></td></tr></table></figure><h2 id=\"创建模块\"><a class=\"anchor\" href=\"#创建模块\">#</a> 创建模块</h2>\n<ul>\n<li>编写 mybatis 的核心配置文件</li>\n</ul>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token operator\">&lt;</span>?xml <span class=\"token assign-left variable\">version</span><span class=\"token operator\">=</span><span class=\"token string\">\"1.0\"</span> <span class=\"token assign-left variable\">encoding</span><span class=\"token operator\">=</span><span class=\"token string\">\"UTF-8\"</span> ?<span class=\"token operator\">></span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token operator\">&lt;</span><span class=\"token operator\">!</span>DOCTYPE configuration</pre></td></tr><tr><td data-num=\"3\"></td><td><pre>        PUBLIC <span class=\"token string\">\"-//mybatis.org//DTD Config 3.0//EN\"</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>        <span class=\"token string\">\"https://mybatis.org/dtd/mybatis-3-config.dtd\"</span><span class=\"token operator\">></span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token operator\">&lt;</span>configuration<span class=\"token operator\">></span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>    <span class=\"token operator\">&lt;</span>environments <span class=\"token assign-left variable\">default</span><span class=\"token operator\">=</span><span class=\"token string\">\"development\"</span><span class=\"token operator\">></span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>        <span class=\"token operator\">&lt;</span>environment <span class=\"token assign-left variable\">id</span><span class=\"token operator\">=</span><span class=\"token string\">\"development\"</span><span class=\"token operator\">></span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>            <span class=\"token operator\">&lt;</span>transactionManager <span class=\"token assign-left variable\">type</span><span class=\"token operator\">=</span><span class=\"token string\">\"JDBC\"</span>/<span class=\"token operator\">></span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>            <span class=\"token operator\">&lt;</span>dataSource <span class=\"token assign-left variable\">type</span><span class=\"token operator\">=</span><span class=\"token string\">\"POOLED\"</span><span class=\"token operator\">></span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>                <span class=\"token operator\">&lt;</span>property <span class=\"token assign-left variable\">name</span><span class=\"token operator\">=</span><span class=\"token string\">\"driver\"</span> <span class=\"token assign-left variable\">value</span><span class=\"token operator\">=</span><span class=\"token string\">\"com.mysql.jdbc.Driver\"</span>/<span class=\"token operator\">></span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>                <span class=\"token operator\">&lt;</span>property <span class=\"token assign-left variable\">name</span><span class=\"token operator\">=</span><span class=\"token string\">\"url\"</span> <span class=\"token assign-left variable\">value</span><span class=\"token operator\">=</span><span class=\"token string\">\"jdbc:mysql://localhost:3306?useSSL=true&amp;amp;useUnicode=true&amp;amp;characterEncoding=UTF-8 \"</span>/<span class=\"token operator\">></span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>                <span class=\"token operator\">&lt;</span>property <span class=\"token assign-left variable\">name</span><span class=\"token operator\">=</span><span class=\"token string\">\"username\"</span> <span class=\"token assign-left variable\">value</span><span class=\"token operator\">=</span><span class=\"token string\">\"root\"</span>/<span class=\"token operator\">></span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>                <span class=\"token operator\">&lt;</span>property <span class=\"token assign-left variable\">name</span><span class=\"token operator\">=</span><span class=\"token string\">\"password\"</span> <span class=\"token assign-left variable\">value</span><span class=\"token operator\">=</span><span class=\"token string\">\"g123698745\"</span>/<span class=\"token operator\">></span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>            <span class=\"token operator\">&lt;</span>/dataSource<span class=\"token operator\">></span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>        <span class=\"token operator\">&lt;</span>/environment<span class=\"token operator\">></span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>    <span class=\"token operator\">&lt;</span>/environments<span class=\"token operator\">></span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>    <span class=\"token operator\">&lt;</span>mappers<span class=\"token operator\">></span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>        <span class=\"token operator\">&lt;</span>mapper <span class=\"token assign-left variable\">resource</span><span class=\"token operator\">=</span><span class=\"token string\">\"org/mybatis/example/BlogMapper.xml\"</span>/<span class=\"token operator\">></span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>    <span class=\"token operator\">&lt;</span>/mappers<span class=\"token operator\">></span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre><span class=\"token operator\">&lt;</span>/configuration<span class=\"token operator\">></span></pre></td></tr></table></figure><ul>\n<li>编写工具类</li>\n</ul>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>package com.kuang.utils<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token function\">import</span> org.apache.ibatis.io.Resources<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token function\">import</span> org.apache.ibatis.session.SqlSession<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token function\">import</span> org.apache.ibatis.session.SqlSessionFactory<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token function\">import</span> org.apache.ibatis.session.SqlSessionFactoryBuilder<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre></pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token function\">import</span> java.io.IOException<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre><span class=\"token function\">import</span> java.io.InputStream<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>//sqlSessionFactory --<span class=\"token operator\">></span> sqlSession</pre></td></tr><tr><td data-num=\"12\"></td><td><pre>public class MybatisUtils <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>    private static SqlSessionFactory sqlSessionFactory<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>    static <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>        try <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>            //使用Mybatis第一步: 获取sqLSess ionFactory对象</pre></td></tr><tr><td data-num=\"18\"></td><td><pre>            String resource <span class=\"token operator\">=</span> <span class=\"token string\">\"mybatis-config.xml\"</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>            InputStream inputStream <span class=\"token operator\">=</span> Resources.getResourceAsStream<span class=\"token punctuation\">(</span>resource<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>            sqlSessionFactory <span class=\"token operator\">=</span> new SqlSessionFactoryBuilder<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>.build<span class=\"token punctuation\">(</span>inputStream<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span> catch <span class=\"token punctuation\">(</span>IOException e<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>            throw new RuntimeException<span class=\"token punctuation\">(</span>e<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre></pre></td></tr><tr><td data-num=\"26\"></td><td><pre>    //既然有了SqlSessionFactory, 顾名思义，我们就可以从中获得SqLSession 的实例了。</pre></td></tr><tr><td data-num=\"27\"></td><td><pre>    // SqlSession 完企包含了面向数据库执行SQL命令所需的所有方法.</pre></td></tr><tr><td data-num=\"28\"></td><td><pre>    public static SqlSession <span class=\"token function-name function\">getSqlSession</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"29\"></td><td><pre>        <span class=\"token builtin class-name\">return</span> sqlSessionFactory.openSession<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"30\"></td><td><pre></pre></td></tr><tr><td data-num=\"31\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"32\"></td><td><pre></pre></td></tr><tr><td data-num=\"33\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><h2 id=\"编写代码\"><a class=\"anchor\" href=\"#编写代码\">#</a> 编写代码</h2>\n<ul>\n<li>实体类</li>\n</ul>\n<figure class=\"highlight java\"><figcaption data-lang=\"java\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">User</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>    <span class=\"token keyword\">private</span> <span class=\"token keyword\">int</span> id<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    <span class=\"token keyword\">private</span> <span class=\"token class-name\">String</span> name<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    <span class=\"token keyword\">private</span> <span class=\"token class-name\">String</span> pwd<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token class-name\">User</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> id<span class=\"token punctuation\">,</span> <span class=\"token class-name\">String</span> name<span class=\"token punctuation\">,</span> <span class=\"token class-name\">String</span> pwd<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>        <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>id <span class=\"token operator\">=</span> id<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>        <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>name <span class=\"token operator\">=</span> name<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>        <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>pwd <span class=\"token operator\">=</span> pwd<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token keyword\">int</span> <span class=\"token function\">getId</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>        <span class=\"token keyword\">return</span> id<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token keyword\">void</span> <span class=\"token function\">setId</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> id<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>        <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>id <span class=\"token operator\">=</span> id<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token class-name\">String</span> <span class=\"token function\">getName</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>        <span class=\"token keyword\">return</span> name<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token keyword\">void</span> <span class=\"token function\">setName</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">String</span> name<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre>        <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>name <span class=\"token operator\">=</span> name<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre></pre></td></tr><tr><td data-num=\"28\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token class-name\">String</span> <span class=\"token function\">getPwd</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"29\"></td><td><pre>        <span class=\"token keyword\">return</span> pwd<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"30\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"31\"></td><td><pre></pre></td></tr><tr><td data-num=\"32\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token keyword\">void</span> <span class=\"token function\">setPwd</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">String</span> pwd<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"33\"></td><td><pre>        <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>pwd <span class=\"token operator\">=</span> pwd<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"34\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"35\"></td><td><pre></pre></td></tr><tr><td data-num=\"36\"></td><td><pre>    <span class=\"token annotation punctuation\">@Override</span></pre></td></tr><tr><td data-num=\"37\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token class-name\">String</span>  <span class=\"token function\">toString</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"38\"></td><td><pre>        <span class=\"token keyword\">return</span> <span class=\"token string\">\"User&#123;\"</span> <span class=\"token operator\">+</span></pre></td></tr><tr><td data-num=\"39\"></td><td><pre>                <span class=\"token string\">\"id=\"</span> <span class=\"token operator\">+</span> id <span class=\"token operator\">+</span></pre></td></tr><tr><td data-num=\"40\"></td><td><pre>                <span class=\"token string\">\", name='\"</span> <span class=\"token operator\">+</span> name <span class=\"token operator\">+</span> <span class=\"token char\">'\\''</span> <span class=\"token operator\">+</span></pre></td></tr><tr><td data-num=\"41\"></td><td><pre>                <span class=\"token string\">\", pwd='\"</span> <span class=\"token operator\">+</span> pwd <span class=\"token operator\">+</span> <span class=\"token char\">'\\''</span> <span class=\"token operator\">+</span></pre></td></tr><tr><td data-num=\"42\"></td><td><pre>                <span class=\"token char\">'&#125;'</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"43\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"44\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><ul>\n<li>Dao 接口</li>\n</ul>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>pub1ic interface UserDao <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>    List<span class=\"token operator\">&lt;</span>User<span class=\"token operator\">></span> getuserlist<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><ul>\n<li>接口实现类由原来的 UserDaoImpl 转变为一个 Mapper 配置文件</li>\n</ul>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token operator\">&lt;</span>?xml <span class=\"token assign-left variable\">version</span><span class=\"token operator\">=</span><span class=\"token string\">\"1.0\"</span> <span class=\"token assign-left variable\">encoding</span><span class=\"token operator\">=</span><span class=\"token string\">\"UTF-8\"</span> ?<span class=\"token operator\">></span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token operator\">&lt;</span><span class=\"token operator\">!</span>DOCTYPE mapper</pre></td></tr><tr><td data-num=\"3\"></td><td><pre>        PUBLIC <span class=\"token string\">\"-//mybatis.org//DTD Mapper 3.0//EN\"</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>        <span class=\"token string\">\"https://mybatis.org/dtd/mybatis-3-mapper.dtd\"</span><span class=\"token operator\">></span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token operator\">&lt;</span><span class=\"token operator\">!</span>--namespace<span class=\"token operator\">=</span>绑定一个 对应的Dao/Mapper接口--<span class=\"token operator\">></span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token operator\">&lt;</span>mapper <span class=\"token assign-left variable\">namespace</span><span class=\"token operator\">=</span><span class=\"token string\">\"com.kuang.dao.UseDao\"</span><span class=\"token operator\">></span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>    <span class=\"token operator\">&lt;</span>select <span class=\"token assign-left variable\">id</span><span class=\"token operator\">=</span><span class=\"token string\">\"getUserList\"</span> <span class=\"token assign-left variable\">resultType</span><span class=\"token operator\">=</span><span class=\"token string\">\"com.kuang.pojo.User\"</span><span class=\"token operator\">></span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>        <span class=\"token keyword\">select</span> * from mybatis.user<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>    <span class=\"token operator\">&lt;</span>/select<span class=\"token operator\">></span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre><span class=\"token operator\">&lt;</span>/mapper<span class=\"token operator\">></span></pre></td></tr></table></figure><h2 id=\"测试\"><a class=\"anchor\" href=\"#测试\">#</a> 测试</h2>\n<p>常见错误</p>\n<ul>\n<li>org.apache.ibatis.binding.BindingException: Type interface com.kuang.dao.UserDao is not known to the MapperRegistry.</li>\n</ul>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token operator\">&lt;</span>mappers<span class=\"token operator\">></span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>        <span class=\"token operator\">&lt;</span>mapper <span class=\"token assign-left variable\">resource</span><span class=\"token operator\">=</span><span class=\"token string\">\"com/kuang/dao/UserMapper.xml\"</span>/<span class=\"token operator\">></span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    <span class=\"token operator\">&lt;</span>/mappers<span class=\"token operator\">></span></pre></td></tr></table></figure><ul>\n<li>资源导出问题</li>\n</ul>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>在pom.xml加上</pre></td></tr><tr><td data-num=\"2\"></td><td><pre>    <span class=\"token operator\">&lt;</span>build<span class=\"token operator\">></span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>        <span class=\"token operator\">&lt;</span>resources<span class=\"token operator\">></span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>            <span class=\"token operator\">&lt;</span>resource<span class=\"token operator\">></span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>                <span class=\"token operator\">&lt;</span>directory<span class=\"token operator\">></span>src/main/resources<span class=\"token operator\">&lt;</span>/directory<span class=\"token operator\">></span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>                <span class=\"token operator\">&lt;</span>includes<span class=\"token operator\">></span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>                    <span class=\"token operator\">&lt;</span>include<span class=\"token operator\">></span>**/*.xml<span class=\"token operator\">&lt;</span>/include<span class=\"token operator\">></span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>                    <span class=\"token operator\">&lt;</span>include<span class=\"token operator\">></span>**/*.properties<span class=\"token operator\">&lt;</span>/include<span class=\"token operator\">></span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>                <span class=\"token operator\">&lt;</span>/includes<span class=\"token operator\">></span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>                <span class=\"token operator\">&lt;</span>filtering<span class=\"token operator\">></span>true<span class=\"token operator\">&lt;</span>/filtering<span class=\"token operator\">></span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>            <span class=\"token operator\">&lt;</span>/resource<span class=\"token operator\">></span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>            <span class=\"token operator\">&lt;</span>resource<span class=\"token operator\">></span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>                <span class=\"token operator\">&lt;</span>directory<span class=\"token operator\">></span>src/main/java<span class=\"token operator\">&lt;</span>/directory<span class=\"token operator\">></span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>                <span class=\"token operator\">&lt;</span>includes<span class=\"token operator\">></span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>                    <span class=\"token operator\">&lt;</span>include<span class=\"token operator\">></span>**/*.xml<span class=\"token operator\">&lt;</span>/include<span class=\"token operator\">></span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>                    <span class=\"token operator\">&lt;</span>include<span class=\"token operator\">></span>**/*.properties<span class=\"token operator\">&lt;</span>/include<span class=\"token operator\">></span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>                <span class=\"token operator\">&lt;</span>/includes<span class=\"token operator\">></span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>                <span class=\"token operator\">&lt;</span>filtering<span class=\"token operator\">></span>true<span class=\"token operator\">&lt;</span>/filtering<span class=\"token operator\">></span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>            <span class=\"token operator\">&lt;</span>/resource<span class=\"token operator\">></span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>        <span class=\"token operator\">&lt;</span>/resources<span class=\"token operator\">></span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>    <span class=\"token operator\">&lt;</span>/build<span class=\"token operator\">></span></pre></td></tr></table></figure><ul>\n<li>junit 测试</li>\n</ul>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>package com.kuang.dao<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token function\">import</span> com.kuang.pojo.User<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token function\">import</span> com.kuang.utils.MybatisUtils<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token function\">import</span> org.apache.ibatis.session.SqlSession<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token function\">import</span> org.junit.Test<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre></pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token function\">import</span> java.util.List<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>public class UserDaoTest <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>    @Test</pre></td></tr><tr><td data-num=\"13\"></td><td><pre>    public void <span class=\"token function-name function\">test</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>        //获取SqlSession</pre></td></tr><tr><td data-num=\"16\"></td><td><pre>        SqlSession sqlSession <span class=\"token operator\">=</span> MybatisUtils.getSqlSession<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>        try <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>            //方式一 getMapper</pre></td></tr><tr><td data-num=\"20\"></td><td><pre>            UserDao UserDao <span class=\"token operator\">=</span> sqlSession.getMapper<span class=\"token punctuation\">(</span>UserDao.class<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>            List<span class=\"token operator\">&lt;</span>User<span class=\"token operator\">></span> userList <span class=\"token operator\">=</span> UserDao.getUserList<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>            //方式二</pre></td></tr><tr><td data-num=\"23\"></td><td><pre>            //sqlSession.selectList<span class=\"token punctuation\">(</span><span class=\"token string\">\"com.kuang.dao.UserDao.getUserList\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>            for<span class=\"token punctuation\">(</span>User user <span class=\"token builtin class-name\">:</span> userList<span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre>                System.out.println<span class=\"token punctuation\">(</span>user<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre>            <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span>catch <span class=\"token punctuation\">(</span>Exception e<span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre>            e.printStackTrace<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"29\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span>finally <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"30\"></td><td><pre>            sqlSession.close<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"31\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"32\"></td><td><pre></pre></td></tr><tr><td data-num=\"33\"></td><td><pre></pre></td></tr><tr><td data-num=\"34\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"35\"></td><td><pre></pre></td></tr><tr><td data-num=\"36\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure>",
            "tags": [
                "学习Java",
                "SSM",
                "Mybatis",
                "java"
            ]
        },
        {
            "id": "https://love.youhuamao.xyz/2022/10/18/aiproject/%E5%9F%BA%E4%BA%8Ecosine%E7%9B%B8%E4%BC%BC%E5%BA%A6%E7%9A%84%E6%8E%A8%E8%8D%90%E7%B3%BB%E7%BB%9F/",
            "url": "https://love.youhuamao.xyz/2022/10/18/aiproject/%E5%9F%BA%E4%BA%8Ecosine%E7%9B%B8%E4%BC%BC%E5%BA%A6%E7%9A%84%E6%8E%A8%E8%8D%90%E7%B3%BB%E7%BB%9F/",
            "title": "基于cosine相似度的推荐系统",
            "date_published": "2022-10-17T16:00:00.000Z",
            "content_html": "<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">import</span> numpy <span class=\"token keyword\">as</span> np</pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">import</span> pandas <span class=\"token keyword\">as</span> pd</pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token keyword\">from</span> sklearn<span class=\"token punctuation\">.</span>metrics<span class=\"token punctuation\">.</span>pairwise <span class=\"token keyword\">import</span> cosine_similarity</pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token keyword\">from</span> sklearn<span class=\"token punctuation\">.</span>feature_extraction<span class=\"token punctuation\">.</span>text <span class=\"token keyword\">import</span> CountVectorizer</pre></td></tr></table></figure><figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>datas <span class=\"token operator\">=</span> pd<span class=\"token punctuation\">.</span>read_csv<span class=\"token punctuation\">(</span><span class=\"token string\">'./movie_dataset.csv'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>datas<span class=\"token punctuation\">[</span><span class=\"token string\">'关键词'</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> datas<span class=\"token punctuation\">[</span><span class=\"token string\">'overview'</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">+</span> datas<span class=\"token punctuation\">[</span><span class=\"token string\">'tagline'</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">+</span> datas<span class=\"token punctuation\">[</span><span class=\"token string\">'keywords'</span><span class=\"token punctuation\">]</span> <span class=\"token comment\">#创建需要向量化的特征</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>data1 <span class=\"token operator\">=</span> datas<span class=\"token punctuation\">.</span>dropna<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>drop_duplicates<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token comment\">#去重去空</span></pre></td></tr></table></figure><figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\"># 文本向量化</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>vectors <span class=\"token operator\">=</span> CountVectorizer<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>  <span class=\"token comment\">#构建对象</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>vects <span class=\"token operator\">=</span> vectors<span class=\"token punctuation\">.</span>fit_transform<span class=\"token punctuation\">(</span>data1<span class=\"token punctuation\">[</span><span class=\"token string\">'关键词'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>X <span class=\"token operator\">=</span> vects<span class=\"token punctuation\">.</span>toarray<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr></table></figure><figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>sample <span class=\"token operator\">=</span> X<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">:</span><span class=\"token number\">1</span><span class=\"token punctuation\">:</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span><span class=\"token number\">0</span><span class=\"token punctuation\">:</span><span class=\"token punctuation\">:</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span> <span class=\"token comment\">#取出 Avatar（阿凡达）的特征向量</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>data2 <span class=\"token operator\">=</span> X<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">:</span><span class=\"token punctuation\">:</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span><span class=\"token number\">0</span><span class=\"token punctuation\">:</span><span class=\"token punctuation\">:</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span> <span class=\"token comment\">#取出除 Avatar（阿凡达）的特征向量</span></pre></td></tr></table></figure><figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>comp_sim <span class=\"token operator\">=</span> cosine_similarity<span class=\"token punctuation\">(</span>sample<span class=\"token punctuation\">,</span>data2<span class=\"token punctuation\">)</span>  <span class=\"token comment\">#计算余弦相似性</span></pre></td></tr></table></figure><figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>result <span class=\"token operator\">=</span> comp_sim<span class=\"token punctuation\">.</span>argsort<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>flatten<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">[</span><span class=\"token operator\">-</span><span class=\"token number\">10</span><span class=\"token punctuation\">:</span><span class=\"token punctuation\">]</span> <span class=\"token comment\">#取出余弦相似度前十</span></pre></td></tr></table></figure><figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>datas<span class=\"token punctuation\">.</span>loc<span class=\"token punctuation\">[</span>result<span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token string\">'original_title'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span> <span class=\"token comment\">#推荐的十个影片名称</span></pre></td></tr></table></figure><pre><code>1117                      Charlie St. Cloud\n496     Cloudy with a Chance of Meatballs 2\n672        Perfume: The Story of a Murderer\n40                                   Cars 2\n66                                       Up\n115                                 Hancock\n225                             Speed Racer\n442                                Face/Off\n312                              Green Zone\n571                    Inglourious Basterds\nName: original_title, dtype: object\n</code></pre>\n",
            "tags": [
                "人工智能项目实例",
                "java"
            ]
        },
        {
            "id": "https://love.youhuamao.xyz/2022/10/18/aiproject/%E5%9F%BA%E4%BA%8ESVD%E5%88%86%E8%A7%A3%E7%9A%84%E5%BD%A9%E8%89%B2%E5%9B%BE%E7%89%87%E5%8E%8B%E7%BC%A9/",
            "url": "https://love.youhuamao.xyz/2022/10/18/aiproject/%E5%9F%BA%E4%BA%8ESVD%E5%88%86%E8%A7%A3%E7%9A%84%E5%BD%A9%E8%89%B2%E5%9B%BE%E7%89%87%E5%8E%8B%E7%BC%A9/",
            "title": "基于SVD分解的彩色图片压缩",
            "date_published": "2022-10-17T16:00:00.000Z",
            "content_html": "<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">from</span> skimage <span class=\"token keyword\">import</span> io</pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">import</span> matplotlib<span class=\"token punctuation\">.</span>pyplot <span class=\"token keyword\">as</span> plt</pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token keyword\">import</span> numpy <span class=\"token keyword\">as</span> np</pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token keyword\">import</span> warnings</pre></td></tr><tr><td data-num=\"5\"></td><td><pre>warnings<span class=\"token punctuation\">.</span>filterwarnings<span class=\"token punctuation\">(</span><span class=\"token string\">\"ignore\"</span><span class=\"token punctuation\">)</span></pre></td></tr></table></figure><figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>img <span class=\"token operator\">=</span> io<span class=\"token punctuation\">.</span>imread<span class=\"token punctuation\">(</span><span class=\"token string\">'tuxiangyangli.jpeg'</span><span class=\"token punctuation\">)</span> <span class=\"token comment\">#读取图片</span></pre></td></tr></table></figure><figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\"># 将图片分成三个通道</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>R <span class=\"token operator\">=</span> img<span class=\"token punctuation\">[</span><span class=\"token punctuation\">:</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">:</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>G <span class=\"token operator\">=</span> img<span class=\"token punctuation\">[</span><span class=\"token punctuation\">:</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">:</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>B <span class=\"token operator\">=</span> img<span class=\"token punctuation\">[</span><span class=\"token punctuation\">:</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">:</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">]</span></pre></td></tr></table></figure><figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\">#SVD 分解 取 K 个特征向量合并 </span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">def</span> <span class=\"token function\">recoverBySVD</span><span class=\"token punctuation\">(</span>imgMat<span class=\"token punctuation\">,</span> k<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>   </pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    U<span class=\"token punctuation\">,</span> s<span class=\"token punctuation\">,</span> VT <span class=\"token operator\">=</span> np<span class=\"token punctuation\">.</span>linalg<span class=\"token punctuation\">.</span>svd<span class=\"token punctuation\">(</span>imgMat<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    </pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    Uk <span class=\"token operator\">=</span> U<span class=\"token punctuation\">[</span><span class=\"token punctuation\">:</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">:</span>k<span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>    sk <span class=\"token operator\">=</span> np<span class=\"token punctuation\">.</span>diag<span class=\"token punctuation\">(</span>s<span class=\"token punctuation\">[</span><span class=\"token punctuation\">:</span>k<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>    Vk <span class=\"token operator\">=</span> VT<span class=\"token punctuation\">[</span><span class=\"token punctuation\">:</span>k<span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>    </pre></td></tr><tr><td data-num=\"9\"></td><td><pre>    new_img <span class=\"token operator\">=</span> Uk @ sk @ Vk</pre></td></tr><tr><td data-num=\"10\"></td><td><pre>    <span class=\"token keyword\">return</span> new_img</pre></td></tr></table></figure><figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\"># 将三通道的图片合并</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">def</span> <span class=\"token function\">recoverRGB</span><span class=\"token punctuation\">(</span>R<span class=\"token punctuation\">,</span> G<span class=\"token punctuation\">,</span> B<span class=\"token punctuation\">,</span> k<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>   </pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    reR <span class=\"token operator\">=</span> recoverBySVD<span class=\"token punctuation\">(</span>R<span class=\"token punctuation\">,</span>k<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    reG <span class=\"token operator\">=</span> recoverBySVD<span class=\"token punctuation\">(</span>G<span class=\"token punctuation\">,</span>k<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    reB <span class=\"token operator\">=</span> recoverBySVD<span class=\"token punctuation\">(</span>B<span class=\"token punctuation\">,</span>k<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>    reI <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>np<span class=\"token punctuation\">.</span>stack<span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>reR<span class=\"token punctuation\">,</span>reG<span class=\"token punctuation\">,</span>reB<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span><span class=\"token number\">2</span><span class=\"token punctuation\">)</span><span class=\"token operator\">/</span><span class=\"token number\">255</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>    <span class=\"token keyword\">return</span> reI</pre></td></tr></table></figure><figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>plt<span class=\"token punctuation\">.</span>imshow<span class=\"token punctuation\">(</span>recoverRGB<span class=\"token punctuation\">(</span>R<span class=\"token punctuation\">,</span> G<span class=\"token punctuation\">,</span> B<span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr></table></figure><pre><code>Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).\n\n\n\n\n\n&lt;matplotlib.image.AxesImage at 0x1cbea863cd0&gt;\n</code></pre>\n<p><img data-src=\"/pic/%E4%BA%BA%E5%B7%A5%E6%99%BA%E8%83%BD%E9%A1%B9%E7%9B%AE%E5%AE%9E%E4%BE%8B/g20221018008.png\" alt=\"png\" /></p>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>plt<span class=\"token punctuation\">.</span>imshow<span class=\"token punctuation\">(</span>recoverRGB<span class=\"token punctuation\">(</span>R<span class=\"token punctuation\">,</span> G<span class=\"token punctuation\">,</span> B<span class=\"token punctuation\">,</span> <span class=\"token number\">5</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr></table></figure><pre><code>Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).\n\n\n\n\n\n&lt;matplotlib.image.AxesImage at 0x1cbea819be0&gt;\n</code></pre>\n<p><img data-src=\"/pic/%E4%BA%BA%E5%B7%A5%E6%99%BA%E8%83%BD%E9%A1%B9%E7%9B%AE%E5%AE%9E%E4%BE%8B/a20221018008.png\" alt=\"png\" /></p>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>plt<span class=\"token punctuation\">.</span>imshow<span class=\"token punctuation\">(</span>recoverRGB<span class=\"token punctuation\">(</span>R<span class=\"token punctuation\">,</span> G<span class=\"token punctuation\">,</span> B<span class=\"token punctuation\">,</span> <span class=\"token number\">10</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr></table></figure><pre><code>Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).\n\n\n\n\n\n&lt;matplotlib.image.AxesImage at 0x1cbea792ca0&gt;\n</code></pre>\n<p><img data-src=\"/pic/%E4%BA%BA%E5%B7%A5%E6%99%BA%E8%83%BD%E9%A1%B9%E7%9B%AE%E5%AE%9E%E4%BE%8B/b20221018008.png\" alt=\"png\" /></p>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>plt<span class=\"token punctuation\">.</span>imshow<span class=\"token punctuation\">(</span>recoverRGB<span class=\"token punctuation\">(</span>R<span class=\"token punctuation\">,</span> G<span class=\"token punctuation\">,</span> B<span class=\"token punctuation\">,</span> <span class=\"token number\">20</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr></table></figure><pre><code>Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).\n\n\n\n\n\n&lt;matplotlib.image.AxesImage at 0x1cbda65f4c0&gt;\n</code></pre>\n<p><img data-src=\"/pic/%E4%BA%BA%E5%B7%A5%E6%99%BA%E8%83%BD%E9%A1%B9%E7%9B%AE%E5%AE%9E%E4%BE%8B/c20221018008.png\" alt=\"png\" /></p>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>R<span class=\"token punctuation\">.</span>shape</pre></td></tr></table></figure><pre><code>(316, 316)\n</code></pre>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>A <span class=\"token operator\">=</span> np<span class=\"token punctuation\">.</span>zeros<span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token number\">316</span><span class=\"token punctuation\">,</span><span class=\"token number\">316</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr></table></figure><figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>plt<span class=\"token punctuation\">.</span>imshow<span class=\"token punctuation\">(</span>recoverRGB<span class=\"token punctuation\">(</span>R<span class=\"token punctuation\">,</span> G<span class=\"token punctuation\">,</span> A<span class=\"token punctuation\">,</span> <span class=\"token number\">50</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr></table></figure><pre><code>Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).\n\n\n\n\n\n&lt;matplotlib.image.AxesImage at 0x1cbda6ac040&gt;\n</code></pre>\n<p><img data-src=\"/pic/%E4%BA%BA%E5%B7%A5%E6%99%BA%E8%83%BD%E9%A1%B9%E7%9B%AE%E5%AE%9E%E4%BE%8B/d20221018008.png\" alt=\"png\" /></p>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>U<span class=\"token punctuation\">,</span> s<span class=\"token punctuation\">,</span> VT <span class=\"token operator\">=</span> np<span class=\"token punctuation\">.</span>linalg<span class=\"token punctuation\">.</span>svd<span class=\"token punctuation\">(</span>img<span class=\"token punctuation\">)</span></pre></td></tr></table></figure><figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>A <span class=\"token operator\">=</span> U @ s @VT</pre></td></tr><tr><td data-num=\"2\"></td><td><pre>plt<span class=\"token punctuation\">.</span>imshow<span class=\"token punctuation\">(</span>A<span class=\"token operator\">/</span><span class=\"token number\">255</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>plt<span class=\"token punctuation\">.</span>show</pre></td></tr></table></figure><pre><code>Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).\n\n\n\n\n\n&lt;function matplotlib.pyplot.show(close=None, block=None)&gt;\n</code></pre>\n<p><img data-src=\"/pic/%E4%BA%BA%E5%B7%A5%E6%99%BA%E8%83%BD%E9%A1%B9%E7%9B%AE%E5%AE%9E%E4%BE%8B/e20221018008.png\" alt=\"png\" /></p>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>A <span class=\"token operator\">=</span> U @ s @VT</pre></td></tr><tr><td data-num=\"2\"></td><td><pre>plt<span class=\"token punctuation\">.</span>imshow<span class=\"token punctuation\">(</span>A<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>plt<span class=\"token punctuation\">.</span>show</pre></td></tr></table></figure><pre><code>Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).\n\n\n\n\n\n&lt;function matplotlib.pyplot.show(close=None, block=None)&gt;\n</code></pre>\n<p><img data-src=\"/pic/%E4%BA%BA%E5%B7%A5%E6%99%BA%E8%83%BD%E9%A1%B9%E7%9B%AE%E5%AE%9E%E4%BE%8B/f20221018008.png\" alt=\"png\" /></p>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>A<span class=\"token punctuation\">.</span>shape</pre></td></tr></table></figure><pre><code>(316, 316, 3)\n</code></pre>\n",
            "tags": [
                "人工智能项目实例",
                "java"
            ]
        },
        {
            "id": "https://love.youhuamao.xyz/2022/10/18/aiproject/%E8%AE%A1%E7%AE%97%E5%90%91%E9%87%8F%E7%9A%84%E8%B7%9D%E7%A6%BB(Numpy%E5%AE%9E%E7%8E%B0)/",
            "url": "https://love.youhuamao.xyz/2022/10/18/aiproject/%E8%AE%A1%E7%AE%97%E5%90%91%E9%87%8F%E7%9A%84%E8%B7%9D%E7%A6%BB(Numpy%E5%AE%9E%E7%8E%B0)/",
            "title": "计算向量的距离(Numpy实现)",
            "date_published": "2022-10-17T16:00:00.000Z",
            "content_html": "<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">import</span> numpy <span class=\"token keyword\">as</span> np</pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">from</span> scipy<span class=\"token punctuation\">.</span>spatial <span class=\"token keyword\">import</span> distance</pre></td></tr></table></figure><figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>datas <span class=\"token operator\">=</span> np<span class=\"token punctuation\">.</span>loadtxt<span class=\"token punctuation\">(</span><span class=\"token string\">\"./iris.data\"</span><span class=\"token punctuation\">,</span> dtype <span class=\"token operator\">=</span> <span class=\"token string\">'str'</span><span class=\"token punctuation\">,</span> delimiter<span class=\"token operator\">=</span><span class=\"token string\">\",\"</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>data1 <span class=\"token operator\">=</span> datas<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">:</span><span class=\"token punctuation\">:</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span><span class=\"token number\">0</span><span class=\"token punctuation\">:</span><span class=\"token number\">4</span><span class=\"token punctuation\">]</span>  <span class=\"token comment\">#数据第一行没有用处且会影响后续计算，删掉，取出其中数字</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>data2 <span class=\"token operator\">=</span> data1<span class=\"token punctuation\">.</span>astype<span class=\"token punctuation\">(</span><span class=\"token builtin\">float</span><span class=\"token punctuation\">)</span> <span class=\"token comment\">#将数字类型转化为浮点数</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>data3 <span class=\"token operator\">=</span> datas<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">:</span><span class=\"token punctuation\">:</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span><span class=\"token number\">0</span><span class=\"token punctuation\">:</span><span class=\"token number\">5</span><span class=\"token punctuation\">]</span>  <span class=\"token comment\">#用于拼接备用</span></pre></td></tr></table></figure><figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">def</span> <span class=\"token function\">Distances</span> <span class=\"token punctuation\">(</span>data<span class=\"token punctuation\">,</span>target<span class=\"token punctuation\">,</span>sample<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>    dist <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span>distance<span class=\"token punctuation\">.</span>euclidean<span class=\"token punctuation\">(</span>sample<span class=\"token punctuation\">,</span> data<span class=\"token punctuation\">)</span> <span class=\"token keyword\">for</span> data <span class=\"token keyword\">in</span> data2<span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    dist <span class=\"token operator\">=</span> np<span class=\"token punctuation\">.</span>array<span class=\"token punctuation\">(</span>dist<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    dist <span class=\"token operator\">=</span> dist<span class=\"token punctuation\">[</span><span class=\"token punctuation\">:</span><span class=\"token punctuation\">,</span>np<span class=\"token punctuation\">.</span>newaxis<span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    result <span class=\"token operator\">=</span> np<span class=\"token punctuation\">.</span>concatenate<span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>dist<span class=\"token punctuation\">,</span>data3<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>axis<span class=\"token operator\">=</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>    result <span class=\"token operator\">=</span> np<span class=\"token punctuation\">.</span>sort<span class=\"token punctuation\">(</span>result<span class=\"token punctuation\">,</span>axis<span class=\"token operator\">=</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>    <span class=\"token keyword\">return</span> result</pre></td></tr></table></figure><figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>sample <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token number\">5.9</span> <span class=\"token punctuation\">,</span> <span class=\"token number\">3.5</span><span class=\"token punctuation\">,</span> <span class=\"token number\">4.1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1.7</span><span class=\"token punctuation\">]</span></pre></td></tr></table></figure><figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token punctuation\">(</span>Distances<span class=\"token punctuation\">(</span>data2<span class=\"token punctuation\">,</span>data3<span class=\"token punctuation\">,</span><span class=\"token punctuation\">[</span><span class=\"token number\">5.9</span> <span class=\"token punctuation\">,</span> <span class=\"token number\">3.5</span><span class=\"token punctuation\">,</span> <span class=\"token number\">4.1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1.7</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">:</span><span class=\"token number\">5</span><span class=\"token punctuation\">:</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">:</span><span class=\"token punctuation\">:</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span></pre></td></tr></table></figure><pre><code>array([['0.4358898943540676', '4.3', '2.0', '1.0', '0.1', 'Iris-setosa'],\n       ['0.5477225575051662', '4.4', '2.2', '1.1', '0.1', 'Iris-setosa'],\n       ['0.7071067811865478', '4.4', '2.2', '1.2', '0.1', 'Iris-setosa'],\n       ['0.7348469228349536', '4.4', '2.2', '1.2', '0.1', 'Iris-setosa'],\n       ['0.7348469228349539', '4.5', '2.3', '1.3', '0.1', 'Iris-setosa']],\n      dtype='&lt;U32')\n</code></pre>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>因为K<span class=\"token operator\">=</span><span class=\"token number\">5</span>，由排序结果可知，该样本属于Iris<span class=\"token operator\">-</span>setosa</pre></td></tr></table></figure>",
            "tags": [
                "人工智能项目实例",
                "java"
            ]
        },
        {
            "id": "https://love.youhuamao.xyz/2022/10/18/aiproject/%E5%88%A9%E7%94%A8PCA%E5%AE%8C%E6%88%90%E5%9B%BE%E7%89%87%E7%9A%84%E5%8E%8B%E7%BC%A9%E4%B8%8E%E9%87%8D%E6%9E%84/",
            "url": "https://love.youhuamao.xyz/2022/10/18/aiproject/%E5%88%A9%E7%94%A8PCA%E5%AE%8C%E6%88%90%E5%9B%BE%E7%89%87%E7%9A%84%E5%8E%8B%E7%BC%A9%E4%B8%8E%E9%87%8D%E6%9E%84/",
            "title": "利用PCA完成图片的压缩与重构",
            "date_published": "2022-10-17T16:00:00.000Z",
            "content_html": "<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">import</span> numpy <span class=\"token keyword\">as</span> np</pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">import</span> pandas <span class=\"token keyword\">as</span> pd</pre></td></tr><tr><td data-num=\"3\"></td><td><pre></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token keyword\">import</span> matplotlib<span class=\"token punctuation\">.</span>pyplot <span class=\"token keyword\">as</span> plt</pre></td></tr><tr><td data-num=\"5\"></td><td><pre></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token keyword\">from</span> sklearn<span class=\"token punctuation\">.</span>decomposition <span class=\"token keyword\">import</span> PCA</pre></td></tr><tr><td data-num=\"7\"></td><td><pre></pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token keyword\">import</span> cv2 </pre></td></tr><tr><td data-num=\"9\"></td><td><pre></pre></td></tr><tr><td data-num=\"10\"></td><td><pre><span class=\"token keyword\">import</span> matplotlib<span class=\"token punctuation\">.</span>image <span class=\"token keyword\">as</span> mp </pre></td></tr><tr><td data-num=\"11\"></td><td><pre><span class=\"token keyword\">from</span> sklearn<span class=\"token punctuation\">.</span>decomposition <span class=\"token keyword\">import</span> IncrementalPCA<span class=\"token punctuation\">,</span> PCA</pre></td></tr></table></figure><h1 id=\"三通道展示\"><a class=\"anchor\" href=\"#三通道展示\">#</a> 三通道展示</h1>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>img <span class=\"token operator\">=</span> cv2<span class=\"token punctuation\">.</span>imread<span class=\"token punctuation\">(</span><span class=\"token string\">\"tuxianglianxi.jpeg\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">:</span><span class=\"token punctuation\">:</span><span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>r<span class=\"token punctuation\">,</span> g<span class=\"token punctuation\">,</span> b <span class=\"token operator\">=</span> img<span class=\"token punctuation\">[</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> img<span class=\"token punctuation\">[</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> img<span class=\"token punctuation\">[</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">]</span></pre></td></tr></table></figure><figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>plt<span class=\"token punctuation\">.</span>imshow<span class=\"token punctuation\">(</span>r<span class=\"token punctuation\">)</span></pre></td></tr></table></figure><pre><code>&lt;matplotlib.image.AxesImage at 0x12cc4671cd0&gt;\n</code></pre>\n<p><img data-src=\"/pic/%E4%BA%BA%E5%B7%A5%E6%99%BA%E8%83%BD%E9%A1%B9%E7%9B%AE%E5%AE%9E%E4%BE%8B/20221018017a.png\" alt=\"20221018017a.png\" /></p>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>plt<span class=\"token punctuation\">.</span>imshow<span class=\"token punctuation\">(</span>g<span class=\"token punctuation\">)</span></pre></td></tr></table></figure><pre><code>&lt;matplotlib.image.AxesImage at 0x12cc48d72e0&gt;\n</code></pre>\n<p><img data-src=\"/pic/%E4%BA%BA%E5%B7%A5%E6%99%BA%E8%83%BD%E9%A1%B9%E7%9B%AE%E5%AE%9E%E4%BE%8B/20221018017b.png\" alt=\"png\" /></p>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>plt<span class=\"token punctuation\">.</span>imshow<span class=\"token punctuation\">(</span>b<span class=\"token punctuation\">)</span></pre></td></tr></table></figure><pre><code>&lt;matplotlib.image.AxesImage at 0x12cc4b336d0&gt;\n</code></pre>\n<p><img data-src=\"/pic/%E4%BA%BA%E5%B7%A5%E6%99%BA%E8%83%BD%E9%A1%B9%E7%9B%AE%E5%AE%9E%E4%BE%8B/20221018017c.png\" alt=\"png\" /></p>\n<h1 id=\"转换为灰度图\"><a class=\"anchor\" href=\"#转换为灰度图\">#</a> 转换为灰度图</h1>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">def</span> <span class=\"token function\">grayimg</span><span class=\"token punctuation\">(</span>img<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>  <span class=\"token comment\">#三通道变为灰度图</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>    img_sum <span class=\"token operator\">=</span> img<span class=\"token punctuation\">.</span><span class=\"token builtin\">sum</span><span class=\"token punctuation\">(</span>axis <span class=\"token operator\">=</span> <span class=\"token number\">2</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    img_gray <span class=\"token operator\">=</span> img_sum <span class=\"token operator\">/</span> img_sum<span class=\"token punctuation\">.</span><span class=\"token builtin\">max</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    plt<span class=\"token punctuation\">.</span>imshow<span class=\"token punctuation\">(</span>img_gray<span class=\"token punctuation\">,</span> cmap <span class=\"token operator\">=</span> <span class=\"token string\">'gray'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    <span class=\"token keyword\">return</span> img_gray</pre></td></tr></table></figure><figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>img_gray <span class=\"token operator\">=</span> grayimg<span class=\"token punctuation\">(</span>img<span class=\"token punctuation\">)</span></pre></td></tr></table></figure><p><img data-src=\"/pic/%E4%BA%BA%E5%B7%A5%E6%99%BA%E8%83%BD%E9%A1%B9%E7%9B%AE%E5%AE%9E%E4%BE%8B/20221018017d.png\" alt=\"png\" /></p>\n<h1 id=\"图像压缩\"><a class=\"anchor\" href=\"#图像压缩\">#</a> 图像压缩</h1>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\"># pca = PCA (n_components=0.95, svd_solver='full') #取百分之 95 的信息占比</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token comment\"># pca_imager = pca.fit_transform(r)</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token comment\"># pca_imageg = pca.fit_transform(g)</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token comment\"># pca_imageb = pca.fit_transform(b)</span></pre></td></tr></table></figure><figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\"># var_cumu = np.cumsum(pca.explained_variance_ratio_)</span></pre></td></tr></table></figure><figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\"># reI = (np.stack((pca_imager,pca_imageg,pca_imageb),2)/255)</span></pre></td></tr></table></figure><figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\"># 失败原因 每个通道达到 95 信息占比所需的特征数量不同</span></pre></td></tr></table></figure><figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">def</span> <span class=\"token function\">getK</span><span class=\"token punctuation\">(</span>img_gray<span class=\"token punctuation\">,</span>n<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>  <span class=\"token comment\">#获得保留百分之 n 所要保留的特征数量 k 的值</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>    pca <span class=\"token operator\">=</span> PCA<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    pca_image <span class=\"token operator\">=</span> pca<span class=\"token punctuation\">.</span>fit_transform<span class=\"token punctuation\">(</span>img_gray<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    np<span class=\"token punctuation\">.</span>set_printoptions<span class=\"token punctuation\">(</span>precision <span class=\"token operator\">=</span> <span class=\"token number\">4</span> <span class=\"token punctuation\">,</span> suppress <span class=\"token operator\">=</span> <span class=\"token boolean\">True</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    var_cumu <span class=\"token operator\">=</span> np<span class=\"token punctuation\">.</span>cumsum<span class=\"token punctuation\">(</span>pca<span class=\"token punctuation\">.</span>explained_variance_ratio_<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>    k  <span class=\"token operator\">=</span> np<span class=\"token punctuation\">.</span>argmax<span class=\"token punctuation\">(</span>var_cumu <span class=\"token operator\">></span> n<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>    <span class=\"token keyword\">return</span> k</pre></td></tr></table></figure><figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">def</span> <span class=\"token function\">getKmin</span><span class=\"token punctuation\">(</span>r<span class=\"token punctuation\">,</span>g<span class=\"token punctuation\">,</span>b<span class=\"token punctuation\">,</span>n<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span> <span class=\"token comment\">#获得保留百分之 n 所要保留的特征数量 k 的最小值</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>    num1 <span class=\"token operator\">=</span>getK<span class=\"token punctuation\">(</span>r<span class=\"token punctuation\">,</span>n<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    num2 <span class=\"token operator\">=</span> getK<span class=\"token punctuation\">(</span>g<span class=\"token punctuation\">,</span>n<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    num3 <span class=\"token operator\">=</span> getK<span class=\"token punctuation\">(</span>b<span class=\"token punctuation\">,</span>n<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    <span class=\"token builtin\">max</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>num1 <span class=\"token keyword\">if</span> num1 <span class=\"token operator\">></span> num2 <span class=\"token keyword\">else</span> num2<span class=\"token punctuation\">)</span> <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>num1 <span class=\"token keyword\">if</span> num1 <span class=\"token operator\">></span> num2 <span class=\"token keyword\">else</span> num2<span class=\"token punctuation\">)</span> <span class=\"token operator\">></span> num3 <span class=\"token keyword\">else</span> num3</pre></td></tr><tr><td data-num=\"6\"></td><td><pre>    <span class=\"token keyword\">return</span> <span class=\"token builtin\">max</span></pre></td></tr></table></figure><figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">def</span> <span class=\"token function\">rebuildimg</span><span class=\"token punctuation\">(</span>r<span class=\"token punctuation\">,</span>g<span class=\"token punctuation\">,</span>b<span class=\"token punctuation\">,</span>n<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>  <span class=\"token comment\">#压缩图片并合并</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>    k <span class=\"token operator\">=</span> getKmin<span class=\"token punctuation\">(</span>r<span class=\"token punctuation\">,</span>g<span class=\"token punctuation\">,</span>b<span class=\"token punctuation\">,</span>n<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    ipca <span class=\"token operator\">=</span> IncrementalPCA<span class=\"token punctuation\">(</span>n_components <span class=\"token operator\">=</span> k <span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    image_rebuildr <span class=\"token operator\">=</span> ipca<span class=\"token punctuation\">.</span>inverse_transform<span class=\"token punctuation\">(</span>ipca<span class=\"token punctuation\">.</span>fit_transform<span class=\"token punctuation\">(</span>r<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    image_rebuildg <span class=\"token operator\">=</span> ipca<span class=\"token punctuation\">.</span>inverse_transform<span class=\"token punctuation\">(</span>ipca<span class=\"token punctuation\">.</span>fit_transform<span class=\"token punctuation\">(</span>g<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>    image_rebuildb <span class=\"token operator\">=</span> ipca<span class=\"token punctuation\">.</span>inverse_transform<span class=\"token punctuation\">(</span>ipca<span class=\"token punctuation\">.</span>fit_transform<span class=\"token punctuation\">(</span>b<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>    reI <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>np<span class=\"token punctuation\">.</span>stack<span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>image_rebuildr<span class=\"token punctuation\">,</span>image_rebuildg<span class=\"token punctuation\">,</span>image_rebuildb<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span><span class=\"token number\">2</span><span class=\"token punctuation\">)</span><span class=\"token operator\">/</span><span class=\"token number\">255</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>    plt<span class=\"token punctuation\">.</span>imshow<span class=\"token punctuation\">(</span>reI<span class=\"token punctuation\">)</span></pre></td></tr></table></figure><figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>rebuildimg<span class=\"token punctuation\">(</span>r<span class=\"token punctuation\">,</span>g<span class=\"token punctuation\">,</span>b<span class=\"token punctuation\">,</span><span class=\"token number\">0.95</span><span class=\"token punctuation\">)</span></pre></td></tr></table></figure><pre><code>Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).\n</code></pre>\n<p><img data-src=\"/pic/%E4%BA%BA%E5%B7%A5%E6%99%BA%E8%83%BD%E9%A1%B9%E7%9B%AE%E5%AE%9E%E4%BE%8B/20221018017e.png\" alt=\"png\" /></p>\n<h1 id=\"浮雕核\"><a class=\"anchor\" href=\"#浮雕核\">#</a> 浮雕核</h1>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>kernel <span class=\"token operator\">=</span> np<span class=\"token punctuation\">.</span>array<span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>    <span class=\"token punctuation\">[</span><span class=\"token operator\">-</span><span class=\"token number\">6</span><span class=\"token punctuation\">,</span> <span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    <span class=\"token punctuation\">[</span><span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    <span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">6</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span></pre></td></tr></table></figure><figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>new_image <span class=\"token operator\">=</span> cv2<span class=\"token punctuation\">.</span>filter2D<span class=\"token punctuation\">(</span>img_gray<span class=\"token punctuation\">,</span> <span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> kernel<span class=\"token punctuation\">)</span></pre></td></tr></table></figure><figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>plt<span class=\"token punctuation\">.</span>figure<span class=\"token punctuation\">(</span>figsize<span class=\"token operator\">=</span><span class=\"token punctuation\">[</span><span class=\"token number\">12</span><span class=\"token punctuation\">,</span><span class=\"token number\">8</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>plt<span class=\"token punctuation\">.</span>imshow<span class=\"token punctuation\">(</span>new_image<span class=\"token punctuation\">,</span> cmap <span class=\"token operator\">=</span> <span class=\"token string\">'gray'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>plt<span class=\"token punctuation\">.</span>axis<span class=\"token punctuation\">(</span><span class=\"token string\">'off'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>plt<span class=\"token punctuation\">.</span>show<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr></table></figure><p><img data-src=\"/pic/%E4%BA%BA%E5%B7%A5%E6%99%BA%E8%83%BD%E9%A1%B9%E7%9B%AE%E5%AE%9E%E4%BE%8B/20221018017f.png\" alt=\"png\" /></p>\n<h1 id=\"素描效果\"><a class=\"anchor\" href=\"#素描效果\">#</a> 素描效果</h1>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>img_gray <span class=\"token operator\">=</span> cv2<span class=\"token punctuation\">.</span>cvtColor<span class=\"token punctuation\">(</span>img<span class=\"token punctuation\">,</span> cv2<span class=\"token punctuation\">.</span>COLOR_RGB2GRAY<span class=\"token punctuation\">)</span> <span class=\"token comment\">#用 cv2 获得灰度图</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre></pre></td></tr><tr><td data-num=\"3\"></td><td><pre></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>img_blurred <span class=\"token operator\">=</span> cv2<span class=\"token punctuation\">.</span>GaussianBlur<span class=\"token punctuation\">(</span>img_gray<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span><span class=\"token number\">5</span><span class=\"token punctuation\">,</span> <span class=\"token number\">5</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span> <span class=\"token comment\"># 进行高斯模糊</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre></pre></td></tr><tr><td data-num=\"6\"></td><td><pre></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>img_threshold1 <span class=\"token operator\">=</span> cv2<span class=\"token punctuation\">.</span>adaptiveThreshold<span class=\"token punctuation\">(</span>img_blurred<span class=\"token punctuation\">,</span> <span class=\"token number\">255</span><span class=\"token punctuation\">,</span> cv2<span class=\"token punctuation\">.</span>ADAPTIVE_THRESH_GAUSSIAN_C<span class=\"token punctuation\">,</span> cv2<span class=\"token punctuation\">.</span>THRESH_BINARY<span class=\"token punctuation\">,</span> <span class=\"token number\">5</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">)</span> <span class=\"token comment\">#图像二值化</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre></pre></td></tr><tr><td data-num=\"9\"></td><td><pre></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>img_threshold1_blurred <span class=\"token operator\">=</span> cv2<span class=\"token punctuation\">.</span>GaussianBlur<span class=\"token punctuation\">(</span>img_threshold1<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span><span class=\"token number\">5</span><span class=\"token punctuation\">,</span> <span class=\"token number\">5</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span> <span class=\"token comment\"># 二次模糊</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre></pre></td></tr><tr><td data-num=\"12\"></td><td><pre></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>_<span class=\"token punctuation\">,</span> img_threshold2 <span class=\"token operator\">=</span> cv2<span class=\"token punctuation\">.</span>threshold<span class=\"token punctuation\">(</span>img_threshold1_blurred<span class=\"token punctuation\">,</span> <span class=\"token number\">200</span><span class=\"token punctuation\">,</span> <span class=\"token number\">255</span><span class=\"token punctuation\">,</span> cv2<span class=\"token punctuation\">.</span>THRESH_BINARY<span class=\"token punctuation\">)</span> <span class=\"token comment\">#图像二值化</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>cv2<span class=\"token punctuation\">.</span>imshow<span class=\"token punctuation\">(</span><span class=\"token string\">'img_threshold2'</span><span class=\"token punctuation\">,</span> img_threshold1<span class=\"token punctuation\">)</span> <span class=\"token comment\">#输出在窗口</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre></pre></td></tr><tr><td data-num=\"16\"></td><td><pre><span class=\"token comment\">#关闭窗口</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>cv2<span class=\"token punctuation\">.</span>waitKey<span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>cv2<span class=\"token punctuation\">.</span>destroyAllWindows<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr></table></figure>",
            "tags": [
                "人工智能项目实例",
                "java"
            ]
        },
        {
            "id": "https://love.youhuamao.xyz/2022/10/17/python/%E5%AD%97%E5%85%B8/",
            "url": "https://love.youhuamao.xyz/2022/10/17/python/%E5%AD%97%E5%85%B8/",
            "title": "字典",
            "date_published": "2022-10-16T16:00:00.000Z",
            "content_html": "<h1 id=\"字典输出键对应的值\"><a class=\"anchor\" href=\"#字典输出键对应的值\">#</a> 字典输出键对应的值</h1>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>y <span class=\"token operator\">=</span> <span class=\"token punctuation\">&#123;</span><span class=\"token string\">\"吕布\"</span>：<span class=\"token string\">\"口口布\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"关羽\"</span><span class=\"token punctuation\">:</span><span class=\"token string\">\"关习习\"</span><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>y<span class=\"token punctuation\">[</span><span class=\"token string\">\"吕布\"</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>  </pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token operator\">//</span>输出键对应的值</pre></td></tr></table></figure><h1 id=\"增加新的键值对\"><a class=\"anchor\" href=\"#增加新的键值对\">#</a> 增加新的键值对</h1>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>y <span class=\"token operator\">=</span> <span class=\"token punctuation\">&#123;</span><span class=\"token string\">\"吕布\"</span>：<span class=\"token string\">\"口口布\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"关羽\"</span><span class=\"token punctuation\">:</span><span class=\"token string\">\"关习习\"</span><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>y<span class=\"token punctuation\">[</span><span class=\"token string\">\"刘备\"</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token string\">\"刘baby\"</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token operator\">//</span>在y字典中增加<span class=\"token punctuation\">&#123;</span><span class=\"token string\">\"刘备\"</span>：<span class=\"token string\">\"刘baby\"</span><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><h1 id=\"创建字典\"><a class=\"anchor\" href=\"#创建字典\">#</a> 创建字典</h1>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>a <span class=\"token operator\">=</span> <span class=\"token punctuation\">&#123;</span><span class=\"token string\">\"吕布\"</span>：<span class=\"token string\">\"口口布\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"关羽\"</span><span class=\"token punctuation\">:</span><span class=\"token string\">\"关习习\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"刘备\"</span><span class=\"token punctuation\">:</span><span class=\"token string\">\"刘baby\"</span><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>b <span class=\"token operator\">=</span> <span class=\"token builtin\">dict</span><span class=\"token punctuation\">(</span>吕布<span class=\"token operator\">==</span><span class=\"token string\">\"口口布\"</span><span class=\"token punctuation\">,</span> 关羽<span class=\"token operator\">==</span><span class=\"token string\">\"关习习\"</span><span class=\"token punctuation\">,</span> 刘备<span class=\"token operator\">==</span><span class=\"token string\">\"刘baby\"</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>c <span class=\"token operator\">=</span> <span class=\"token builtin\">dict</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"吕布\"</span><span class=\"token punctuation\">,</span><span class=\"token string\">\"口口布\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"关羽\"</span><span class=\"token punctuation\">,</span><span class=\"token string\">\"关习习\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"刘备\"</span><span class=\"token punctuation\">,</span><span class=\"token string\">\"刘baby\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>d <span class=\"token operator\">=</span> <span class=\"token builtin\">dict</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">&#123;</span><span class=\"token string\">\"吕布\"</span>：<span class=\"token string\">\"口口布\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"关羽\"</span><span class=\"token punctuation\">:</span><span class=\"token string\">\"关习习\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"刘备\"</span><span class=\"token punctuation\">:</span><span class=\"token string\">\"刘baby\"</span><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>e <span class=\"token operator\">=</span> <span class=\"token builtin\">dict</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">&#123;</span><span class=\"token string\">\"吕布\"</span>：<span class=\"token string\">\"口口布\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"关羽\"</span><span class=\"token punctuation\">:</span><span class=\"token string\">\"关习习\"</span><span class=\"token punctuation\">,</span><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span> 刘备<span class=\"token operator\">==</span><span class=\"token string\">\"刘baby\"</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>f <span class=\"token operator\">=</span> <span class=\"token builtin\">dict</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">zip</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span><span class=\"token string\">\"吕布\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"关羽\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"刘备\"</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">[</span><span class=\"token string\">\"口口布\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"关习习\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"刘baby\"</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr></table></figure><p>//dict () 创建字典，每个参数是一个键值对，键和值用等号连接<br />\n //zip 生成迭代，两个之间对应</p>\n<blockquote>\n<blockquote>\n<blockquote>\n<p>a = [1,2,3]<br />\nb = [4,5,6]<br />\nc = [4,5,6,7,8]<br />\n zipped = zip (a,b)     # 返回一个对象<br />\n zipped<br />\n&lt;zip object at 0x103abc288&gt;</p>\n</blockquote>\n</blockquote>\n<blockquote>\n<blockquote>\n<p>list (zipped)  # list () 转换为列表<br />\n [(1, 4), (2, 5), (3, 6)]</p>\n</blockquote>\n</blockquote>\n<blockquote>\n<blockquote>\n<p>list (zip (a,c))              # 元素个数与最短的列表一致<br />\n [(1, 4), (2, 5), (3, 6)]</p>\n</blockquote>\n</blockquote>\n</blockquote>\n<blockquote>\n<blockquote>\n<blockquote>\n<p>a1, a2 = zip(<em>zip (a,b))          # 与 zip 相反，zip (</em>) 可理解为解压，返回二维矩阵式<br />\n list (a1)<br />\n[1, 2, 3]</p>\n</blockquote>\n</blockquote>\n<blockquote>\n<blockquote>\n<p>list(a2)<br />\n[4, 5, 6]</p>\n</blockquote>\n</blockquote>\n<blockquote>\n<blockquote></blockquote>\n</blockquote>\n</blockquote>\n<h1 id=\"formkeys\"><a class=\"anchor\" href=\"#formkeys\">#</a> formkeys</h1>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>d <span class=\"token operator\">=</span> <span class=\"token builtin\">dict</span><span class=\"token punctuation\">.</span>fromkeys<span class=\"token punctuation\">(</span><span class=\"token string\">\"guojiacheng\"</span><span class=\"token punctuation\">,</span> <span class=\"token number\">150</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token operator\">//</span> 将前边每一个字符当做键，后边的参数为值（默认为<span class=\"token boolean\">None</span>）</pre></td></tr><tr><td data-num=\"3\"></td><td><pre>，生成字典</pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token operator\">></span><span class=\"token punctuation\">&#123;</span><span class=\"token string\">'g'</span><span class=\"token punctuation\">:</span> <span class=\"token number\">150</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'u'</span><span class=\"token punctuation\">:</span> <span class=\"token number\">150</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'o'</span><span class=\"token punctuation\">:</span> <span class=\"token number\">150</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'j'</span><span class=\"token punctuation\">:</span> <span class=\"token number\">150</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'i'</span><span class=\"token punctuation\">:</span> <span class=\"token number\">150</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'a'</span><span class=\"token punctuation\">:</span> <span class=\"token number\">150</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'c'</span><span class=\"token punctuation\">:</span> <span class=\"token number\">150</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'h'</span><span class=\"token punctuation\">:</span> <span class=\"token number\">150</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'e'</span><span class=\"token punctuation\">:</span> <span class=\"token number\">150</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'n'</span><span class=\"token punctuation\">:</span> <span class=\"token number\">150</span><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><h1 id=\"修改字典中的值\"><a class=\"anchor\" href=\"#修改字典中的值\">#</a> 修改字典中的值</h1>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>a <span class=\"token operator\">=</span> <span class=\"token punctuation\">&#123;</span><span class=\"token string\">'g'</span><span class=\"token punctuation\">:</span> <span class=\"token number\">150</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'u'</span><span class=\"token punctuation\">:</span> <span class=\"token number\">150</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'o'</span><span class=\"token punctuation\">:</span> <span class=\"token number\">150</span><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>a<span class=\"token punctuation\">[</span><span class=\"token string\">'g'</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token number\">100</span> <span class=\"token operator\">//</span>如果没有会在字典中增加新的键值对</pre></td></tr></table></figure><h1 id=\"删除字典中的键值\"><a class=\"anchor\" href=\"#删除字典中的键值\">#</a> 删除字典中的键值</h1>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>a <span class=\"token operator\">=</span> <span class=\"token punctuation\">&#123;</span><span class=\"token string\">'g'</span><span class=\"token punctuation\">:</span> <span class=\"token number\">150</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'u'</span><span class=\"token punctuation\">:</span> <span class=\"token number\">150</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'o'</span><span class=\"token punctuation\">:</span> <span class=\"token number\">150</span><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>d<span class=\"token punctuation\">.</span>pop<span class=\"token punctuation\">(</span><span class=\"token string\">'g'</span><span class=\"token punctuation\">,</span><span class=\"token string\">\"gou\"</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">//</span>删除字典中的键值，如果没有输出逗号  </pre></td></tr><tr><td data-num=\"3\"></td><td><pre>                   后的内容，都好后没有内容则会报错</pre></td></tr><tr><td data-num=\"4\"></td><td><pre>d<span class=\"token punctuation\">.</span>popitem<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>  <span class=\"token operator\">//</span>删除最后一个键值对</pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token keyword\">del</span> d<span class=\"token punctuation\">[</span><span class=\"token string\">'g'</span><span class=\"token punctuation\">]</span>  <span class=\"token operator\">//</span>删除指定的键值对</pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token keyword\">del</span> d <span class=\"token operator\">//</span>删除字典</pre></td></tr><tr><td data-num=\"7\"></td><td><pre>d<span class=\"token punctuation\">.</span>clear <span class=\"token operator\">//</span>清空d这个字典</pre></td></tr></table></figure><h1 id=\"修改多个键值对\"><a class=\"anchor\" href=\"#修改多个键值对\">#</a> 修改多个键值对</h1>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>a <span class=\"token operator\">=</span> <span class=\"token punctuation\">&#123;</span><span class=\"token string\">'g'</span><span class=\"token punctuation\">:</span> <span class=\"token number\">150</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'u'</span><span class=\"token punctuation\">:</span> <span class=\"token number\">150</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'o'</span><span class=\"token punctuation\">:</span> <span class=\"token number\">150</span><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>d<span class=\"token punctuation\">.</span>updata<span class=\"token punctuation\">(</span><span class=\"token punctuation\">&#123;</span><span class=\"token string\">'g'</span><span class=\"token punctuation\">:</span> <span class=\"token number\">100</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'u'</span><span class=\"token punctuation\">:</span> <span class=\"token number\">100</span><span class=\"token punctuation\">,</span><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>d<span class=\"token punctuation\">.</span>updata<span class=\"token punctuation\">(</span>g<span class=\"token operator\">=</span><span class=\"token string\">'10'</span><span class=\"token punctuation\">,</span> u<span class=\"token operator\">=</span><span class=\"token string\">'56'</span><span class=\"token punctuation\">)</span></pre></td></tr></table></figure><h1 id=\"查找键值对\"><a class=\"anchor\" href=\"#查找键值对\">#</a> 查找键值对</h1>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>a <span class=\"token operator\">=</span> <span class=\"token punctuation\">&#123;</span><span class=\"token string\">'g'</span><span class=\"token punctuation\">:</span> <span class=\"token number\">150</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'u'</span><span class=\"token punctuation\">:</span> <span class=\"token number\">150</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'o'</span><span class=\"token punctuation\">:</span> <span class=\"token number\">150</span><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>d<span class=\"token punctuation\">.</span>get<span class=\"token punctuation\">(</span><span class=\"token string\">'g'</span><span class=\"token punctuation\">,</span><span class=\"token string\">'这里没有g'</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">//</span>同pop<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>d<span class=\"token punctuation\">.</span>setdefault<span class=\"token punctuation\">(</span><span class=\"token string\">'g'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"code\"</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token operator\">></span><span class=\"token number\">150</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>d<span class=\"token punctuation\">.</span>setdefault<span class=\"token punctuation\">(</span><span class=\"token string\">'G'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"code\"</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token operator\">></span>code</pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>a<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token operator\">></span><span class=\"token punctuation\">&#123;</span><span class=\"token string\">'g'</span><span class=\"token punctuation\">:</span> <span class=\"token number\">150</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'u'</span><span class=\"token punctuation\">:</span> <span class=\"token number\">150</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'o'</span><span class=\"token punctuation\">:</span> <span class=\"token number\">150</span><span class=\"token punctuation\">,</span><span class=\"token string\">'G'</span><span class=\"token punctuation\">:</span><span class=\"token string\">\"code\"</span> <span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><h1 id=\"获得视图\"><a class=\"anchor\" href=\"#获得视图\">#</a> 获得视图</h1>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>a <span class=\"token operator\">=</span> <span class=\"token punctuation\">&#123;</span><span class=\"token string\">'g'</span><span class=\"token punctuation\">:</span> <span class=\"token number\">150</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'u'</span><span class=\"token punctuation\">:</span> <span class=\"token number\">150</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'o'</span><span class=\"token punctuation\">:</span> <span class=\"token number\">150</span><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>keys <span class=\"token operator\">=</span> a<span class=\"token punctuation\">.</span>keys<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">//</span>获取键</pre></td></tr><tr><td data-num=\"3\"></td><td><pre>values <span class=\"token operator\">=</span> a<span class=\"token punctuation\">.</span>values<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">//</span>获取值</pre></td></tr><tr><td data-num=\"4\"></td><td><pre>items <span class=\"token operator\">=</span> a<span class=\"token punctuation\">.</span>items<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>  <span class=\"token operator\">//</span>获取键值对</pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token operator\">//</span>会随着原字典的变化而变化</pre></td></tr></table></figure><p>dict_keys(['g', 'u', 'o'])<br />\ndict_values([150, 150, 150])<br />\ndict_items([('g', 150), ('u', 150), ('o', 150)])、</p>\n<h1 id=\"拷贝字典\"><a class=\"anchor\" href=\"#拷贝字典\">#</a> 拷贝字典</h1>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>a <span class=\"token operator\">=</span> <span class=\"token punctuation\">&#123;</span><span class=\"token string\">'g'</span><span class=\"token punctuation\">:</span> <span class=\"token number\">150</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'u'</span><span class=\"token punctuation\">:</span> <span class=\"token number\">150</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'o'</span><span class=\"token punctuation\">:</span> <span class=\"token number\">150</span><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>e <span class=\"token operator\">=</span> a<span class=\"token punctuation\">.</span>copy<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">//</span>用e拷贝a</pre></td></tr></table></figure><h1 id=\"键值对的数量\"><a class=\"anchor\" href=\"#键值对的数量\">#</a> 键值对的数量</h1>\n<p>a = {'g': 150, 'u': 150, 'o': 150}<br />\nlen(a)</p>\n<blockquote>\n<p>3</p>\n</blockquote>\n<h1 id=\"list\"><a class=\"anchor\" href=\"#list\">#</a> list</h1>\n<p>a = {'g': 150, 'u': 150, 'o': 150}<br />\n list (a) // 将字典中的键变成列表<br />\n list (a.values ()) // 将字典中的值变成列表</p>\n<h1 id=\"字典嵌套\"><a class=\"anchor\" href=\"#字典嵌套\">#</a> 字典嵌套</h1>\n<p>d = {吕布 &quot;: {&quot; 语文 &quot;:60，&quot; 数学 &quot;:70，&quot; 英语 &quot;:80},&quot; 关羽 &quot;: {&quot; 语文 &quot;:80，&quot; 数学 &quot;:90，&quot; 英语 &quot;:70}}<br />\n d [&quot;吕布&quot;][&quot;数学&quot;]</p>\n<blockquote>\n<p>70</p>\n</blockquote>\n<p>d = {吕布 &quot;: [60, 70, 80],&quot; 关羽 &quot;: [60, 70 ,80]}<br />\n d [&quot;吕布&quot;][1]</p>\n<blockquote>\n<p>70</p>\n</blockquote>\n<h1 id=\"字典推导式\"><a class=\"anchor\" href=\"#字典推导式\">#</a> 字典推导式</h1>\n<p>d = {'F':70, 'i': 80, 's':90, 'h':200}<br />\nb = {v:k for k,v in d.items()}<br />\nb</p>\n<blockquote 70:F,=\"\" 80:=\"\" i,=\"\" 90:s,=\"\" 200:h=\"\">\n<p></p>\n</blockquote>\n<p>c = {v:k for k,v in d.items() if v&gt;100}<br />\nc</p>\n<blockquote 200:h=\"\">\n<p></p>\n</blockquote>\n<p>d = {x:y for x in [1, 3, 5] for y in [2, 4, 6]}<br />\nd</p>\n<blockquote 1:2,=\"\" 3:4=\"\" ,5:6=\"\">\n<p></p>\n</blockquote>\n",
            "tags": [
                "数据库",
                "数据库"
            ]
        },
        {
            "id": "https://love.youhuamao.xyz/2022/10/16/shujuku/%E6%95%B0%E6%8D%AE%E5%BA%93%E8%BF%9E%E6%8E%A5%E6%B1%A0/",
            "url": "https://love.youhuamao.xyz/2022/10/16/shujuku/%E6%95%B0%E6%8D%AE%E5%BA%93%E8%BF%9E%E6%8E%A5%E6%B1%A0/",
            "title": "数据库连接池",
            "date_published": "2022-10-15T16:00:00.000Z",
            "content_html": "<h1 id=\"dbcp-c3p0连接池\"><a class=\"anchor\" href=\"#dbcp-c3p0连接池\">#</a> DBCP-C3P0 连接池</h1>\n<p>数据库连接 -- 执行完毕 -- 释放</p>\n<p>连接 -- 释放 是十分浪费系统资源的</p>\n<p>池化技术：准备一些预先的资源，过来就连接预先准备好的</p>\n<p>最小连接数：10 (常用连接)</p>\n<p>最大连接数：100 （业务最高承载上线）</p>\n<p>等待超时：100ms</p>\n<p>编写连接池，实现一个接口 DataSource</p>\n<h2 id=\"开源数据源实现\"><a class=\"anchor\" href=\"#开源数据源实现\">#</a> 开源数据源实现</h2>\n<ul>\n<li>DBCP</li>\n<li>C3p0</li>\n<li>Druid: 阿里巴巴<br />\n使用了这些数据库连接池之后，我们在项目开发中就不需要编写连接数据库的代码了</li>\n</ul>\n<h2 id=\"dbcp\"><a class=\"anchor\" href=\"#dbcp\">#</a> DBCP</h2>\n<p>需要用到的 jar 包<br />\n commons-dbcp-1.4  commons-pool-1.6</p>\n<ul>\n<li>配置文件 dbcp.properties</li>\n</ul>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\">#连接设置</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token assign-left variable\">driverClassName</span><span class=\"token operator\">=</span>com.mysql.jdbc.Driver</pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token assign-left variable\">url</span><span class=\"token operator\">=</span>jdbc:mysql://localhost:3306/jdbcstudy?useUnicode<span class=\"token operator\">=</span>true<span class=\"token operator\">&amp;</span><span class=\"token assign-left variable\">characterEncoding</span><span class=\"token operator\">=</span>utf8<span class=\"token operator\">&amp;</span><span class=\"token assign-left variable\">useSSL</span><span class=\"token operator\">=</span>false</pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token assign-left variable\">username</span><span class=\"token operator\">=</span>root</pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token assign-left variable\">password</span><span class=\"token operator\">=</span><span class=\"token number\">123456</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token comment\">#初始化连接</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token assign-left variable\">initialSize</span><span class=\"token operator\">=</span><span class=\"token number\">10</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre></pre></td></tr><tr><td data-num=\"10\"></td><td><pre><span class=\"token comment\">#最大连接数量</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre><span class=\"token assign-left variable\">maxActive</span><span class=\"token operator\">=</span><span class=\"token number\">50</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre></pre></td></tr><tr><td data-num=\"13\"></td><td><pre><span class=\"token comment\">#最大空闲连接</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre><span class=\"token assign-left variable\">maxIdle</span><span class=\"token operator\">=</span><span class=\"token number\">20</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre></pre></td></tr><tr><td data-num=\"16\"></td><td><pre><span class=\"token comment\">#最小空闲连接</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre><span class=\"token assign-left variable\">minIdle</span><span class=\"token operator\">=</span><span class=\"token number\">5</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre></pre></td></tr><tr><td data-num=\"19\"></td><td><pre><span class=\"token comment\">#超时等待时间以毫秒为单位 6000 毫秒 / 1000 等于 60 秒</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre><span class=\"token assign-left variable\">maxWait</span><span class=\"token operator\">=</span><span class=\"token number\">60000</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre><span class=\"token comment\">#JDBC 驱动建立连接时附带的连接属性属性的格式必须为这样：【属性名 = property;】</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre><span class=\"token comment\">#注意：user 与 password 两个属性会被明确地传递，因此这里不需要包含他们。</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre><span class=\"token assign-left variable\">connectionProperties</span><span class=\"token operator\">=</span>useUnicode<span class=\"token operator\">=</span>true<span class=\"token punctuation\">;</span><span class=\"token assign-left variable\">characterEncoding</span><span class=\"token operator\">=</span>UTF8</pre></td></tr><tr><td data-num=\"24\"></td><td><pre></pre></td></tr><tr><td data-num=\"25\"></td><td><pre><span class=\"token comment\">#指定由连接池所创建的连接的自动提交（auto-commit）状态。</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre><span class=\"token assign-left variable\">defaultAutoCommit</span><span class=\"token operator\">=</span>true</pre></td></tr><tr><td data-num=\"27\"></td><td><pre></pre></td></tr><tr><td data-num=\"28\"></td><td><pre><span class=\"token comment\">#driver default 指定由连接池所创建的连接的只读（read-only）状态。</span></pre></td></tr><tr><td data-num=\"29\"></td><td><pre><span class=\"token comment\">#如果没有设置该值，则 “setReadOnly” 方法将不被调用。（某些驱动并不支持只读模式，如：Informix）</span></pre></td></tr><tr><td data-num=\"30\"></td><td><pre><span class=\"token assign-left variable\">defaultReadOnly</span><span class=\"token operator\">=</span></pre></td></tr><tr><td data-num=\"31\"></td><td><pre></pre></td></tr><tr><td data-num=\"32\"></td><td><pre><span class=\"token comment\">#driver default 指定由连接池所创建的连接的事务级别（TransactionIsolation）。</span></pre></td></tr><tr><td data-num=\"33\"></td><td><pre><span class=\"token comment\">#可用值为下列之一：（详情可见 javadoc。）NONE,READ_UNCOMMITTED, READ_COMMITTED, REPEATABLE_READ, SERIALIZABLE</span></pre></td></tr><tr><td data-num=\"34\"></td><td><pre><span class=\"token assign-left variable\">defaultTransactionIsolation</span><span class=\"token operator\">=</span>READ_COMMITTED</pre></td></tr></table></figure><ul>\n<li>工具类</li>\n</ul>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token function\">import</span> org.apache.commons.dbcp.BasicDataSourceFactory<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token function\">import</span> javax.sql.DataSource<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token function\">import</span> java.io.IOException<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token function\">import</span> java.io.InputStream<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token function\">import</span> java.sql.Connection<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token function\">import</span> java.sql.ResultSet<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token function\">import</span> java.sql.SQLException<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre><span class=\"token function\">import</span> java.sql.Statement<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre><span class=\"token function\">import</span> java.util.Properties<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>/**</pre></td></tr><tr><td data-num=\"13\"></td><td><pre> * @ClassName: JDBCDBCPUtils</pre></td></tr><tr><td data-num=\"14\"></td><td><pre> * @Description: TODO 类描述</pre></td></tr><tr><td data-num=\"15\"></td><td><pre> * @Author: zyy</pre></td></tr><tr><td data-num=\"16\"></td><td><pre> * @Date: <span class=\"token number\">2021</span>/07/14 <span class=\"token number\">17</span>:48</pre></td></tr><tr><td data-num=\"17\"></td><td><pre> * @Version: <span class=\"token number\">1.0</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre> */</pre></td></tr><tr><td data-num=\"19\"></td><td><pre>public class JDBCDBCPUtils <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>    private static DataSource dataSource <span class=\"token operator\">=</span> null<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>    static <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>        try <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>            InputStream <span class=\"token keyword\">in</span> <span class=\"token operator\">=</span> JDBCDBCPUtils.class.getClassLoader<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>.getResourceAsStream<span class=\"token punctuation\">(</span><span class=\"token string\">\"dbcp.properties\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre>            Properties properties <span class=\"token operator\">=</span> new Properties<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre>            properties.load<span class=\"token punctuation\">(</span>in<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre>            //创建数据源 工厂模式</pre></td></tr><tr><td data-num=\"28\"></td><td><pre>            dataSource <span class=\"token operator\">=</span> BasicDataSourceFactory.createDataSource<span class=\"token punctuation\">(</span>properties<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"29\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span> catch <span class=\"token punctuation\">(</span>IOException e<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"30\"></td><td><pre>            e.printStackTrace<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"31\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span> catch <span class=\"token punctuation\">(</span>ClassNotFoundException e<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"32\"></td><td><pre>            e.printStackTrace<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"33\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span> catch <span class=\"token punctuation\">(</span>Exception e<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"34\"></td><td><pre>            e.printStackTrace<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"35\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"36\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"37\"></td><td><pre></pre></td></tr><tr><td data-num=\"38\"></td><td><pre>    /**</pre></td></tr><tr><td data-num=\"39\"></td><td><pre>     * 获取连接</pre></td></tr><tr><td data-num=\"40\"></td><td><pre>     */</pre></td></tr><tr><td data-num=\"41\"></td><td><pre>    public static Connection getConnection<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> throws SQLException <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"42\"></td><td><pre>        //从数据源中获取连接</pre></td></tr><tr><td data-num=\"43\"></td><td><pre>        <span class=\"token builtin class-name\">return</span> dataSource.getConnection<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"44\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"45\"></td><td><pre></pre></td></tr><tr><td data-num=\"46\"></td><td><pre>    /**</pre></td></tr><tr><td data-num=\"47\"></td><td><pre>     * 释放资源</pre></td></tr><tr><td data-num=\"48\"></td><td><pre>     */</pre></td></tr><tr><td data-num=\"49\"></td><td><pre>    public static void release<span class=\"token punctuation\">(</span>Connection con, Statement st, ResultSet rs<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"50\"></td><td><pre>        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>rs <span class=\"token operator\">!=</span> null<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"51\"></td><td><pre>            try <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"52\"></td><td><pre>                rs.close<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"53\"></td><td><pre>            <span class=\"token punctuation\">&#125;</span> catch <span class=\"token punctuation\">(</span>SQLException e<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"54\"></td><td><pre>                e.printStackTrace<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"55\"></td><td><pre>            <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"56\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"57\"></td><td><pre>        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>st <span class=\"token operator\">!=</span> null<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"58\"></td><td><pre>            try <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"59\"></td><td><pre>                st.close<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"60\"></td><td><pre>            <span class=\"token punctuation\">&#125;</span> catch <span class=\"token punctuation\">(</span>SQLException e<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"61\"></td><td><pre>                e.printStackTrace<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"62\"></td><td><pre>            <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"63\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"64\"></td><td><pre>        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>con <span class=\"token operator\">!=</span> null<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"65\"></td><td><pre>            try <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"66\"></td><td><pre>                con.close<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"67\"></td><td><pre>            <span class=\"token punctuation\">&#125;</span> catch <span class=\"token punctuation\">(</span>SQLException e<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"68\"></td><td><pre>                e.printStackTrace<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"69\"></td><td><pre>            <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"70\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"71\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"72\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><ul>\n<li>测试类</li>\n</ul>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token function\">import</span> com.zyy.lesson02.utils.JDBCUtils<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token function\">import</span> com.zyy.lesson05.utils.JDBCDBCPUtils<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token function\">import</span> java.sql.Connection<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token function\">import</span> java.sql.PreparedStatement<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token function\">import</span> java.sql.ResultSet<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token function\">import</span> java.sql.SQLException<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>/**</pre></td></tr><tr><td data-num=\"10\"></td><td><pre> * @ClassName: TestDBCP</pre></td></tr><tr><td data-num=\"11\"></td><td><pre> * @Description: TODO 类描述</pre></td></tr><tr><td data-num=\"12\"></td><td><pre> * @Author: zyy</pre></td></tr><tr><td data-num=\"13\"></td><td><pre> * @Date: <span class=\"token number\">2021</span>/07/15 <span class=\"token number\">22</span>:41</pre></td></tr><tr><td data-num=\"14\"></td><td><pre> * @Version: <span class=\"token number\">1.0</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre> */</pre></td></tr><tr><td data-num=\"16\"></td><td><pre>public class TestDBCP <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>    public static void main<span class=\"token punctuation\">(</span>String<span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> args<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>        Connection con <span class=\"token operator\">=</span> null<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>        PreparedStatement st <span class=\"token operator\">=</span> null<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>        ResultSet rs <span class=\"token operator\">=</span> null<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>        try <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>            con <span class=\"token operator\">=</span> JDBCDBCPUtils.getConnection<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>            //使用?占位符代替参数</pre></td></tr><tr><td data-num=\"24\"></td><td><pre>            String sql <span class=\"token operator\">=</span> <span class=\"token string\">\"INSERT INTO users(<span class=\"token variable\"><span class=\"token variable\">`</span><span class=\"token function\">id</span><span class=\"token variable\">`</span></span>,<span class=\"token variable\"><span class=\"token variable\">`</span>name<span class=\"token variable\">`</span></span>,<span class=\"token variable\"><span class=\"token variable\">`</span>password<span class=\"token variable\">`</span></span>,<span class=\"token variable\"><span class=\"token variable\">`</span>email<span class=\"token variable\">`</span></span>,<span class=\"token variable\"><span class=\"token variable\">`</span>birthday<span class=\"token variable\">`</span></span>) VALUES (?,?,?,?,?)\"</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre>            //预编译SQL，先写SQL，然后不执行</pre></td></tr><tr><td data-num=\"26\"></td><td><pre>            st <span class=\"token operator\">=</span> con.prepareStatement<span class=\"token punctuation\">(</span>sql<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre>            //手动给参数赋值</pre></td></tr><tr><td data-num=\"28\"></td><td><pre>            st.setInt<span class=\"token punctuation\">(</span><span class=\"token number\">1</span>, <span class=\"token number\">5</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"29\"></td><td><pre>            st.setString<span class=\"token punctuation\">(</span><span class=\"token number\">2</span>, <span class=\"token string\">\"钱七\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"30\"></td><td><pre>            st.setString<span class=\"token punctuation\">(</span><span class=\"token number\">3</span>, <span class=\"token string\">\"123456\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"31\"></td><td><pre>            st.setString<span class=\"token punctuation\">(</span><span class=\"token number\">4</span>, <span class=\"token string\">\"qianqi@sina.com\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"32\"></td><td><pre>            st.setDate<span class=\"token punctuation\">(</span><span class=\"token number\">5</span>, new java.sql.Date<span class=\"token punctuation\">(</span>new java.util.Date<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>.getTime<span class=\"token punctuation\">(</span><span class=\"token punctuation\">))</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"33\"></td><td><pre>            int num <span class=\"token operator\">=</span> st.executeUpdate<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"34\"></td><td><pre>            <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>num <span class=\"token operator\">></span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"35\"></td><td><pre>                System.out.println<span class=\"token punctuation\">(</span><span class=\"token string\">\"插入成功！\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"36\"></td><td><pre>            <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"37\"></td><td><pre></pre></td></tr><tr><td data-num=\"38\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span> catch <span class=\"token punctuation\">(</span>SQLException e<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"39\"></td><td><pre>            e.printStackTrace<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"40\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span> finally <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"41\"></td><td><pre>            JDBCDBCPUtils.release<span class=\"token punctuation\">(</span>con, st, rs<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"42\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"43\"></td><td><pre></pre></td></tr><tr><td data-num=\"44\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"45\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><h2 id=\"c3p0\"><a class=\"anchor\" href=\"#c3p0\">#</a> C3P0</h2>\n<p>需要用到的 jar 包<br />\n c3p0-0.9.5.5.jar<br />\nmchange-commons-java-0.2.19.jar</p>\n<ul>\n<li>配置文件 c3p0-config.xml</li>\n</ul>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token operator\">&lt;</span>?xml <span class=\"token assign-left variable\">version</span><span class=\"token operator\">=</span><span class=\"token string\">\"1.0\"</span> <span class=\"token assign-left variable\">encoding</span><span class=\"token operator\">=</span><span class=\"token string\">\"UTF-8\"</span>?<span class=\"token operator\">></span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token operator\">&lt;</span>c3p0-config<span class=\"token operator\">></span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    <span class=\"token operator\">&lt;</span><span class=\"token operator\">!</span>--</pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    c3p0的缺省（默认）配置</pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    如果在代码中ComboPooledDataSource <span class=\"token assign-left variable\">ds</span><span class=\"token operator\">=</span>new ComboPooledDataSource<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>这样写就表示使用的是c3p0的缺省（默认）</pre></td></tr><tr><td data-num=\"6\"></td><td><pre>    --<span class=\"token operator\">></span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>    <span class=\"token operator\">&lt;</span>default-config<span class=\"token operator\">></span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>        <span class=\"token operator\">&lt;</span>property <span class=\"token assign-left variable\">name</span><span class=\"token operator\">=</span><span class=\"token string\">\"driverClass\"</span><span class=\"token operator\">></span>com.mysql.jdbc.Driver<span class=\"token operator\">&lt;</span>/property<span class=\"token operator\">></span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>        <span class=\"token operator\">&lt;</span>property <span class=\"token assign-left variable\">name</span><span class=\"token operator\">=</span><span class=\"token string\">\"jdbcUrl\"</span><span class=\"token operator\">></span>jdbc:mysql://localhost:3306/jdbcstudy?useUnicode<span class=\"token operator\">=</span>true<span class=\"token operator\">&amp;</span>amp<span class=\"token punctuation\">;</span><span class=\"token assign-left variable\">characterEncoding</span><span class=\"token operator\">=</span>utf8<span class=\"token operator\">&amp;</span>amp<span class=\"token punctuation\">;</span><span class=\"token assign-left variable\">useSSL</span><span class=\"token operator\">=</span>false<span class=\"token operator\">&amp;</span>amp<span class=\"token punctuation\">;</span><span class=\"token assign-left variable\">serverTimezone</span><span class=\"token operator\">=</span>UTC<span class=\"token operator\">&lt;</span>/property<span class=\"token operator\">></span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>        <span class=\"token operator\">&lt;</span>property <span class=\"token assign-left variable\">name</span><span class=\"token operator\">=</span><span class=\"token string\">\"user\"</span><span class=\"token operator\">></span>root<span class=\"token operator\">&lt;</span>/property<span class=\"token operator\">></span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>        <span class=\"token operator\">&lt;</span>property <span class=\"token assign-left variable\">name</span><span class=\"token operator\">=</span><span class=\"token string\">\"password\"</span><span class=\"token operator\">></span><span class=\"token number\">12345</span><span class=\"token operator\"><span class=\"token file-descriptor important\">6</span>&lt;</span>/property<span class=\"token operator\">></span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>        <span class=\"token operator\">&lt;</span>property <span class=\"token assign-left variable\">name</span><span class=\"token operator\">=</span><span class=\"token string\">\"acquiredIncrement\"</span><span class=\"token operator\">></span><span class=\"token operator\"><span class=\"token file-descriptor important\">5</span>&lt;</span>/property<span class=\"token operator\">></span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>        <span class=\"token operator\">&lt;</span>property <span class=\"token assign-left variable\">name</span><span class=\"token operator\">=</span><span class=\"token string\">\"initialPoolSize\"</span><span class=\"token operator\">></span><span class=\"token number\">1</span><span class=\"token operator\"><span class=\"token file-descriptor important\">0</span>&lt;</span>/property<span class=\"token operator\">></span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>        <span class=\"token operator\">&lt;</span>property <span class=\"token assign-left variable\">name</span><span class=\"token operator\">=</span><span class=\"token string\">\"minPoolSize\"</span><span class=\"token operator\">></span><span class=\"token operator\"><span class=\"token file-descriptor important\">5</span>&lt;</span>/property<span class=\"token operator\">></span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>        <span class=\"token operator\">&lt;</span>property <span class=\"token assign-left variable\">name</span><span class=\"token operator\">=</span><span class=\"token string\">\"maxPoolSize\"</span><span class=\"token operator\">></span><span class=\"token number\">2</span><span class=\"token operator\"><span class=\"token file-descriptor important\">0</span>&lt;</span>/property<span class=\"token operator\">></span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>    <span class=\"token operator\">&lt;</span>/default-config<span class=\"token operator\">></span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre></pre></td></tr><tr><td data-num=\"18\"></td><td><pre></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>    <span class=\"token operator\">&lt;</span><span class=\"token operator\">!</span>--</pre></td></tr><tr><td data-num=\"20\"></td><td><pre>    c3p0的命名配置</pre></td></tr><tr><td data-num=\"21\"></td><td><pre>    如果在代码中ComboPooledDataSource <span class=\"token assign-left variable\">ds</span><span class=\"token operator\">=</span>new ComboPooledDataSource<span class=\"token punctuation\">(</span><span class=\"token string\">\"MySQL\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>这样写就表示使用的是name是MySQL</pre></td></tr><tr><td data-num=\"22\"></td><td><pre>    --<span class=\"token operator\">></span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>    <span class=\"token operator\">&lt;</span>name-config <span class=\"token assign-left variable\">name</span><span class=\"token operator\">=</span><span class=\"token string\">\"MySQL\"</span><span class=\"token operator\">></span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>        <span class=\"token operator\">&lt;</span>property <span class=\"token assign-left variable\">name</span><span class=\"token operator\">=</span><span class=\"token string\">\"driverClass\"</span><span class=\"token operator\">></span>com.mysql.jdbc.Driver<span class=\"token operator\">&lt;</span>/property<span class=\"token operator\">></span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre>        <span class=\"token operator\">&lt;</span>property <span class=\"token assign-left variable\">name</span><span class=\"token operator\">=</span><span class=\"token string\">\"jdbcUrl\"</span><span class=\"token operator\">></span>jdbc:mysql://localhost:3306/jdbcstudy?useUnicode<span class=\"token operator\">=</span>true<span class=\"token operator\">&amp;</span>amp<span class=\"token punctuation\">;</span><span class=\"token assign-left variable\">characterEncoding</span><span class=\"token operator\">=</span>utf8<span class=\"token operator\">&amp;</span>amp<span class=\"token punctuation\">;</span><span class=\"token assign-left variable\">useSSL</span><span class=\"token operator\">=</span>false<span class=\"token operator\">&amp;</span>amp<span class=\"token punctuation\">;</span><span class=\"token assign-left variable\">serverTimezone</span><span class=\"token operator\">=</span>UTC<span class=\"token operator\">&lt;</span>/property<span class=\"token operator\">></span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre>        <span class=\"token operator\">&lt;</span>property <span class=\"token assign-left variable\">name</span><span class=\"token operator\">=</span><span class=\"token string\">\"user\"</span><span class=\"token operator\">></span>root<span class=\"token operator\">&lt;</span>/property<span class=\"token operator\">></span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre>        <span class=\"token operator\">&lt;</span>property <span class=\"token assign-left variable\">name</span><span class=\"token operator\">=</span><span class=\"token string\">\"password\"</span><span class=\"token operator\">></span><span class=\"token number\">12345</span><span class=\"token operator\"><span class=\"token file-descriptor important\">6</span>&lt;</span>/property<span class=\"token operator\">></span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre>        <span class=\"token operator\">&lt;</span>property <span class=\"token assign-left variable\">name</span><span class=\"token operator\">=</span><span class=\"token string\">\"acquiredIncrement\"</span><span class=\"token operator\">></span><span class=\"token operator\"><span class=\"token file-descriptor important\">5</span>&lt;</span>/property<span class=\"token operator\">></span></pre></td></tr><tr><td data-num=\"29\"></td><td><pre>        <span class=\"token operator\">&lt;</span>property <span class=\"token assign-left variable\">name</span><span class=\"token operator\">=</span><span class=\"token string\">\"initialPoolSize\"</span><span class=\"token operator\">></span><span class=\"token number\">1</span><span class=\"token operator\"><span class=\"token file-descriptor important\">0</span>&lt;</span>/property<span class=\"token operator\">></span></pre></td></tr><tr><td data-num=\"30\"></td><td><pre>        <span class=\"token operator\">&lt;</span>property <span class=\"token assign-left variable\">name</span><span class=\"token operator\">=</span><span class=\"token string\">\"minPoolSize\"</span><span class=\"token operator\">></span><span class=\"token operator\"><span class=\"token file-descriptor important\">5</span>&lt;</span>/property<span class=\"token operator\">></span></pre></td></tr><tr><td data-num=\"31\"></td><td><pre>        <span class=\"token operator\">&lt;</span>property <span class=\"token assign-left variable\">name</span><span class=\"token operator\">=</span><span class=\"token string\">\"maxPoolSize\"</span><span class=\"token operator\">></span><span class=\"token number\">2</span><span class=\"token operator\"><span class=\"token file-descriptor important\">0</span>&lt;</span>/property<span class=\"token operator\">></span></pre></td></tr><tr><td data-num=\"32\"></td><td><pre>    <span class=\"token operator\">&lt;</span>/name-config<span class=\"token operator\">></span></pre></td></tr><tr><td data-num=\"33\"></td><td><pre><span class=\"token operator\">&lt;</span>/c3p0-config<span class=\"token operator\">></span></pre></td></tr></table></figure><ul>\n<li>工具类</li>\n</ul>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token function\">import</span> com.mchange.v2.c3p0.ComboPooledDataSource<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token function\">import</span> java.sql.Connection<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token function\">import</span> java.sql.ResultSet<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token function\">import</span> java.sql.SQLException<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token function\">import</span> java.sql.Statement<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>/**</pre></td></tr><tr><td data-num=\"9\"></td><td><pre> * @ClassName: JDBCC3P0Utils</pre></td></tr><tr><td data-num=\"10\"></td><td><pre> * @Description: TODO 类描述</pre></td></tr><tr><td data-num=\"11\"></td><td><pre> * @Author: zyy</pre></td></tr><tr><td data-num=\"12\"></td><td><pre> * @Date: <span class=\"token number\">2021</span>/07/14 <span class=\"token number\">17</span>:48</pre></td></tr><tr><td data-num=\"13\"></td><td><pre> * @Version: <span class=\"token number\">1.0</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre> */</pre></td></tr><tr><td data-num=\"15\"></td><td><pre>public class JDBCC3P0Utils <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>    private static DataSource dataSource <span class=\"token operator\">=</span> null<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>    //private static ComboPooledDataSource dataSource <span class=\"token operator\">=</span> null<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre></pre></td></tr><tr><td data-num=\"19\"></td><td><pre></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>    static <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>        try <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>            //代码的方式配置</pre></td></tr><tr><td data-num=\"23\"></td><td><pre>//            dataSource <span class=\"token operator\">=</span> new ComboPooledDataSource<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>//            dataSource.setDriverClass<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre>//            dataSource.setJdbcUrl<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre>//            dataSource.setUser<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre>//            dataSource.setPassword<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre>//            dataSource.setMaxPoolSize<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"29\"></td><td><pre>//            dataSource.setMinPoolSize<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"30\"></td><td><pre>            //配置文件写法</pre></td></tr><tr><td data-num=\"31\"></td><td><pre>            dataSource <span class=\"token operator\">=</span> new ComboPooledDataSource<span class=\"token punctuation\">(</span><span class=\"token string\">\"MySQL\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"32\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span> catch <span class=\"token punctuation\">(</span>Exception e<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"33\"></td><td><pre>            e.printStackTrace<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"34\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"35\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"36\"></td><td><pre></pre></td></tr><tr><td data-num=\"37\"></td><td><pre>    /**</pre></td></tr><tr><td data-num=\"38\"></td><td><pre>     * 获取连接</pre></td></tr><tr><td data-num=\"39\"></td><td><pre>     */</pre></td></tr><tr><td data-num=\"40\"></td><td><pre>    public static Connection getConnection<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> throws SQLException <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"41\"></td><td><pre>        //从数据源中获取连接</pre></td></tr><tr><td data-num=\"42\"></td><td><pre>        <span class=\"token builtin class-name\">return</span> dataSource.getConnection<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"43\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"44\"></td><td><pre></pre></td></tr><tr><td data-num=\"45\"></td><td><pre>    /**</pre></td></tr><tr><td data-num=\"46\"></td><td><pre>     * 释放资源</pre></td></tr><tr><td data-num=\"47\"></td><td><pre>     */</pre></td></tr><tr><td data-num=\"48\"></td><td><pre>    public static void release<span class=\"token punctuation\">(</span>Connection con, Statement st, ResultSet rs<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"49\"></td><td><pre>        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>rs <span class=\"token operator\">!=</span> null<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"50\"></td><td><pre>            try <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"51\"></td><td><pre>                rs.close<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"52\"></td><td><pre>            <span class=\"token punctuation\">&#125;</span> catch <span class=\"token punctuation\">(</span>SQLException e<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"53\"></td><td><pre>                e.printStackTrace<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"54\"></td><td><pre>            <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"55\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"56\"></td><td><pre>        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>st <span class=\"token operator\">!=</span> null<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"57\"></td><td><pre>            try <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"58\"></td><td><pre>                st.close<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"59\"></td><td><pre>            <span class=\"token punctuation\">&#125;</span> catch <span class=\"token punctuation\">(</span>SQLException e<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"60\"></td><td><pre>                e.printStackTrace<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"61\"></td><td><pre>            <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"62\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"63\"></td><td><pre>        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>con <span class=\"token operator\">!=</span> null<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"64\"></td><td><pre>            try <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"65\"></td><td><pre>                con.close<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"66\"></td><td><pre>            <span class=\"token punctuation\">&#125;</span> catch <span class=\"token punctuation\">(</span>SQLException e<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"67\"></td><td><pre>                e.printStackTrace<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"68\"></td><td><pre>            <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"69\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"70\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"71\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><ul>\n<li>测试类</li>\n</ul>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token function\">import</span> com.zyy.lesson05.utils.JDBCC3P0Utils<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token function\">import</span> com.zyy.lesson05.utils.JDBCDBCPUtils<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token function\">import</span> java.sql.Connection<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token function\">import</span> java.sql.PreparedStatement<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token function\">import</span> java.sql.ResultSet<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token function\">import</span> java.sql.SQLException<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>/**</pre></td></tr><tr><td data-num=\"10\"></td><td><pre> * @ClassName: TestC3P0</pre></td></tr><tr><td data-num=\"11\"></td><td><pre> * @Description: TODO 类描述</pre></td></tr><tr><td data-num=\"12\"></td><td><pre> * @Author: zyy</pre></td></tr><tr><td data-num=\"13\"></td><td><pre> * @Date: <span class=\"token number\">2021</span>/07/15 <span class=\"token number\">22</span>:41</pre></td></tr><tr><td data-num=\"14\"></td><td><pre> * @Version: <span class=\"token number\">1.0</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre> */</pre></td></tr><tr><td data-num=\"16\"></td><td><pre>public class TestC3P0 <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>    public static void main<span class=\"token punctuation\">(</span>String<span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> args<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>        Connection con <span class=\"token operator\">=</span> null<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>        PreparedStatement st <span class=\"token operator\">=</span> null<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>        ResultSet rs <span class=\"token operator\">=</span> null<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>        try <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>            con <span class=\"token operator\">=</span> JDBCC3P0Utils.getConnection<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>            //使用?占位符代替参数</pre></td></tr><tr><td data-num=\"24\"></td><td><pre>            String sql <span class=\"token operator\">=</span> <span class=\"token string\">\"INSERT INTO users(<span class=\"token variable\"><span class=\"token variable\">`</span><span class=\"token function\">id</span><span class=\"token variable\">`</span></span>,<span class=\"token variable\"><span class=\"token variable\">`</span>name<span class=\"token variable\">`</span></span>,<span class=\"token variable\"><span class=\"token variable\">`</span>password<span class=\"token variable\">`</span></span>,<span class=\"token variable\"><span class=\"token variable\">`</span>email<span class=\"token variable\">`</span></span>,<span class=\"token variable\"><span class=\"token variable\">`</span>birthday<span class=\"token variable\">`</span></span>) VALUES (?,?,?,?,?)\"</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre>            //预编译SQL，先写SQL，然后不执行</pre></td></tr><tr><td data-num=\"26\"></td><td><pre>            st <span class=\"token operator\">=</span> con.prepareStatement<span class=\"token punctuation\">(</span>sql<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre>            //手动给参数赋值</pre></td></tr><tr><td data-num=\"28\"></td><td><pre>            st.setInt<span class=\"token punctuation\">(</span><span class=\"token number\">1</span>, <span class=\"token number\">6</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"29\"></td><td><pre>            st.setString<span class=\"token punctuation\">(</span><span class=\"token number\">2</span>, <span class=\"token string\">\"刘八\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"30\"></td><td><pre>            st.setString<span class=\"token punctuation\">(</span><span class=\"token number\">3</span>, <span class=\"token string\">\"123456\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"31\"></td><td><pre>            st.setString<span class=\"token punctuation\">(</span><span class=\"token number\">4</span>, <span class=\"token string\">\"liuba@sina.com\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"32\"></td><td><pre>            st.setDate<span class=\"token punctuation\">(</span><span class=\"token number\">5</span>, new java.sql.Date<span class=\"token punctuation\">(</span>new java.util.Date<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>.getTime<span class=\"token punctuation\">(</span><span class=\"token punctuation\">))</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"33\"></td><td><pre>            int num <span class=\"token operator\">=</span> st.executeUpdate<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"34\"></td><td><pre>            <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>num <span class=\"token operator\">></span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"35\"></td><td><pre>                System.out.println<span class=\"token punctuation\">(</span><span class=\"token string\">\"插入成功！\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"36\"></td><td><pre>            <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"37\"></td><td><pre></pre></td></tr><tr><td data-num=\"38\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span> catch <span class=\"token punctuation\">(</span>SQLException e<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"39\"></td><td><pre>            e.printStackTrace<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"40\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span> finally <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"41\"></td><td><pre>            JDBCC3P0Utils.release<span class=\"token punctuation\">(</span>con, st, rs<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"42\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"43\"></td><td><pre></pre></td></tr><tr><td data-num=\"44\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"45\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><h1 id=\"总结\"><a class=\"anchor\" href=\"#总结\">#</a> 总结</h1>\n<ul>\n<li>无论用什么数据源，本质还是一样的，DataSource 接口不会变，方法就不会变</li>\n</ul>\n",
            "tags": [
                "数据库",
                "数据库"
            ]
        },
        {
            "id": "https://love.youhuamao.xyz/2022/10/16/computer-science/DataStructureandalgorithm/%E4%B8%B2%EF%BC%8C%E6%95%B0%E5%AD%97%E5%92%8C%E5%B9%BF%E4%B9%89%E8%A1%A8/",
            "url": "https://love.youhuamao.xyz/2022/10/16/computer-science/DataStructureandalgorithm/%E4%B8%B2%EF%BC%8C%E6%95%B0%E5%AD%97%E5%92%8C%E5%B9%BF%E4%B9%89%E8%A1%A8/",
            "title": "串，数字和广义表",
            "date_published": "2022-10-15T16:00:00.000Z",
            "content_html": "<h1 id=\"串\"><a class=\"anchor\" href=\"#串\">#</a> 串</h1>\n<p>串 ———— 零个或多个任意字符组成的有限序列<br />\n字串 ———— 串中任意个连续字符组成的子序列称为该串的子串<br />\n主串 ———— 包含子串的串相应地称为主串<br />\n字符位置 ———— 字符在序列中的序号为该字符在串中的位置<br />\n字串位置 ———— 子串第一个字符在主串中的位置<br />\n空格串 ———— 由一个或多个空格组成的串，与空串不同<br />\n串相等：当且仅当两个串的长度相等并且各个对应位置上的字符都相同时，这两个串才是相等的</p>\n<h1 id=\"串的顺序存储结构\"><a class=\"anchor\" href=\"#串的顺序存储结构\">#</a> 串的顺序存储结构</h1>\n<p class=\"gallery\" data-height=\"750px\"><img data-src=\"/pic/shujujiegouyusuanfa/img_9.png\" alt=\"img_9.png\" /></p>\n<h1 id=\"串的链式存储结构\"><a class=\"anchor\" href=\"#串的链式存储结构\">#</a> 串的链式存储结构</h1>\n<p class=\"gallery\" data-height=\"750px\"><img data-src=\"/pic/shujujiegouyusuanfa/img_10.png\" alt=\"img_10.png\" /></p>\n<h1 id=\"串的模式匹配算法\"><a class=\"anchor\" href=\"#串的模式匹配算法\">#</a> 串的模式匹配算法</h1>\n<ul class=\"gallery gallery\" data-height=\"750px\" data-height=\"750px\">\n<li>\n<p>BF 算法<br />\n<img data-src=\"/pic/shujujiegouyusuanfa/img_12.png\" alt=\"img_12.png\" /><br />\n<img data-src=\"/pic/shujujiegouyusuanfa/img_13.png\" alt=\"img_13.png\" /></p>\n</li>\n<li>\n<p>KMP 算法<br />\n<img data-src=\"/pic/shujujiegouyusuanfa/img_14.png\" alt=\"img_14.png\" /><br />\n<img data-src=\"/pic/shujujiegouyusuanfa/img_15.png\" alt=\"img_15.png\" /><br />\n<img data-src=\"/pic/shujujiegouyusuanfa/img_16.png\" alt=\"img_16.png\" /><br />\n<img data-src=\"/pic/shujujiegouyusuanfa/img_17.png\" alt=\"img_17.png\" /><br />\n<img data-src=\"/pic/shujujiegouyusuanfa/img_18.png\" alt=\"img_18.png\" /></p>\n</li>\n</ul>\n<h1 id=\"数组\"><a class=\"anchor\" href=\"#数组\">#</a> 数组</h1>\n<p class=\"gallery\" data-height=\"750px\">数组 ———— 按一定格式排列起来的具有相同类型的数据元素的集合<br />\n<img data-src=\"/pic/shujujiegouyusuanfa/img_19.png\" alt=\"img_19.png\" /></p>\n<h1 id=\"数组的顺序存储\"><a class=\"anchor\" href=\"#数组的顺序存储\">#</a> 数组的顺序存储</h1>\n<p class=\"gallery\" data-height=\"750px\"><img data-src=\"/pic/shujujiegouyusuanfa/img_20.png\" alt=\"img_20.png\" /></p>\n<ul class=\"gallery\" data-height=\"750px\">\n<li>\n<p>二维数组可有两种存储方式：1 以行序为主序，2 以列序为主序<br />\n<img data-src=\"/pic/shujujiegouyusuanfa/img_21.png\" alt=\"img_21.png\" /><br />\n<img data-src=\"/pic/shujujiegouyusuanfa/img_22.png\" alt=\"img_22.png\" /></p>\n</li>\n<li>\n<p>特殊存储方法</p>\n</li>\n</ul>\n<h2 id=\"以对角线为顺序\"><a class=\"anchor\" href=\"#以对角线为顺序\">#</a> 以对角线为顺序</h2>\n<p class=\"gallery\" data-height=\"750px\"><img data-src=\"/pic/shujujiegouyusuanfa/img_23.png\" alt=\"img_23.png\" /></p>\n<h2 id=\"稀疏数组的存储\"><a class=\"anchor\" href=\"#稀疏数组的存储\">#</a> 稀疏数组的存储</h2>\n<p class=\"gallery\" data-height=\"750px\">稀疏矩阵：设在 mx n 的矩阵中有 t 个非零元素。令 δ= t/(m * n)，当 δ≤0.05 时称为稀疏矩阵。<br />\n<img data-src=\"/pic/shujujiegouyusuanfa/img_24.png\" alt=\"img_24.png\" /></p>\n<h2 id=\"稀疏数组链式存储\"><a class=\"anchor\" href=\"#稀疏数组链式存储\">#</a> 稀疏数组链式存储</h2>\n<p class=\"gallery\" data-height=\"750px\"><img data-src=\"/pic/shujujiegouyusuanfa/img_25.png\" alt=\"img_25.png\" /><br />\n<img data-src=\"/pic/shujujiegouyusuanfa/img_26.png\" alt=\"img_26.png\" /></p>\n<h1 id=\"广义表\"><a class=\"anchor\" href=\"#广义表\">#</a> 广义表</h1>\n<p class=\"gallery\" data-height=\"750px\">广义表 (又称列表 Lists) 是≥0 个元素.... a 的有限序列，其中每 - - 个 a; 或者是原子，或者是一个广义表。<br />\n<img data-src=\"/pic/shujujiegouyusuanfa/img_27.png\" alt=\"img_27.png\" /><br />\n<img data-src=\"/pic/shujujiegouyusuanfa/img_28.png\" alt=\"img_28.png\" /><br />\n<img data-src=\"/pic/shujujiegouyusuanfa/img_30.png\" alt=\"img_30.png\" /><br />\n<img data-src=\"/pic/shujujiegouyusuanfa/img_32.png\" alt=\"img_32.png\" /></p>\n",
            "tags": [
                "计算机科学",
                "数据结构与算法"
            ]
        },
        {
            "id": "https://love.youhuamao.xyz/2022/10/16/computer-science/DataStructureandalgorithm/%E5%93%88%E5%A4%AB%E6%9B%BC%E6%A0%91%E5%8F%8A%E5%85%B6%E5%BA%94%E7%94%A8/",
            "url": "https://love.youhuamao.xyz/2022/10/16/computer-science/DataStructureandalgorithm/%E5%93%88%E5%A4%AB%E6%9B%BC%E6%A0%91%E5%8F%8A%E5%85%B6%E5%BA%94%E7%94%A8/",
            "title": "哈夫曼树及其应用",
            "date_published": "2022-10-15T16:00:00.000Z",
            "content_html": "<p class=\"gallery\" data-height=\"750px\"><img data-src=\"/pic/shujujiegouyusuanfa/img_75.png\" alt=\"img_75.png\" /><br />\n<img data-src=\"/pic/shujujiegouyusuanfa/img_77.png\" alt=\"img_77.png\" /></p>\n<h1 id=\"哈夫曼算法\"><a class=\"anchor\" href=\"#哈夫曼算法\">#</a> 哈夫曼算法</h1>\n<p class=\"gallery\" data-height=\"750px\"><img data-src=\"/pic/shujujiegouyusuanfa/img_78.png\" alt=\"img_78.png\" /><br />\n<img data-src=\"/pic/shujujiegouyusuanfa/img_79.png\" alt=\"img_79.png\" /><br />\n<img data-src=\"/pic/shujujiegouyusuanfa/img_80.png\" alt=\"img_80.png\" /></p>\n<h1 id=\"顺序结构存储\"><a class=\"anchor\" href=\"#顺序结构存储\">#</a> 顺序结构存储</h1>\n<p class=\"gallery\" data-height=\"750px\"><img data-src=\"/pic/shujujiegouyusuanfa/img_81.png\" alt=\"img_81.png\" /><br />\n<img data-src=\"/pic/shujujiegouyusuanfa/img_82.png\" alt=\"img_82.png\" /><br />\n<img data-src=\"/pic/shujujiegouyusuanfa/img_83.png\" alt=\"img_83.png\" /></p>\n<h1 id=\"哈夫曼编码\"><a class=\"anchor\" href=\"#哈夫曼编码\">#</a> 哈夫曼编码</h1>\n<p class=\"gallery\" data-height=\"750px\"><img data-src=\"/pic/shujujiegouyusuanfa/img_84.png\" alt=\"img_84.png\" /><br />\n<img data-src=\"/pic/shujujiegouyusuanfa/img_86.png\" alt=\"img_86.png\" /><br />\n<img data-src=\"/pic/shujujiegouyusuanfa/img_85.png\" alt=\"img_85.png\" /></p>\n",
            "tags": [
                "计算机科学",
                "数据结构与算法"
            ]
        },
        {
            "id": "https://love.youhuamao.xyz/2022/10/16/computer-science/DataStructureandalgorithm/%E5%9B%BE/",
            "url": "https://love.youhuamao.xyz/2022/10/16/computer-science/DataStructureandalgorithm/%E5%9B%BE/",
            "title": "图",
            "date_published": "2022-10-15T16:00:00.000Z",
            "content_html": "<p>完全图：任意两个点都有一条边相连</p>\n<p>稀疏图：有很少边或弧的图 (e&lt;nlogn)</p>\n<p>稠密图：有较多边或弧的图</p>\n<p>网：边 / 弧带权的图</p>\n<p>邻接：有边 / 弧相连的两个顶点之间的关系</p>\n<p class=\"gallery\" data-height=\"750px\"><img data-src=\"/pic/shujujiegouyusuanfa/img_87.png\" alt=\"img_87.png\" /></p>\n<p>路径：接续的边构成的顶点序列</p>\n<p>路径长度：路径上边或弧的数目 / 权值之和</p>\n<p>回路 (环): 第一一个顶点和最后一个顶点相同的路径</p>\n<p>简单路径：除路径起点和终点可以相同外，其余顶点均不相同的路径</p>\n<p>简单回路 (简单环): 除路径起点和终点相同外，其余顶点均不相同的路径</p>\n<p>连通图 (强连通图)：在无 (有) 向图 G=( V, {E} ) 中，若对任何两个顶点 v、u 都存在从 v 到<br />\n u 的路径 ，则称 G 是连通图 (强连通图)</p>\n<p>权与网：图中边或弧所具有的相关数称为权。表明从一个顶点到另一个顶点的距离或耗费。带权<br />\n的图称 为网。</p>\n<p>连通分量 (强连通分量)：无向图 G 的极大连通子图称为 G 的连通分量</p>\n<p>极大连通子图意思是：该子图是 G 连通子图，将 G 的任何不在该子图中的顶点加入，子图不再连通</p>\n<p>有向图 G 的极大强连通子图称为 G 的强连通分量</p>\n<p>极大强连通子图意思是：该子图是 G 的强连通子图，将 D 的任何不在该子图中的顶点加入，子图不<br />\n再是强连通的</p>\n<p>极小连通子图：该子图是 G 的连通子图，在该子图中删除任何一条边子图不再连通</p>\n<p>生成树：包含无向图 G 所有顶点的极小连通子图</p>\n<p>生成森林：对非连通图，由各个连通分量的生成树的集合</p>\n<h1 id=\"图的类型定义\"><a class=\"anchor\" href=\"#图的类型定义\">#</a> 图的类型定义</h1>\n<p class=\"gallery\" data-height=\"750px\"><img data-src=\"/pic/shujujiegouyusuanfa/img_89.png\" alt=\"img_89.png\" /></p>\n<h1 id=\"数组邻接矩阵表示法\"><a class=\"anchor\" href=\"#数组邻接矩阵表示法\">#</a> 数组（邻接矩阵）表示法</h1>\n<p class=\"gallery\" data-height=\"750px\"><img data-src=\"/pic/shujujiegouyusuanfa/img_90.png\" alt=\"img_90.png\" /><br />\n<img data-src=\"/pic/shujujiegouyusuanfa/img_88.png\" alt=\"img_88.png\" /><br />\n<img data-src=\"/pic/shujujiegouyusuanfa/img_91.png\" alt=\"img_91.png\" /><br />\n<img data-src=\"/pic/shujujiegouyusuanfa/img_92.png\" alt=\"img_92.png\" /><br />\n<img data-src=\"/pic/shujujiegouyusuanfa/img_93.png\" alt=\"img_93.png\" /></p>\n<h1 id=\"邻接表表示法链式\"><a class=\"anchor\" href=\"#邻接表表示法链式\">#</a> 邻接表表示法（链式）</h1>\n<p class=\"gallery\" data-height=\"750px\"><img data-src=\"/pic/shujujiegouyusuanfa/img_94.png\" alt=\"img_94.png\" /></p>\n<h1 id=\"图的邻接存储表示\"><a class=\"anchor\" href=\"#图的邻接存储表示\">#</a> 图的邻接存储表示</h1>\n<p class=\"gallery\" data-height=\"750px\"><img data-src=\"/pic/shujujiegouyusuanfa/img_96.png\" alt=\"img_96.png\" /><br />\n<img data-src=\"/pic/shujujiegouyusuanfa/img_98.png\" alt=\"img_98.png\" /><br />\n<img data-src=\"/pic/shujujiegouyusuanfa/img_97.png\" alt=\"img_97.png\" /><br />\n<img data-src=\"/pic/shujujiegouyusuanfa/img_99.png\" alt=\"img_99.png\" /><br />\n<img data-src=\"/pic/shujujiegouyusuanfa/img_100.png\" alt=\"img_100.png\" /></p>\n<h1 id=\"十字链表\"><a class=\"anchor\" href=\"#十字链表\">#</a> 十字链表</h1>\n<p class=\"gallery\" data-height=\"750px\"><img data-src=\"/pic/shujujiegouyusuanfa/img_101.png\" alt=\"img_101.png\" /><br />\n<img data-src=\"/pic/shujujiegouyusuanfa/img_103.png\" alt=\"img_103.png\" /></p>\n<h1 id=\"深度优先遍历\"><a class=\"anchor\" href=\"#深度优先遍历\">#</a> 深度优先遍历</h1>\n<p class=\"gallery\" data-height=\"750px\"><img data-src=\"/pic/shujujiegouyusuanfa/img_102.png\" alt=\"img_102.png\" /></p>\n<h1 id=\"广度优先遍历dfs\"><a class=\"anchor\" href=\"#广度优先遍历dfs\">#</a> 广度优先遍历（DFS）</h1>\n<p class=\"gallery\" data-height=\"750px\"><img data-src=\"/pic/shujujiegouyusuanfa/img_104.png\" alt=\"img_104.png\" /></p>\n<h1 id=\"图的应用\"><a class=\"anchor\" href=\"#图的应用\">#</a> 图的应用</h1>\n<p>生成树：所有顶点均由边连接在一起，但不存在回路的图</p>\n<h1 id=\"最小生成树\"><a class=\"anchor\" href=\"#最小生成树\">#</a> 最小生成树</h1>\n<p>最小生成树：给定一个无向网络在该网的所有生成树中，使得各边权值之和最小的那棵生成树<br />\n称为该网的最小生成树，也叫最小代价生成树。</p>\n<h1 id=\"构建最小生成树mst\"><a class=\"anchor\" href=\"#构建最小生成树mst\">#</a> 构建最小生成树 (MST)</h1>\n<p>MST 性质：设 N = (V, E) 是一个连通网，U 是顶点集 V 的一个非空子集。若边 (u,v) 是一条<br />\n具有最小权值的边，其中 u∈U，v∈（V-U) 则必存在一棵包含边 (u, v) 的最小生成树。</p>\n<h2 id=\"普里姆算法prim\"><a class=\"anchor\" href=\"#普里姆算法prim\">#</a> 普里姆算法（prim）</h2>\n<p class=\"gallery\" data-height=\"750px\"><img data-src=\"/pic/shujujiegouyusuanfa/img_105.png\" alt=\"img_105.png\" /></p>\n<h2 id=\"克鲁斯卡尔kruskal\"><a class=\"anchor\" href=\"#克鲁斯卡尔kruskal\">#</a> 克鲁斯卡尔 (Kruskal)</h2>\n<p class=\"gallery\" data-height=\"750px\"><img data-src=\"/pic/shujujiegouyusuanfa/img_106.png\" alt=\"img_106.png\" /></p>\n<h1 id=\"单源路径\"><a class=\"anchor\" href=\"#单源路径\">#</a> 单源路径</h1>\n<p>单源最短路径 —— 用 Dijkstra (迪杰斯特拉) 算法<br />\n所有顶点间的最短路径一用 Floyd (弗洛伊德) 算法</p>\n<h2 id=\"dijkstra-迪杰斯特拉算法\"><a class=\"anchor\" href=\"#dijkstra-迪杰斯特拉算法\">#</a> Dijkstra (迪杰斯特拉) 算法</h2>\n<p class=\"gallery\" data-height=\"750px\"><img data-src=\"/pic/shujujiegouyusuanfa/img_107.png\" alt=\"img_107.png\" /></p>\n<h2 id=\"floyd-弗洛伊德算法\"><a class=\"anchor\" href=\"#floyd-弗洛伊德算法\">#</a> Floyd (弗洛伊德) 算法</h2>\n<p class=\"gallery\" data-height=\"750px\"><img data-src=\"/pic/shujujiegouyusuanfa/img_108.png\" alt=\"img_108.png\" /></p>\n<h1 id=\"拓扑排序\"><a class=\"anchor\" href=\"#拓扑排序\">#</a> 拓扑排序</h1>\n<p class=\"gallery\" data-height=\"750px\"><img data-src=\"/pic/shujujiegouyusuanfa/img_109.png\" alt=\"img_109.png\" /><br />\n<img data-src=\"/pic/shujujiegouyusuanfa/img_110.png\" alt=\"img_110.png\" /><br />\n<img data-src=\"/pic/shujujiegouyusuanfa/img_111.png\" alt=\"img_111.png\" /></p>\n<h1 id=\"关键路径\"><a class=\"anchor\" href=\"#关键路径\">#</a> 关键路径</h1>\n<p class=\"gallery\" data-height=\"750px\"><img data-src=\"/pic/shujujiegouyusuanfa/img_112.png\" alt=\"img_112.png\" /><br />\n<img data-src=\"/pic/shujujiegouyusuanfa/img_114.png\" alt=\"img_114.png\" /><br />\n<img data-src=\"/pic/shujujiegouyusuanfa/img_113.png\" alt=\"img_113.png\" /><br />\n<img data-src=\"/pic/shujujiegouyusuanfa/img_115.png\" alt=\"img_115.png\" /></p>\n",
            "tags": [
                "计算机科学",
                "数据结构与算法"
            ]
        },
        {
            "id": "https://love.youhuamao.xyz/2022/10/16/computer-science/DataStructureandalgorithm/%E5%9F%BA%E6%9C%AC%E6%A6%82%E5%BF%B5/",
            "url": "https://love.youhuamao.xyz/2022/10/16/computer-science/DataStructureandalgorithm/%E5%9F%BA%E6%9C%AC%E6%A6%82%E5%BF%B5/",
            "title": "基本概念",
            "date_published": "2022-10-15T16:00:00.000Z",
            "content_html": "<h1 id=\"术语\"><a class=\"anchor\" href=\"#术语\">#</a> 术语</h1>\n<ul>\n<li>数据<br />\n数据元素：组成数据的基本单位<br />\n（与数据的关系：是集合的个体）<br />\n数据项</li>\n</ul>\n<p>数据 &gt; 数据元素 &gt; 数据项<br />\n例子：学生表 &gt; 个人记录 &gt; 学号，名字...</p>\n<p>数据对象：是性质相同的数据元素的集合，是数据的一个子集<br />\n（与数据的关系：集合的子集）<br />\n例子：<br />\n整数数据对象是集合 N = {0，+-1，+-2...}<br />\n 字母字符数据对象是集合 C = {&quot;A&quot;,&quot;B&quot;,&quot;C&quot;...}<br />\n 学籍表也可以看作一个数据对象</p>\n<h1 id=\"数据结构\"><a class=\"anchor\" href=\"#数据结构\">#</a> 数据结构</h1>\n<p>逻辑结构是数据结构的抽象，存储结构是数据结构的实现</p>\n<p>逻辑结构： （1）线性结构：有且仅有一个开始和一个终端节点并且所有节点<br />\n都最多只有一个直接前趋和一个直接后继（线性表，栈，队列，串）<br />\n（2）非线下结构：可能有多个前趋和多个后继（树，图）</p>\n<p>存储结构：（1）顺序存储结构：依次存储，c 语言种用数组实现<br />\n（2）链式存储结构：c 语言种用指针实现<br />\n（3）索引存储结构<br />\n（4）散列存储：根据关键子直接计算出该节点的存储地址</p>\n<h1 id=\"基本操作\"><a class=\"anchor\" href=\"#基本操作\">#</a> 基本操作</h1>\n<p>赋值参数：只为操作提供输入值<br />\n引用参数：以 &amp; 打头，除可提供输入值外，还将返回操作结果<br />\n例：<br />\n（a = power（a，b）） == （power（&amp;a，b））</p>\n<h1 id=\"算法特性\"><a class=\"anchor\" href=\"#算法特性\">#</a> 算法特性</h1>\n<p>有穷性：一个算法执行有穷步之后结束，且每一步都在有穷时间内完成<br />\n确定性：每条指令有确切含义<br />\n可行性：算法可执行<br />\n输入：一个算法有 0 个或多个输入<br />\n输出：一个算法有一个或多个输出</p>\n<h1 id=\"算法分析\"><a class=\"anchor\" href=\"#算法分析\">#</a> 算法分析</h1>\n<p>算法运行时间 = 一个简单操作所需的时间 * 简单操作的次数<br />\n算法运行时间 = {每条语句的执行次数（语句频度）- 该语句执行一次所需的时间} 的和<br />\n（执行时间为单位时间）<br />\n时间复杂度：T（n）, 取最大数量级<br />\n T（n） = n 的三次方  等于 O（n 的三次方）<br />\n空间复杂度：S（n）<br />\npc -&gt; next = pa?pa:pb 与 if（pa） pa   else pb; 一样</p>\n",
            "tags": [
                "计算机科学",
                "数据结构与算法"
            ]
        },
        {
            "id": "https://love.youhuamao.xyz/2022/10/16/computer-science/DataStructureandalgorithm/%E6%8E%92%E5%BA%8F/",
            "url": "https://love.youhuamao.xyz/2022/10/16/computer-science/DataStructureandalgorithm/%E6%8E%92%E5%BA%8F/",
            "title": "排序",
            "date_published": "2022-10-15T16:00:00.000Z",
            "content_html": "<p class=\"gallery\" data-height=\"750px\"><img data-src=\"/pic/shujujiegouyusuanfa/img_143.png\" alt=\"img_143.png\" /></p>\n<h1 id=\"插入排序\"><a class=\"anchor\" href=\"#插入排序\">#</a> 插入排序</h1>\n<h2 id=\"直接插入排序\"><a class=\"anchor\" href=\"#直接插入排序\">#</a> 直接插入排序</h2>\n<p class=\"gallery\" data-height=\"750px\"><img data-src=\"/pic/shujujiegouyusuanfa/img_144.png\" alt=\"img_144.png\" /><br />\n<img data-src=\"/pic/shujujiegouyusuanfa/img_145.png\" alt=\"img_145.png\" /></p>\n<h2 id=\"折半插入排序\"><a class=\"anchor\" href=\"#折半插入排序\">#</a> 折半插入排序</h2>\n<p class=\"gallery\" data-height=\"750px\"><img data-src=\"/pic/shujujiegouyusuanfa/img_146.png\" alt=\"img_146.png\" /><br />\n<img data-src=\"/pic/shujujiegouyusuanfa/img_147.png\" alt=\"img_147.png\" /></p>\n<h2 id=\"希尔排序\"><a class=\"anchor\" href=\"#希尔排序\">#</a> 希尔排序</h2>\n<p class=\"gallery\" data-height=\"750px\"><img data-src=\"/pic/shujujiegouyusuanfa/img_148.png\" alt=\"img_148.png\" /><br />\n<img data-src=\"/pic/shujujiegouyusuanfa/img_149.png\" alt=\"img_149.png\" /><br />\n<img data-src=\"/pic/shujujiegouyusuanfa/img_150.png\" alt=\"img_150.png\" /></p>\n<h1 id=\"交换排序\"><a class=\"anchor\" href=\"#交换排序\">#</a> 交换排序</h1>\n<h2 id=\"冒泡排序\"><a class=\"anchor\" href=\"#冒泡排序\">#</a> 冒泡排序</h2>\n<p class=\"gallery\" data-height=\"750px\"><img data-src=\"/pic/shujujiegouyusuanfa/img_152.png\" alt=\"img_152.png\" /><br />\n<img data-src=\"/pic/shujujiegouyusuanfa/img_151.png\" alt=\"img_151.png\" /></p>\n<h2 id=\"快速排序\"><a class=\"anchor\" href=\"#快速排序\">#</a> 快速排序</h2>\n<p class=\"gallery\" data-height=\"750px\"><img data-src=\"/pic/shujujiegouyusuanfa/img_153.png\" alt=\"img_153.png\" /><br />\n<img data-src=\"/pic/shujujiegouyusuanfa/img_154.png\" alt=\"img_154.png\" /><br />\n<img data-src=\"/pic/shujujiegouyusuanfa/img_155.png\" alt=\"img_155.png\" /></p>\n<p class=\"gallery\" data-height=\"750px\">谁指空谁不动<br />\n<img data-src=\"/pic/shujujiegouyusuanfa/img_156.png\" alt=\"img_156.png\" /></p>\n<h1 id=\"选择排序\"><a class=\"anchor\" href=\"#选择排序\">#</a> 选择排序</h1>\n<h2 id=\"简单选择排序\"><a class=\"anchor\" href=\"#简单选择排序\">#</a> 简单选择排序</h2>\n<p class=\"gallery\" data-height=\"750px\"><img data-src=\"/pic/shujujiegouyusuanfa/img_157.png\" alt=\"img_157.png\" /></p>\n<h2 id=\"堆排序\"><a class=\"anchor\" href=\"#堆排序\">#</a> 堆排序</h2>\n<p class=\"gallery\" data-height=\"750px\"><img data-src=\"/pic/shujujiegouyusuanfa/img_159.png\" alt=\"img_159.png\" /><br />\n<img data-src=\"/pic/shujujiegouyusuanfa/img_164.png\" alt=\"img_164.png\" /><br />\n<img data-src=\"/pic/shujujiegouyusuanfa/img_160.png\" alt=\"img_160.png\" /><br />\n<img data-src=\"/pic/shujujiegouyusuanfa/img_161.png\" alt=\"img_161.png\" /><br />\n<img data-src=\"/pic/shujujiegouyusuanfa/img_163.png\" alt=\"img_163.png\" /><br />\n<img data-src=\"/pic/shujujiegouyusuanfa/img_162.png\" alt=\"img_162.png\" /></p>\n<h1 id=\"归并排序\"><a class=\"anchor\" href=\"#归并排序\">#</a> 归并排序</h1>\n<p class=\"gallery\" data-height=\"750px\">基本思想：将两个或两个以上的有序子序列 &quot; 归并” 为一个有序序列<br />\n<img data-src=\"/pic/shujujiegouyusuanfa/img_165.png\" alt=\"img_165.png\" /><br />\n<img data-src=\"/pic/shujujiegouyusuanfa/img_166.png\" alt=\"img_166.png\" /></p>\n<h1 id=\"基数排序\"><a class=\"anchor\" href=\"#基数排序\">#</a> 基数排序</h1>\n<p class=\"gallery\" data-height=\"750px\"><img data-src=\"/pic/shujujiegouyusuanfa/img_168.png\" alt=\"img_168.png\" /><br />\n<img data-src=\"/pic/shujujiegouyusuanfa/img_167.png\" alt=\"img_167.png\" /><br />\n<img data-src=\"/pic/shujujiegouyusuanfa/img_169.png\" alt=\"img_169.png\" /><br />\n<img data-src=\"/pic/shujujiegouyusuanfa/img_170.png\" alt=\"img_170.png\" /><br />\n<img data-src=\"/pic/shujujiegouyusuanfa/img_171.png\" alt=\"img_171.png\" /></p>\n",
            "tags": [
                "计算机科学",
                "数据结构与算法"
            ]
        },
        {
            "id": "https://love.youhuamao.xyz/2022/10/16/computer-science/DataStructureandalgorithm/%E6%9F%A5%E6%89%BE/",
            "url": "https://love.youhuamao.xyz/2022/10/16/computer-science/DataStructureandalgorithm/%E6%9F%A5%E6%89%BE/",
            "title": "查找",
            "date_published": "2022-10-15T16:00:00.000Z",
            "content_html": "<h1 id=\"顺序查找\"><a class=\"anchor\" href=\"#顺序查找\">#</a> 顺序查找</h1>\n<p class=\"gallery\" data-height=\"750px\"><img data-src=\"/pic/shujujiegouyusuanfa/img_116.png\" alt=\"img_116.png\" /><br />\n<img data-src=\"/pic/shujujiegouyusuanfa/img_117.png\" alt=\"img_117.png\" /><br />\n<img data-src=\"/pic/shujujiegouyusuanfa/img_119.png\" alt=\"img_119.png\" /><br />\n<img data-src=\"/pic/shujujiegouyusuanfa/img_120.png\" alt=\"img_120.png\" /></p>\n<h1 id=\"二分查找\"><a class=\"anchor\" href=\"#二分查找\">#</a> 二分查找</h1>\n<p class=\"gallery\" data-height=\"750px\"><img data-src=\"/pic/shujujiegouyusuanfa/img_121.png\" alt=\"img_121.png\" /><br />\n<img data-src=\"/pic/shujujiegouyusuanfa/img_122.png\" alt=\"img_122.png\" /><br />\n<img data-src=\"/pic/shujujiegouyusuanfa/img_125.png\" alt=\"img_125.png\" /><br />\n<img data-src=\"/pic/shujujiegouyusuanfa/img_124.png\" alt=\"img_124.png\" /></p>\n<h1 id=\"二叉排序树\"><a class=\"anchor\" href=\"#二叉排序树\">#</a> 二叉排序树</h1>\n<p class=\"gallery\" data-height=\"750px\"><img data-src=\"/pic/shujujiegouyusuanfa/img_126.png\" alt=\"img_126.png\" /><br />\n<img data-src=\"/pic/shujujiegouyusuanfa/img_127.png\" alt=\"img_127.png\" /></p>\n<ul class=\"gallery gallery\" data-height=\"750px\" data-height=\"750px\">\n<li>\n<p>左子树比根小，右子树比根大<br />\n<img data-src=\"/pic/shujujiegouyusuanfa/img_128.png\" alt=\"img_128.png\" /><br />\n<img data-src=\"/pic/shujujiegouyusuanfa/img_129.png\" alt=\"img_129.png\" /><br />\n<img data-src=\"/pic/shujujiegouyusuanfa/img_130.png\" alt=\"img_130.png\" /></p>\n</li>\n<li>\n<p>被删除的结点只有左子 树或者只有右子树，用其左子树或者右子树替换它 (结点替换)。<br />\n<img data-src=\"/pic/shujujiegouyusuanfa/img_132.png\" alt=\"img_132.png\" /></p>\n</li>\n</ul>\n<h1 id=\"平衡二叉树avl树\"><a class=\"anchor\" href=\"#平衡二叉树avl树\">#</a> 平衡二叉树（AVL 树）</h1>\n<p><img data-src=\"/pic/shujujiegouyusuanfa/img_131.png\" alt=\"img_131.png\" /><br />\n<img data-src=\"/pic/shujujiegouyusuanfa/img_133.png\" alt=\"img_133.png\" /><br />\n<img data-src=\"/pic/shujujiegouyusuanfa/img_134.png\" alt=\"img_134.png\" /></p>\n<h1 id=\"散列表的基本概念\"><a class=\"anchor\" href=\"#散列表的基本概念\">#</a> 散列表的基本概念</h1>\n<p><img data-src=\"/pic/shujujiegouyusuanfa/img_136.png\" alt=\"img_136.png\" /><br />\n<img data-src=\"/pic/shujujiegouyusuanfa/img_135.png\" alt=\"img_135.png\" /><br />\n<img data-src=\"/pic/shujujiegouyusuanfa/img_137.png\" alt=\"img_137.png\" /><br />\n<img data-src=\"/pic/shujujiegouyusuanfa/img_138.png\" alt=\"img_138.png\" /><br />\n<img data-src=\"/pic/shujujiegouyusuanfa/img_139.png\" alt=\"img_139.png\" /></p>\n<h1 id=\"解决冲突\"><a class=\"anchor\" href=\"#解决冲突\">#</a> 解决冲突</h1>\n<p><img data-src=\"/pic/shujujiegouyusuanfa/img_140.png\" alt=\"img_140.png\" /><br />\n<img data-src=\"/pic/shujujiegouyusuanfa/img_141.png\" alt=\"img_141.png\" /><br />\n<img data-src=\"/pic/shujujiegouyusuanfa/img_142.png\" alt=\"img_142.png\" /></p>\n",
            "tags": [
                "计算机科学",
                "数据结构与算法"
            ]
        },
        {
            "id": "https://love.youhuamao.xyz/2022/10/16/computer-science/DataStructureandalgorithm/%E6%A0%88%E5%92%8C%E9%98%9F%E5%88%97/",
            "url": "https://love.youhuamao.xyz/2022/10/16/computer-science/DataStructureandalgorithm/%E6%A0%88%E5%92%8C%E9%98%9F%E5%88%97/",
            "title": "栈和队列",
            "date_published": "2022-10-15T16:00:00.000Z",
            "content_html": "<p>#栈和队列<br />\n栈：后进先出<br />\n队列：先进先出<br />\n #栈<br />\n栈是仅在表尾进行插入，删除操作的线性表<br />\n表尾叫栈顶（TOP）表头叫栈底（Base）<br />\n插入元素到栈顶叫入栈<br />\n从栈顶删除最后一个元素叫出栈<br />\n #队列<br />\n队列是在表尾插入，在表头删除<br />\n #顺序栈的表示</p>\n<figure class=\"highlight c\"><figcaption data-lang=\"c\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">definr</span> <span class=\"token expression\">MAX<span class=\"token operator\">=</span><span class=\"token number\">100</span></span></span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token keyword\">typedef</span> <span class=\"token keyword\">struct</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    SElemType <span class=\"token operator\">*</span>base<span class=\"token punctuation\">;</span><span class=\"token comment\">// 栈底指针</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    SElemType <span class=\"token operator\">*</span>top<span class=\"token punctuation\">;</span><span class=\"token comment\">// 栈顶指针</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>    <span class=\"token keyword\">int</span> MAX<span class=\"token punctuation\">;</span><span class=\"token comment\">// 栈可用最大容量</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token punctuation\">&#125;</span>SqStack<span class=\"token punctuation\">;</span></pre></td></tr></table></figure><p>#顺序栈的初始化</p>\n<figure class=\"highlight c\"><figcaption data-lang=\"c\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>Status <span class=\"token function\">lnit</span><span class=\"token punctuation\">(</span>SqStack <span class=\"token operator\">&amp;</span>s<span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>    S<span class=\"token punctuation\">.</span>base<span class=\"token operator\">=</span>new SElemType<span class=\"token punctuation\">[</span>MAX<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    <span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token expression\">S<span class=\"token punctuation\">.</span>base<span class=\"token operator\">=</span><span class=\"token punctuation\">(</span>SElemTyepe<span class=\"token operator\">*</span><span class=\"token punctuation\">)</span><span class=\"token function\">malloc</span><span class=\"token punctuation\">(</span>MAX<span class=\"token operator\">*</span><span class=\"token keyword\">sizeof</span><span class=\"token punctuation\">(</span>SElemTyepe<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></span></span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    S<span class=\"token punctuation\">.</span>top <span class=\"token operator\">=</span> S<span class=\"token punctuation\">.</span>base<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    S<span class=\"token punctuation\">.</span>stacksize <span class=\"token operator\">=</span> MAX<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><p>#顺序栈的清空</p>\n<figure class=\"highlight c\"><figcaption data-lang=\"c\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>Status <span class=\"token function\">clear</span><span class=\"token punctuation\">(</span>SqStack <span class=\"token operator\">&amp;</span>s<span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>    <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>S<span class=\"token punctuation\">.</span>base<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    <span class=\"token punctuation\">&#123;</span>   </pre></td></tr><tr><td data-num=\"4\"></td><td><pre>        S<span class=\"token punctuation\">.</span>top<span class=\"token operator\">=</span>S<span class=\"token punctuation\">.</span>base<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><p>#顺序栈的入栈</p>\n<figure class=\"highlight c\"><figcaption data-lang=\"c\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>Status <span class=\"token function\">Push</span><span class=\"token punctuation\">(</span>SqStack <span class=\"token operator\">&amp;</span>s<span class=\"token punctuation\">,</span>SElemType e<span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>    <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>S<span class=\"token punctuation\">.</span>top<span class=\"token operator\">-</span>S<span class=\"token punctuation\">.</span>base<span class=\"token operator\">==</span>S<span class=\"token punctuation\">.</span>stacksize<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>        <span class=\"token keyword\">return</span> ERROR<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    <span class=\"token operator\">*</span>S<span class=\"token punctuation\">.</span>top <span class=\"token operator\">=</span> e<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    S<span class=\"token punctuation\">.</span>top<span class=\"token operator\">++</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><p>#顺序栈的出栈</p>\n<figure class=\"highlight c\"><figcaption data-lang=\"c\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>Status <span class=\"token function\">Push</span><span class=\"token punctuation\">(</span>SqStack <span class=\"token operator\">&amp;</span>s<span class=\"token punctuation\">,</span>SElemType e<span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>    <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>S<span class=\"token punctuation\">.</span>top<span class=\"token operator\">==</span>S<span class=\"token punctuation\">.</span>base<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>        <span class=\"token keyword\">return</span> ERROR<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    S<span class=\"token punctuation\">.</span>top<span class=\"token operator\">--</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    e <span class=\"token operator\">=</span> <span class=\"token operator\">*</span>S<span class=\"token punctuation\">.</span>top<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><p>#链栈的表示</p>\n<pre><code>typedef struct StackNode&#123;\n    SElemType data;\n    struct StackNode *next;\n&#125;StackNode,*LinkStack;\n</code></pre>\n<p>链表的头指针就是栈顶<br />\n不需要头节点<br />\n基本不会满栈<br />\n空栈相当于头指针指向空</p>\n<figure class=\"highlight c\"><figcaption data-lang=\"c\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>Status <span class=\"token function\">Push</span><span class=\"token punctuation\">(</span>SqStack <span class=\"token operator\">&amp;</span>s<span class=\"token punctuation\">,</span>SElemType e<span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>p<span class=\"token operator\">=</span>new StackNode<span class=\"token punctuation\">;</span><span class=\"token comment\">// 生成新的节点 p</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>p<span class=\"token operator\">-></span>data <span class=\"token operator\">=</span> e<span class=\"token punctuation\">;</span><span class=\"token comment\">// 将新节点数据域变为 e</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>p<span class=\"token operator\">-></span>next <span class=\"token operator\">=</span> S<span class=\"token punctuation\">;</span><span class=\"token comment\">// 将新节点插入栈顶</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>S<span class=\"token operator\">=</span>p<span class=\"token punctuation\">;</span><span class=\"token comment\">//、、修改栈顶指针</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><figure class=\"highlight c\"><figcaption data-lang=\"c\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>Status <span class=\"token function\">Pop</span><span class=\"token punctuation\">(</span>SqStack <span class=\"token operator\">&amp;</span>s<span class=\"token punctuation\">,</span>SElemType e<span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>S<span class=\"token operator\">==</span><span class=\"token constant\">NULL</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    <span class=\"token keyword\">return</span> ERROR<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>e <span class=\"token operator\">=</span> S<span class=\"token operator\">-></span>data<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>p<span class=\"token operator\">=</span>S<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>S<span class=\"token operator\">=</span>S<span class=\"token operator\">-></span>next<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>delete p<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><p>#递归定义<br />\n若一个对象部分地包含自己，或用他自己给自己定义，则称这个对象是递归的<br />\n若一个过程直接或间接地调用自己，则称这个过程是递归的过程<br />\n递归工作栈 ———— 递归程序运行期间使用的数据存储区<br />\n “工作记录”———— 实在参数，局部变量，返回地址</p>\n",
            "tags": [
                "计算机科学",
                "数据结构与算法"
            ]
        },
        {
            "id": "https://love.youhuamao.xyz/2022/10/16/computer-science/DataStructureandalgorithm/%E6%A0%91%E5%92%8C%E4%BA%8C%E5%8F%89%E6%A0%91/",
            "url": "https://love.youhuamao.xyz/2022/10/16/computer-science/DataStructureandalgorithm/%E6%A0%91%E5%92%8C%E4%BA%8C%E5%8F%89%E6%A0%91/",
            "title": "树和二叉树",
            "date_published": "2022-10-15T16:00:00.000Z",
            "content_html": "<h1 id=\"树\"><a class=\"anchor\" href=\"#树\">#</a> 树</h1>\n<p class=\"gallery\" data-height=\"750px\"><img data-src=\"/pic/shujujiegouyusuanfa/img_31.png\" alt=\"img_31.png\" /></p>\n<h1 id=\"树的定义\"><a class=\"anchor\" href=\"#树的定义\">#</a> 树的定义</h1>\n<p class=\"gallery\" data-height=\"750px\"><img data-src=\"/pic/shujujiegouyusuanfa/img_34.png\" alt=\"img_34.png\" /><br />\n{.gallery data-height=&quot;750px&quot;}<br />\n 树的深度：树中节点最大层次<br />\n有序树：树中结点的各子树从左至右有次序 (最左边的为第一个孩子)<br />\n 无序树：树中结点的各子树无次序<br />\n森林是 m (m&gt;=0) 棵互不相交的树的集合。<br />\n<img data-src=\"/pic/shujujiegouyusuanfa/img_35.png\" alt=\"img_35.png\" /></p>\n<h1 id=\"二叉树\"><a class=\"anchor\" href=\"#二叉树\">#</a> 二叉树</h1>\n<p class=\"gallery\" data-height=\"750px\">二叉树是 n (a≥0) 个结点的有限集，它或者是空集 (n= 0), 或者由一个根结点及两棵互不相<br />\n交的分别称作这个根的左子树和右子树的二叉树组成。<br />\n<img data-src=\"/pic/shujujiegouyusuanfa/img_36.png\" alt=\"img_36.png\" /></p>\n<h1 id=\"二叉树的抽象数据类型定义\"><a class=\"anchor\" href=\"#二叉树的抽象数据类型定义\">#</a> 二叉树的抽象数据类型定义</h1>\n<p class=\"gallery\" data-height=\"750px\"><img data-src=\"/pic/shujujiegouyusuanfa/img_37.png\" alt=\"img_37.png\" /></p>\n<h1 id=\"二叉树的性质和存储结构\"><a class=\"anchor\" href=\"#二叉树的性质和存储结构\">#</a> 二叉树的性质和存储结构</h1>\n<p>满二叉树：一棵深度为 k 且有 2^k- 1 个结点的二叉树称为满二叉树。</p>\n<p class=\"gallery\" data-height=\"750px\">完全二叉树：深度为 k 的具有 n 个结点的二叉树，当且仅当其每一个结点都与深度为 k 的满二二叉树中编<br />\n号为 1~ n 的结点一一对应时，称之为完全二叉树<br />\n<img data-src=\"/pic/shujujiegouyusuanfa/img_39.png\" alt=\"img_39.png\" /></p>\n<p class=\"gallery\" data-height=\"750px\">性质 1: 在 = 叉树的第 i 层上至多有 2^i-1 个结点 (i≥1)<br />\n 性质 2: 深度为 k 的二叉树至多有 2^k-1 个结点 (k≥1)<br />\n 性质 3: 对任何一棵二叉树 T, 如果其叶子数为 no, 度为 2 的结点数为 n2, 则 no=2+1<br />\n<img data-src=\"/pic/shujujiegouyusuanfa/img_38.png\" alt=\"img_38.png\" /><br />\n<img data-src=\"/pic/shujujiegouyusuanfa/img_40.png\" alt=\"img_40.png\" /></p>\n<h1 id=\"二叉树的顺序存储\"><a class=\"anchor\" href=\"#二叉树的顺序存储\">#</a> 二叉树的顺序存储</h1>\n<p class=\"gallery\" data-height=\"750px\"><img data-src=\"/pic/shujujiegouyusuanfa/img_41.png\" alt=\"img_41.png\" /></p>\n<h1 id=\"二叉树链式存储\"><a class=\"anchor\" href=\"#二叉树链式存储\">#</a> 二叉树链式存储</h1>\n<p class=\"gallery\" data-height=\"750px\"><img data-src=\"/pic/shujujiegouyusuanfa/img_42.png\" alt=\"img_42.png\" /></p>\n<h1 id=\"三叉链表\"><a class=\"anchor\" href=\"#三叉链表\">#</a> 三叉链表</h1>\n<p class=\"gallery\" data-height=\"750px\"><img data-src=\"/pic/shujujiegouyusuanfa/img_43.png\" alt=\"img_43.png\" /></p>\n<h1 id=\"二叉树的遍历\"><a class=\"anchor\" href=\"#二叉树的遍历\">#</a> 二叉树的遍历</h1>\n<p class=\"gallery\" data-height=\"750px\"><img data-src=\"/pic/shujujiegouyusuanfa/img_44.png\" alt=\"img_44.png\" /></p>\n<h1 id=\"二叉树表示算数表达式\"><a class=\"anchor\" href=\"#二叉树表示算数表达式\">#</a> 二叉树表示算数表达式</h1>\n<p class=\"gallery\" data-height=\"750px\"><img data-src=\"/pic/shujujiegouyusuanfa/img_45.png\" alt=\"img_45.png\" /></p>\n<h1 id=\"已知先序和中序求二叉树\"><a class=\"anchor\" href=\"#已知先序和中序求二叉树\">#</a> 已知先序和中序求二叉树</h1>\n<p class=\"gallery\" data-height=\"750px\"><img data-src=\"/pic/shujujiegouyusuanfa/img_46.png\" alt=\"img_46.png\" /></p>\n<h1 id=\"已知后序和中序求二叉树\"><a class=\"anchor\" href=\"#已知后序和中序求二叉树\">#</a> 已知后序和中序求二叉树</h1>\n<p class=\"gallery\" data-height=\"750px\"><img data-src=\"/pic/shujujiegouyusuanfa/img_47.png\" alt=\"img_47.png\" /></p>\n<h1 id=\"二叉树先序遍历\"><a class=\"anchor\" href=\"#二叉树先序遍历\">#</a> 二叉树先序遍历</h1>\n<p class=\"gallery\" data-height=\"750px\"><img data-src=\"/pic/shujujiegouyusuanfa/img_49.png\" alt=\"img_49.png\" /></p>\n<h1 id=\"二叉树中序遍历\"><a class=\"anchor\" href=\"#二叉树中序遍历\">#</a> 二叉树中序遍历</h1>\n<p class=\"gallery\" data-height=\"750px\"><img data-src=\"/pic/shujujiegouyusuanfa/img_48.png\" alt=\"img_48.png\" /></p>\n<h1 id=\"后序遍历\"><a class=\"anchor\" href=\"#后序遍历\">#</a> 后序遍历</h1>\n<p class=\"gallery\" data-height=\"750px\"><img data-src=\"/pic/shujujiegouyusuanfa/img_50.png\" alt=\"img_50.png\" /></p>\n<h1 id=\"中序遍历的非递归算法\"><a class=\"anchor\" href=\"#中序遍历的非递归算法\">#</a> 中序遍历的非递归算法</h1>\n<p class=\"gallery\" data-height=\"750px\"><img data-src=\"/pic/shujujiegouyusuanfa/img_51.png\" alt=\"img_51.png\" /></p>\n<h1 id=\"二叉树的层次遍历\"><a class=\"anchor\" href=\"#二叉树的层次遍历\">#</a> 二叉树的层次遍历</h1>\n<p class=\"gallery\" data-height=\"750px\"><img data-src=\"/pic/shujujiegouyusuanfa/img_52.png\" alt=\"img_52.png\" /><br />\n<img data-src=\"/pic/shujujiegouyusuanfa/img_53.png\" alt=\"img_53.png\" /></p>\n<h1 id=\"按先序遍历序列建立二叉树的二叉链表\"><a class=\"anchor\" href=\"#按先序遍历序列建立二叉树的二叉链表\">#</a> 按先序遍历序列建立二叉树的二叉链表</h1>\n<p class=\"gallery\" data-height=\"750px\"><img data-src=\"/pic/shujujiegouyusuanfa/img_54.png\" alt=\"img_54.png\" /></p>\n<h1 id=\"复制二叉树\"><a class=\"anchor\" href=\"#复制二叉树\">#</a> 复制二叉树</h1>\n<p class=\"gallery\" data-height=\"750px\"><img data-src=\"/pic/shujujiegouyusuanfa/img_55.png\" alt=\"img_55.png\" /></p>\n<h1 id=\"计算二叉树深度\"><a class=\"anchor\" href=\"#计算二叉树深度\">#</a> 计算二叉树深度</h1>\n<p class=\"gallery\" data-height=\"750px\"><img data-src=\"/pic/shujujiegouyusuanfa/img_56.png\" alt=\"img_56.png\" /></p>\n<h1 id=\"计算节总数\"><a class=\"anchor\" href=\"#计算节总数\">#</a> 计算节总数</h1>\n<p class=\"gallery\" data-height=\"750px\"><img data-src=\"/pic/shujujiegouyusuanfa/img_57.png\" alt=\"img_57.png\" /></p>\n<h1 id=\"计算叶子节点\"><a class=\"anchor\" href=\"#计算叶子节点\">#</a> 计算叶子节点</h1>\n<p class=\"gallery\" data-height=\"750px\"><img data-src=\"/pic/shujujiegouyusuanfa/img_58.png\" alt=\"img_58.png\" /></p>\n<h1 id=\"线索二叉树\"><a class=\"anchor\" href=\"#线索二叉树\">#</a> 线索二叉树</h1>\n<p class=\"gallery\" data-height=\"750px\"><img data-src=\"/pic/shujujiegouyusuanfa/img_59.png\" alt=\"img_59.png\" /><br />\n<img data-src=\"/pic/shujujiegouyusuanfa/img_60.png\" alt=\"img_60.png\" /><br />\n<img data-src=\"/pic/shujujiegouyusuanfa/img_61.png\" alt=\"img_61.png\" /><br />\n<img data-src=\"/pic/shujujiegouyusuanfa/img_62.png\" alt=\"img_62.png\" /></p>\n<h1 id=\"树的存储结构\"><a class=\"anchor\" href=\"#树的存储结构\">#</a> 树的存储结构</h1>\n<h2 id=\"双亲表示法\"><a class=\"anchor\" href=\"#双亲表示法\">#</a> 双亲表示法</h2>\n<p class=\"gallery\" data-height=\"750px\"><img data-src=\"/pic/shujujiegouyusuanfa/img_63.png\" alt=\"img_63.png\" /><br />\n<img data-src=\"/pic/shujujiegouyusuanfa/img_64.png\" alt=\"img_64.png\" /></p>\n<h2 id=\"孩子链表\"><a class=\"anchor\" href=\"#孩子链表\">#</a> 孩子链表</h2>\n<p class=\"gallery\" data-height=\"750px\"><img data-src=\"/pic/shujujiegouyusuanfa/img_65.png\" alt=\"img_65.png\" /><br />\n<img data-src=\"/pic/shujujiegouyusuanfa/img_66.png\" alt=\"img_66.png\" /><br />\n<img data-src=\"/pic/shujujiegouyusuanfa/img_67.png\" alt=\"img_67.png\" /></p>\n<h2 id=\"孩子兄弟表示法\"><a class=\"anchor\" href=\"#孩子兄弟表示法\">#</a> 孩子兄弟表示法</h2>\n<p class=\"gallery\" data-height=\"750px\"><img data-src=\"/pic/shujujiegouyusuanfa/img_68.png\" alt=\"img_68.png\" /></p>\n<h1 id=\"将树转化为二叉树\"><a class=\"anchor\" href=\"#将树转化为二叉树\">#</a> 将树转化为二叉树</h1>\n<p class=\"gallery\" data-height=\"750px\"><img data-src=\"/pic/shujujiegouyusuanfa/img_69.png\" alt=\"img_69.png\" /></p>\n<h1 id=\"将二叉树变为树\"><a class=\"anchor\" href=\"#将二叉树变为树\">#</a> 将二叉树变为树</h1>\n<p class=\"gallery\" data-height=\"750px\"><img data-src=\"/pic/shujujiegouyusuanfa/img_70.png\" alt=\"img_70.png\" /></p>\n<h1 id=\"森林变为二叉树\"><a class=\"anchor\" href=\"#森林变为二叉树\">#</a> 森林变为二叉树</h1>\n<p class=\"gallery\" data-height=\"750px\"><img data-src=\"/pic/shujujiegouyusuanfa/img_71.png\" alt=\"img_71.png\" /></p>\n<h1 id=\"二叉树变为森林\"><a class=\"anchor\" href=\"#二叉树变为森林\">#</a> 二叉树变为森林</h1>\n<p class=\"gallery\" data-height=\"750px\"><img data-src=\"/pic/shujujiegouyusuanfa/img_72.png\" alt=\"img_72.png\" /></p>\n<h1 id=\"树与森林的遍历\"><a class=\"anchor\" href=\"#树与森林的遍历\">#</a> 树与森林的遍历</h1>\n<p class=\"gallery\" data-height=\"750px\"><img data-src=\"/pic/shujujiegouyusuanfa/img_73.png\" alt=\"img_73.png\" /><br />\n<img data-src=\"/pic/shujujiegouyusuanfa/img_74.png\" alt=\"img_74.png\" /><br />\n<img data-src=\"/pic/shujujiegouyusuanfa/img_76.png\" alt=\"img_76.png\" /></p>\n",
            "tags": [
                "计算机科学",
                "数据结构与算法"
            ]
        },
        {
            "id": "https://love.youhuamao.xyz/2022/10/16/computer-science/DataStructureandalgorithm/%E7%BA%BF%E6%80%A7%E8%A1%A8%E7%9A%84%E7%B1%BB%E5%9E%8B%E5%AE%9A%E4%B9%89/",
            "url": "https://love.youhuamao.xyz/2022/10/16/computer-science/DataStructureandalgorithm/%E7%BA%BF%E6%80%A7%E8%A1%A8%E7%9A%84%E7%B1%BB%E5%9E%8B%E5%AE%9A%E4%B9%89/",
            "title": "线性表的类型定义",
            "date_published": "2022-10-15T16:00:00.000Z",
            "content_html": "<h1 id=\"线性表\"><a class=\"anchor\" href=\"#线性表\">#</a> 线性表</h1>\n<p>线性表是具有相同特性的数据元素的一个有限序列<br />\n特征：仅有一个开始节点，没有直接前趋，只有直接后继，仅有一个终端节点，没有直<br />\n接后继，只有直接前趋</p>\n<h2 id=\"基本操作\"><a class=\"anchor\" href=\"#基本操作\">#</a> 基本操作</h2>\n<p class=\"gallery\" data-height=\"750px\"><img data-src=\"/pic/shujujiegouyusuanfa/img_1.png\" alt=\"img_1.png\" /><br />\n<img data-src=\"/pic/shujujiegouyusuanfa/img_2.png\" alt=\"img_2.png\" /><br />\n<img data-src=\"/pic/shujujiegouyusuanfa/img_3.png\" alt=\"img_3.png\" /><br />\n<img data-src=\"/pic/shujujiegouyusuanfa/img_4.png\" alt=\"img_4.png\" /><br />\n<img data-src=\"/pic/shujujiegouyusuanfa/img_5.png\" alt=\"img_5.png\" /><br />\n<img data-src=\"/pic/shujujiegouyusuanfa/img_6.png\" alt=\"img_6.png\" /></p>\n<h1 id=\"线性表的顺序存储表示\"><a class=\"anchor\" href=\"#线性表的顺序存储表示\">#</a> 线性表的顺序存储表示</h1>\n<p>线性表的顺序表示又称为顺序存储结构和顺序映像</p>\n<h2 id=\"顺序存储定义\"><a class=\"anchor\" href=\"#顺序存储定义\">#</a> 顺序存储定义</h2>\n<p>顺序存储定义：<br />\n把逻辑上相邻的数据元素存储在物理上相邻的存储单元中的存储结构<br />\n线性表的第一个数据元素 a1 的存储位置，称作线性表的起始位置或基地址<br />\n占用一片连续的存储空间<br />\n顺序表类型定义</p>\n<figure class=\"highlight c\"><figcaption data-lang=\"c\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">typedef</span> <span class=\"token keyword\">struct</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>    ElemType data<span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>    #ElemType<span class=\"token punctuation\">,</span>任意类型，如：<span class=\"token keyword\">int</span>，<span class=\"token keyword\">double</span>，<span class=\"token keyword\">float</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    <span class=\"token keyword\">int</span> length<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token punctuation\">&#125;</span>SqList</pre></td></tr></table></figure><p>typedef char ElemType;  #将 ElemType 定义为 char 型<br />\n也可定义复杂类型，如：typedef SqList ElemType</p>\n<figure class=\"highlight c\"><figcaption data-lang=\"c\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">typedef</span> <span class=\"token keyword\">struct</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>    ElemType <span class=\"token operator\">*</span>data<span class=\"token punctuation\">;</span>   #动态分配</pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    <span class=\"token keyword\">int</span> length<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token punctuation\">&#125;</span>SqList</pre></td></tr></table></figure><p class=\"gallery\" data-height=\"750px\"><img data-src=\"/pic/shujujiegouyusuanfa/img_7.png\" alt=\"img_7.png\" /></p>\n<p class=\"gallery\" data-height=\"750px\">m 为整数，如果 m 为 800，每个类型要空间为 4，就会开辟 200 个空间<br />\n<img data-src=\"/pic/shujujiegouyusuanfa/img_8.png\" alt=\"img_8.png\" /></p>\n",
            "tags": [
                "计算机科学",
                "数据结构与算法"
            ]
        },
        {
            "id": "https://love.youhuamao.xyz/2022/10/16/computer-science/DataStructureandalgorithm/%E7%BA%BF%E6%80%A7%E8%A1%A8%E7%9A%84%E9%93%BE%E5%BC%8F/",
            "url": "https://love.youhuamao.xyz/2022/10/16/computer-science/DataStructureandalgorithm/%E7%BA%BF%E6%80%A7%E8%A1%A8%E7%9A%84%E9%93%BE%E5%BC%8F/",
            "title": "线性表的链式",
            "date_published": "2022-10-15T16:00:00.000Z",
            "content_html": "<p>节点包括指针域和数据域</p>\n",
            "tags": [
                "计算机科学",
                "数据结构与算法"
            ]
        },
        {
            "id": "https://love.youhuamao.xyz/2022/10/15/shujuku/JDBC/",
            "url": "https://love.youhuamao.xyz/2022/10/15/shujuku/JDBC/",
            "title": "JDBC",
            "date_published": "2022-10-14T16:00:00.000Z",
            "content_html": "<h1 id=\"数据库驱动\"><a class=\"anchor\" href=\"#数据库驱动\">#</a> 数据库驱动</h1>\n<ul>\n<li>我们的程序会通过数据库驱动，和数据库打交道！</li>\n</ul>\n<h1 id=\"jdbc\"><a class=\"anchor\" href=\"#jdbc\">#</a> JDBC</h1>\n<ul>\n<li>SUN 公司为了简化开发人员的 (对数据库的统 - -) 操作，提供了一个 Java 操作数据库的) 规范，俗称 JDBC 这些规范的实现由具体的厂商去做</li>\n<li>对于开发人员来说，我们只需要掌握 JDBC 接口的操作即可！</li>\n</ul>\n<h1 id=\"第一个jdbc程序\"><a class=\"anchor\" href=\"#第一个jdbc程序\">#</a> 第一个 JDBC 程序</h1>\n<ul>\n<li>创建测试数据库</li>\n</ul>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>CREATE DATABASE jdbcstudy CHARACTER SET utf8 COLLATE utf8_general_ci<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token environment constant\">USER</span> jdbcstudy<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>CREATE TABLE users<span class=\"token punctuation\">(</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>  <span class=\"token variable\"><span class=\"token variable\">`</span><span class=\"token function\">id</span><span class=\"token variable\">`</span></span> INT PRIMARY KEY,</pre></td></tr><tr><td data-num=\"7\"></td><td><pre>  <span class=\"token variable\"><span class=\"token variable\">`</span>name<span class=\"token variable\">`</span></span> VARCHAR<span class=\"token punctuation\">(</span><span class=\"token number\">40</span><span class=\"token punctuation\">)</span>,</pre></td></tr><tr><td data-num=\"8\"></td><td><pre>  <span class=\"token variable\"><span class=\"token variable\">`</span>password<span class=\"token variable\">`</span></span> VARCHAR<span class=\"token punctuation\">(</span><span class=\"token number\">40</span><span class=\"token punctuation\">)</span>,</pre></td></tr><tr><td data-num=\"9\"></td><td><pre>  <span class=\"token variable\"><span class=\"token variable\">`</span>email<span class=\"token variable\">`</span></span> VARCHAR<span class=\"token punctuation\">(</span><span class=\"token number\">60</span><span class=\"token punctuation\">)</span>,</pre></td></tr><tr><td data-num=\"10\"></td><td><pre>  <span class=\"token variable\"><span class=\"token variable\">`</span>birthday<span class=\"token variable\">`</span></span> DATE</pre></td></tr><tr><td data-num=\"11\"></td><td><pre><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>INSERT INTO users<span class=\"token punctuation\">(</span><span class=\"token variable\"><span class=\"token variable\">`</span><span class=\"token function\">id</span><span class=\"token variable\">`</span></span>,<span class=\"token variable\"><span class=\"token variable\">`</span>name<span class=\"token variable\">`</span></span>,<span class=\"token variable\"><span class=\"token variable\">`</span>password<span class=\"token variable\">`</span></span>,<span class=\"token variable\"><span class=\"token variable\">`</span>email<span class=\"token variable\">`</span></span>,<span class=\"token variable\"><span class=\"token variable\">`</span>birthday<span class=\"token variable\">`</span></span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>VALUES<span class=\"token punctuation\">(</span><span class=\"token number\">1</span>,<span class=\"token string\">'张三'</span>,<span class=\"token string\">'123456'</span>,<span class=\"token string\">'zs@sina.com'</span>,<span class=\"token string\">'1980-12-04'</span><span class=\"token punctuation\">)</span>,</pre></td></tr><tr><td data-num=\"15\"></td><td><pre><span class=\"token punctuation\">(</span><span class=\"token number\">2</span>,<span class=\"token string\">'李四'</span>,<span class=\"token string\">'123456'</span>,<span class=\"token string\">'lisi@sina.com'</span>,<span class=\"token string\">'1981-12-04'</span><span class=\"token punctuation\">)</span>,</pre></td></tr><tr><td data-num=\"16\"></td><td><pre><span class=\"token punctuation\">(</span><span class=\"token number\">3</span>,<span class=\"token string\">'王五'</span>,<span class=\"token string\">'123456'</span>,<span class=\"token string\">'wangwu@sina.com'</span>,<span class=\"token string\">'1982-12-04'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr></table></figure><ul>\n<li>创建一个普通项目</li>\n<li>导入数据库驱动（jar 包）（版本要对应）</li>\n<li>编写测试代码</li>\n</ul>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token function\">import</span> java.sql.Connection<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token function\">import</span> java.sql.DriverManager<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token function\">import</span> java.sql.ResultSet<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token function\">import</span> java.sql.SQLException<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token function\">import</span> java.sql.Statement<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>/**</pre></td></tr><tr><td data-num=\"8\"></td><td><pre> * @ClassName: JDBCDemo01</pre></td></tr><tr><td data-num=\"9\"></td><td><pre> * @Description: 我的第一个JDBC程序</pre></td></tr><tr><td data-num=\"10\"></td><td><pre> * @Author: zyy</pre></td></tr><tr><td data-num=\"11\"></td><td><pre> * @Date: <span class=\"token number\">2021</span>/07/13 <span class=\"token number\">21</span>:59</pre></td></tr><tr><td data-num=\"12\"></td><td><pre> * @Version: <span class=\"token number\">1.0</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre> */</pre></td></tr><tr><td data-num=\"14\"></td><td><pre>public class JDBCDemo01 <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>    public static void main<span class=\"token punctuation\">(</span>String<span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> args<span class=\"token punctuation\">)</span> throws ClassNotFoundException, SQLException <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>        //1.加载驱动</pre></td></tr><tr><td data-num=\"17\"></td><td><pre>//        DriverManager.registerDriver<span class=\"token punctuation\">(</span>new com.mysql.jdbc.Driver<span class=\"token punctuation\">(</span><span class=\"token punctuation\">))</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>        //推荐这种写法加载驱动</pre></td></tr><tr><td data-num=\"19\"></td><td><pre>        Class.forName<span class=\"token punctuation\">(</span><span class=\"token string\">\"com.mysql.jdbc.Driver\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>        //2.用户信息和URL</pre></td></tr><tr><td data-num=\"21\"></td><td><pre>        // <span class=\"token assign-left variable\">useSSL</span><span class=\"token operator\">=</span>true可能会报错</pre></td></tr><tr><td data-num=\"22\"></td><td><pre>        String url <span class=\"token operator\">=</span> <span class=\"token string\">\"jdbc:mysql://localhost:3306/jdbcstudy?useUnicode=true&amp;characterEncoding=utf8&amp;useSSL=false\"</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>        String userName <span class=\"token operator\">=</span> <span class=\"token string\">\"root\"</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>        String passWord <span class=\"token operator\">=</span> <span class=\"token string\">\"123456\"</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre>        //3.连接成功，数据库对象 Connection代表数据库</pre></td></tr><tr><td data-num=\"26\"></td><td><pre>        Connection connection <span class=\"token operator\">=</span> DriverManager.getConnection<span class=\"token punctuation\">(</span>url, userName, passWord<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre>        //4.执行SQl的对象 Statement 执行的sql对象</pre></td></tr><tr><td data-num=\"28\"></td><td><pre>        Statement statement <span class=\"token operator\">=</span> connection.createStatement<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"29\"></td><td><pre>        //5.执行SQL的对象 去 执行SQL ，可能存在结果，查看返回的结果</pre></td></tr><tr><td data-num=\"30\"></td><td><pre>        String sql <span class=\"token operator\">=</span> <span class=\"token string\">\"SELECT * FROM users\"</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"31\"></td><td><pre>        //返回的结果集 结果集中封装了我们全部的查询的结果</pre></td></tr><tr><td data-num=\"32\"></td><td><pre>        ResultSet resultSet <span class=\"token operator\">=</span> statement.executeQuery<span class=\"token punctuation\">(</span>sql<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"33\"></td><td><pre>        <span class=\"token keyword\">while</span> <span class=\"token punctuation\">(</span>resultSet.next<span class=\"token punctuation\">(</span><span class=\"token punctuation\">))</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"34\"></td><td><pre>            System.out.println<span class=\"token punctuation\">(</span><span class=\"token string\">\"id=\"</span>+resultSet.getObject<span class=\"token punctuation\">(</span><span class=\"token string\">\"id\"</span><span class=\"token punctuation\">))</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"35\"></td><td><pre>            System.out.println<span class=\"token punctuation\">(</span><span class=\"token string\">\"name=\"</span>+resultSet.getObject<span class=\"token punctuation\">(</span><span class=\"token string\">\"name\"</span><span class=\"token punctuation\">))</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"36\"></td><td><pre>            System.out.println<span class=\"token punctuation\">(</span><span class=\"token string\">\"password=\"</span>+resultSet.getObject<span class=\"token punctuation\">(</span><span class=\"token string\">\"password\"</span><span class=\"token punctuation\">))</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"37\"></td><td><pre>            System.out.println<span class=\"token punctuation\">(</span><span class=\"token string\">\"email=\"</span>+resultSet.getObject<span class=\"token punctuation\">(</span><span class=\"token string\">\"email\"</span><span class=\"token punctuation\">))</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"38\"></td><td><pre>            System.out.println<span class=\"token punctuation\">(</span><span class=\"token string\">\"birthday=\"</span>+resultSet.getObject<span class=\"token punctuation\">(</span><span class=\"token string\">\"birthday\"</span><span class=\"token punctuation\">))</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"39\"></td><td><pre>            System.out.println<span class=\"token punctuation\">(</span><span class=\"token string\">\"===============================\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"40\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"41\"></td><td><pre>        //6.释放连接</pre></td></tr><tr><td data-num=\"42\"></td><td><pre>        resultSet.close<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"43\"></td><td><pre>        statement.close<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"44\"></td><td><pre>        connection.close<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"45\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"46\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><ul>\n<li>步骤</li>\n</ul>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>加载驱动</pre></td></tr><tr><td data-num=\"2\"></td><td><pre>连接数据库DriverManager</pre></td></tr><tr><td data-num=\"3\"></td><td><pre>获取执行SQL的对象 Statement</pre></td></tr><tr><td data-num=\"4\"></td><td><pre>获得返回的结果集</pre></td></tr><tr><td data-num=\"5\"></td><td><pre>释放连接</pre></td></tr></table></figure><h1 id=\"对jdbc中对象解释\"><a class=\"anchor\" href=\"#对jdbc中对象解释\">#</a> 对 JDBC 中对象解释</h1>\n<ul>\n<li>DriverManager</li>\n</ul>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>//1.加载驱动</pre></td></tr><tr><td data-num=\"2\"></td><td><pre>//DriverManager.registerDriver<span class=\"token punctuation\">(</span>new com.mysql.jdbc.Driver<span class=\"token punctuation\">(</span><span class=\"token punctuation\">))</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>Class.forName<span class=\"token punctuation\">(</span><span class=\"token string\">\"com.mysql.jdbc.Driver\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">#固定写法加载驱动</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>Connection connection <span class=\"token operator\">=</span> DriverManager.getConnection<span class=\"token punctuation\">(</span>url, userName, passWord<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>// connection代表数据库</pre></td></tr><tr><td data-num=\"7\"></td><td><pre>// 数据库设置自动提交</pre></td></tr><tr><td data-num=\"8\"></td><td><pre>// 事务提交</pre></td></tr><tr><td data-num=\"9\"></td><td><pre>// 事务回滚</pre></td></tr><tr><td data-num=\"10\"></td><td><pre>connection.setAutoCommit<span class=\"token punctuation\">(</span>true<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>connection.commit<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>connection.rollback<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr></table></figure><ul>\n<li>URL</li>\n</ul>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>String url <span class=\"token operator\">=</span> <span class=\"token string\">\"jdbc:mysql://localhost:3306/jdbcstudy?useUnicode=true&amp;characterEncoding=utf8&amp;useSSL=false\"</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>// mysql默认端口3306</pre></td></tr><tr><td data-num=\"4\"></td><td><pre>// 协议://主机地址:端口号/数据库名?参数1<span class=\"token operator\">&amp;</span>参数2<span class=\"token operator\">&amp;</span>参数3</pre></td></tr><tr><td data-num=\"5\"></td><td><pre></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>// oracle默认端口1521</pre></td></tr><tr><td data-num=\"7\"></td><td><pre>// jdbc:oracle:thin:@localhost:1521:sid</pre></td></tr></table></figure><ul>\n<li>Statement 执行 sql 对象 、 PreparedStatement 执行 sql 对象</li>\n</ul>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>String sql <span class=\"token operator\">=</span> <span class=\"token string\">\"SELECT * FROM users\"</span><span class=\"token punctuation\">;</span>//编写SQL</pre></td></tr><tr><td data-num=\"2\"></td><td><pre></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>statement.executeQuery<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>//执行查询 返回ResultSet</pre></td></tr><tr><td data-num=\"4\"></td><td><pre>statement.execute<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>//执行任何SQL</pre></td></tr><tr><td data-num=\"5\"></td><td><pre>statement.executeUpdate<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>//新增，删除，修改，都用这个，返回受影响的行数</pre></td></tr></table></figure><ul>\n<li>获得指定的数据类型</li>\n</ul>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>resultSet.getObject<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>//在不知道列类型的情况下使用</pre></td></tr><tr><td data-num=\"2\"></td><td><pre>//如果知道列类型，就使用指定的类型</pre></td></tr><tr><td data-num=\"3\"></td><td><pre>resultSet.getString<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>resultSet.getInt<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>resultSet.getDouble<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>resultSet.getBigDecimal<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>resultSet.getFloat<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>resultSet.getDate<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>//<span class=\"token punctuation\">..</span>.</pre></td></tr></table></figure><ul>\n<li>遍历，指针</li>\n</ul>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>resultSet.beforeFirst<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>//移动到最前面</pre></td></tr><tr><td data-num=\"2\"></td><td><pre>resultSet.afterLast<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>//移动到最后面</pre></td></tr><tr><td data-num=\"3\"></td><td><pre>resultSet.next<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>//移动到下一个数据</pre></td></tr><tr><td data-num=\"4\"></td><td><pre>resultSet.previous<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>//移动到前一行</pre></td></tr><tr><td data-num=\"5\"></td><td><pre>resultSet.absolute<span class=\"token punctuation\">(</span>row<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>//移动到指定行</pre></td></tr></table></figure><ul>\n<li>释放资源</li>\n</ul>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>resultSet.close<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>statement.close<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>connection.close<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>//消耗资源</pre></td></tr></table></figure><ul>\n<li>CRUD 操作 - create</li>\n</ul>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>Statement statement <span class=\"token operator\">=</span> connection.createStatement<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>String sql <span class=\"token operator\">=</span> <span class=\"token string\">\"insert into user(...) values(...)\"</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>int num <span class=\"token operator\">=</span> statement.executeUpdate<span class=\"token punctuation\">(</span>sql<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>num <span class=\"token operator\">></span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    System.out.println<span class=\"token punctuation\">(</span><span class=\"token string\">\"插入成功~\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><ul>\n<li>CRUD 操作 - delete</li>\n</ul>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>Statement statement <span class=\"token operator\">=</span> connection.createStatement<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>String sql <span class=\"token operator\">=</span> <span class=\"token string\">\"delete from user where id=1\"</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>int num <span class=\"token operator\">=</span> statement.executeUpdate<span class=\"token punctuation\">(</span>sql<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>num <span class=\"token operator\">></span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    System.out.println<span class=\"token punctuation\">(</span><span class=\"token string\">\"删除成功~\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><ul>\n<li>CRUD 操作 - update</li>\n</ul>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>Statement statement <span class=\"token operator\">=</span> connection.createStatement<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>String sql <span class=\"token operator\">=</span> <span class=\"token string\">\"update user set name='' where name =''\"</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>int num <span class=\"token operator\">=</span> statement.executeUpdate<span class=\"token punctuation\">(</span>sql<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>num <span class=\"token operator\">></span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    System.out.println<span class=\"token punctuation\">(</span><span class=\"token string\">\"修改成功~\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><ul>\n<li>CRUD 操作 - read</li>\n</ul>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>Statement statement <span class=\"token operator\">=</span> connection.createStatement<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>String sql <span class=\"token operator\">=</span> <span class=\"token string\">\"SELECT * FROM users\"</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>ResultSet resultSet <span class=\"token operator\">=</span> statement.executeQuery<span class=\"token punctuation\">(</span>sql<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token keyword\">while</span> <span class=\"token punctuation\">(</span>resultSet.next<span class=\"token punctuation\">(</span><span class=\"token punctuation\">))</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    //根据获取列的数据类型，分别调用resultSet的相应方法映射到java对象中</pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><h1 id=\"增删查改\"><a class=\"anchor\" href=\"#增删查改\">#</a> 增删查改</h1>\n<ul>\n<li>工具类</li>\n</ul>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>package com.kuang.lesson02.utils<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token function\">import</span> java.io.IOException<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token function\">import</span> java.io.InputStream<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token function\">import</span> java.sql.Connection<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token function\">import</span> java.sql.DriverManager<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token function\">import</span> java.sql.ResultSet<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token function\">import</span> java.sql.SQLException<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre><span class=\"token function\">import</span> java.sql.Statement<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre><span class=\"token function\">import</span> java.util.Properties<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>public class JdbcUtils <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>    private static String driver <span class=\"token operator\">=</span> null<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>    private static String url <span class=\"token operator\">=</span> null<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>    private static String username <span class=\"token operator\">=</span> null<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>    private static String password <span class=\"token operator\">=</span> null<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>    static <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>        try <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>            InputStream <span class=\"token keyword\">in</span> <span class=\"token operator\">=</span> JdbcUtils.class.getClassLoader<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>.getResourceAsStream<span class=\"token punctuation\">(</span><span class=\"token string\">\"db.properties\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>            Properties properties <span class=\"token operator\">=</span> new Properties<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>            properties.load<span class=\"token punctuation\">(</span>in<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>            driver <span class=\"token operator\">=</span> properties.getProperty<span class=\"token punctuation\">(</span><span class=\"token string\">\"driver\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre>            url <span class=\"token operator\">=</span> properties.getProperty<span class=\"token punctuation\">(</span><span class=\"token string\">\"url\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre>            username <span class=\"token operator\">=</span> properties.getProperty<span class=\"token punctuation\">(</span><span class=\"token string\">\"username\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre>            password <span class=\"token operator\">=</span> properties.getProperty<span class=\"token punctuation\">(</span><span class=\"token string\">\"password\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre></pre></td></tr><tr><td data-num=\"29\"></td><td><pre>            //驱动只用加载一次</pre></td></tr><tr><td data-num=\"30\"></td><td><pre>            Class.forName<span class=\"token punctuation\">(</span>driver<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"31\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span> catch <span class=\"token punctuation\">(</span>IOException e<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"32\"></td><td><pre>            e.printStackTrace<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"33\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span> catch <span class=\"token punctuation\">(</span>ClassNotFoundException e<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"34\"></td><td><pre>            e.printStackTrace<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"35\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"36\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"37\"></td><td><pre></pre></td></tr><tr><td data-num=\"38\"></td><td><pre>    /**</pre></td></tr><tr><td data-num=\"39\"></td><td><pre>     * 获取连接</pre></td></tr><tr><td data-num=\"40\"></td><td><pre>     */</pre></td></tr><tr><td data-num=\"41\"></td><td><pre>    public static Connection getConnection<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> throws SQLException <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"42\"></td><td><pre>        <span class=\"token builtin class-name\">return</span> DriverManager.getConnection<span class=\"token punctuation\">(</span>url, username, password<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"43\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"44\"></td><td><pre></pre></td></tr><tr><td data-num=\"45\"></td><td><pre>    /**</pre></td></tr><tr><td data-num=\"46\"></td><td><pre>     * 释放资源</pre></td></tr><tr><td data-num=\"47\"></td><td><pre>     */</pre></td></tr><tr><td data-num=\"48\"></td><td><pre>    public static void release<span class=\"token punctuation\">(</span>Connection con, Statement st, ResultSet rs<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"49\"></td><td><pre>        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>rs <span class=\"token operator\">!=</span> null<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"50\"></td><td><pre>            try <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"51\"></td><td><pre>                rs.close<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"52\"></td><td><pre>            <span class=\"token punctuation\">&#125;</span> catch <span class=\"token punctuation\">(</span>SQLException e<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"53\"></td><td><pre>                e.printStackTrace<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"54\"></td><td><pre>            <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"55\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"56\"></td><td><pre>        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>st <span class=\"token operator\">!=</span> null<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"57\"></td><td><pre>            try <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"58\"></td><td><pre>                st.close<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"59\"></td><td><pre>            <span class=\"token punctuation\">&#125;</span> catch <span class=\"token punctuation\">(</span>SQLException e<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"60\"></td><td><pre>                e.printStackTrace<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"61\"></td><td><pre>            <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"62\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"63\"></td><td><pre>        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>con <span class=\"token operator\">!=</span> null<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"64\"></td><td><pre>            try <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"65\"></td><td><pre>                con.close<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"66\"></td><td><pre>            <span class=\"token punctuation\">&#125;</span> catch <span class=\"token punctuation\">(</span>SQLException e<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"67\"></td><td><pre>                e.printStackTrace<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"68\"></td><td><pre>            <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"69\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"70\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"71\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><ul>\n<li>db.properties</li>\n</ul>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token assign-left variable\">driver</span><span class=\"token operator\">=</span>com.mysql.jdbc.Driver</pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token assign-left variable\">url</span><span class=\"token operator\">=</span>jdbc:mysql://localhost:3306/jdbcstudy?useUnicode<span class=\"token operator\">=</span>true<span class=\"token operator\">&amp;</span><span class=\"token assign-left variable\">characterEncoding</span><span class=\"token operator\">=</span>utf8<span class=\"token operator\">&amp;</span><span class=\"token assign-left variable\">useSSL</span><span class=\"token operator\">=</span>false</pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token assign-left variable\">username</span><span class=\"token operator\">=</span>root</pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token assign-left variable\">password</span><span class=\"token operator\">=</span>g123698745</pre></td></tr></table></figure><ul>\n<li>插入</li>\n</ul>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>package com.kuang.lesson02.utils<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token function\">import</span> java.sql.Connection<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token function\">import</span> java.sql.ResultSet<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token function\">import</span> java.sql.SQLException<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token function\">import</span> java.sql.Statement<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>public class TestInsert <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>    public static void main<span class=\"token punctuation\">(</span>String<span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> args<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>        Connection con <span class=\"token operator\">=</span> null<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>        Statement st <span class=\"token operator\">=</span> null<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>        ResultSet rs <span class=\"token operator\">=</span> null<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>        try <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>            con <span class=\"token operator\">=</span> JdbcUtils.getConnection<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>            st <span class=\"token operator\">=</span> con.createStatement<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>            String sql <span class=\"token operator\">=</span> <span class=\"token string\">\"INSERT INTO users(<span class=\"token variable\"><span class=\"token variable\">`</span><span class=\"token function\">id</span><span class=\"token variable\">`</span></span>,<span class=\"token variable\"><span class=\"token variable\">`</span>name<span class=\"token variable\">`</span></span>,<span class=\"token variable\"><span class=\"token variable\">`</span>password<span class=\"token variable\">`</span></span>,<span class=\"token variable\"><span class=\"token variable\">`</span>email<span class=\"token variable\">`</span></span>,<span class=\"token variable\"><span class=\"token variable\">`</span>birthday<span class=\"token variable\">`</span></span>)<span class=\"token entity\" title=\"\\n\">\\n</span>\"</span> +</pre></td></tr><tr><td data-num=\"17\"></td><td><pre>                    <span class=\"token string\">\"VALUES (5,'钱七','123456','qianqi@sina.com','1988-12-04')\"</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>            int num <span class=\"token operator\">=</span> st.executeUpdate<span class=\"token punctuation\">(</span>sql<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>            <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>num <span class=\"token operator\">></span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>                System.out.println<span class=\"token punctuation\">(</span><span class=\"token string\">\"插入成功！\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>            <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span> catch <span class=\"token punctuation\">(</span>SQLException e<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>            e.printStackTrace<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span> finally <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre>            JdbcUtils.release<span class=\"token punctuation\">(</span>con, st, rs<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre></pre></td></tr><tr><td data-num=\"29\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"30\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><ul>\n<li>删除</li>\n</ul>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>package com.kuang.lesson02.utils<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token function\">import</span> java.sql.Connection<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token function\">import</span> java.sql.ResultSet<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token function\">import</span> java.sql.SQLException<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token function\">import</span> java.sql.Statement<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>public class TestDelete <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>    public static void main<span class=\"token punctuation\">(</span>String<span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> args<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>        Connection con <span class=\"token operator\">=</span> null<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>        Statement st <span class=\"token operator\">=</span> null<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>        ResultSet rs <span class=\"token operator\">=</span> null<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>        try <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>            con <span class=\"token operator\">=</span> JdbcUtils.getConnection<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>            st <span class=\"token operator\">=</span> con.createStatement<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>            String sql <span class=\"token operator\">=</span> <span class=\"token string\">\"DELETE FROM users WHERE <span class=\"token variable\"><span class=\"token variable\">`</span><span class=\"token function\">id</span><span class=\"token variable\">`</span></span>=5\"</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>            int num <span class=\"token operator\">=</span> st.executeUpdate<span class=\"token punctuation\">(</span>sql<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>            <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>num <span class=\"token operator\">></span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>                System.out.println<span class=\"token punctuation\">(</span><span class=\"token string\">\"删除成功！\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>            <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span> catch <span class=\"token punctuation\">(</span>SQLException e<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>            e.printStackTrace<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span> finally <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre>            JdbcUtils.release<span class=\"token punctuation\">(</span>con, st, rs<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre></pre></td></tr><tr><td data-num=\"28\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"29\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><ul>\n<li>更新</li>\n</ul>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>package com.kuang.lesson02.utils<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token function\">import</span> java.sql.Connection<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token function\">import</span> java.sql.ResultSet<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token function\">import</span> java.sql.SQLException<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token function\">import</span> java.sql.Statement<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>public class TestUpdate <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>    public static void main<span class=\"token punctuation\">(</span>String<span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> args<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>        Connection con <span class=\"token operator\">=</span> null<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>        Statement st <span class=\"token operator\">=</span> null<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>        ResultSet rs <span class=\"token operator\">=</span> null<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>        try <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>            con <span class=\"token operator\">=</span> JdbcUtils.getConnection<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>            st <span class=\"token operator\">=</span> con.createStatement<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>            String sql <span class=\"token operator\">=</span> <span class=\"token string\">\"UPDATE users SET birthday='1990-12-01' WHERE id=1\"</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>            int num <span class=\"token operator\">=</span> st.executeUpdate<span class=\"token punctuation\">(</span>sql<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>            <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>num <span class=\"token operator\">></span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>                System.out.println<span class=\"token punctuation\">(</span><span class=\"token string\">\"更新成功！\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>            <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span> catch <span class=\"token punctuation\">(</span>SQLException e<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>            e.printStackTrace<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span> finally <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre>            JdbcUtils.release<span class=\"token punctuation\">(</span>con, st, rs<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre></pre></td></tr><tr><td data-num=\"28\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"29\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><ul>\n<li>查询</li>\n</ul>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>package com.kuang.lesson02.utils<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token function\">import</span> java.sql.Connection<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token function\">import</span> java.sql.ResultSet<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token function\">import</span> java.sql.SQLException<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token function\">import</span> java.sql.Statement<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>public class TestDelete <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>    public static void main<span class=\"token punctuation\">(</span>String<span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> args<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>        Connection con <span class=\"token operator\">=</span> null<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>        Statement st <span class=\"token operator\">=</span> null<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>        ResultSet rs <span class=\"token operator\">=</span> null<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>        try <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>            con <span class=\"token operator\">=</span> JdbcUtils.getConnection<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>            st <span class=\"token operator\">=</span> con.createStatement<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>            String sql <span class=\"token operator\">=</span> <span class=\"token string\">\"SELECT * FROM users WHERE id=1\"</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>            rs <span class=\"token operator\">=</span> st.executeQuery<span class=\"token punctuation\">(</span>sql<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>            <span class=\"token keyword\">while</span> <span class=\"token punctuation\">(</span>rs.next<span class=\"token punctuation\">(</span><span class=\"token punctuation\">))</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>                System.out.println<span class=\"token punctuation\">(</span><span class=\"token string\">\"id=\"</span>+rs.getInt<span class=\"token punctuation\">(</span><span class=\"token string\">\"id\"</span><span class=\"token punctuation\">))</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>                System.out.println<span class=\"token punctuation\">(</span><span class=\"token string\">\"name=\"</span>+rs.getString<span class=\"token punctuation\">(</span><span class=\"token string\">\"name\"</span><span class=\"token punctuation\">))</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>            <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span> catch <span class=\"token punctuation\">(</span>SQLException e<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>            e.printStackTrace<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span> finally <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre>            JdbcUtils.release<span class=\"token punctuation\">(</span>con, st, rs<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre></pre></td></tr><tr><td data-num=\"28\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"29\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><h1 id=\"sql注入\"><a class=\"anchor\" href=\"#sql注入\">#</a> sql 注入</h1>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>package com.kuang.lesson02.utils<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token function\">import</span> java.sql.Connection<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token function\">import</span> java.sql.ResultSet<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token function\">import</span> java.sql.SQLException<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token function\">import</span> java.sql.Statement<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>public class SQLQuestion <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>    public static void main<span class=\"token punctuation\">(</span>String<span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> args<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>        //正常登录</pre></td></tr><tr><td data-num=\"12\"></td><td><pre>//        login<span class=\"token punctuation\">(</span><span class=\"token string\">\"张三\"</span>,<span class=\"token string\">\"1234567\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>        //sql注入</pre></td></tr><tr><td data-num=\"15\"></td><td><pre>        login<span class=\"token punctuation\">(</span><span class=\"token string\">\"' or '1=1\"</span>,<span class=\"token string\">\"123456\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>    /**</pre></td></tr><tr><td data-num=\"20\"></td><td><pre>     * 登录业务</pre></td></tr><tr><td data-num=\"21\"></td><td><pre>     */</pre></td></tr><tr><td data-num=\"22\"></td><td><pre>    public static void login<span class=\"token punctuation\">(</span>String userName, String password<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>        Connection con <span class=\"token operator\">=</span> null<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>        Statement st <span class=\"token operator\">=</span> null<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre>        ResultSet rs <span class=\"token operator\">=</span> null<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre>        try <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre>            con <span class=\"token operator\">=</span> JdbcUtils.getConnection<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre>            st <span class=\"token operator\">=</span> con.createStatement<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"29\"></td><td><pre>            String sql <span class=\"token operator\">=</span> <span class=\"token string\">\"SELECT * FROM users WHERE <span class=\"token variable\"><span class=\"token variable\">`</span>name<span class=\"token variable\">`</span></span>='\"</span>+userName+<span class=\"token string\">\"' AND <span class=\"token variable\"><span class=\"token variable\">`</span>password<span class=\"token variable\">`</span></span>='\"</span>+password+<span class=\"token string\">\"'\"</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"30\"></td><td><pre>            // SELECT * FROM <span class=\"token function\">users</span> WHERE <span class=\"token variable\"><span class=\"token variable\">`</span>name<span class=\"token variable\">`</span></span><span class=\"token operator\">=</span><span class=\"token string\">''</span> or <span class=\"token string\">'1=1'</span> AND <span class=\"token variable\"><span class=\"token variable\">`</span>password<span class=\"token variable\">`</span></span><span class=\"token operator\">=</span><span class=\"token string\">'123456'</span></pre></td></tr><tr><td data-num=\"31\"></td><td><pre>            System.out.println<span class=\"token punctuation\">(</span>sql<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"32\"></td><td><pre>            rs <span class=\"token operator\">=</span> st.executeQuery<span class=\"token punctuation\">(</span>sql<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"33\"></td><td><pre>            <span class=\"token keyword\">while</span> <span class=\"token punctuation\">(</span>rs.next<span class=\"token punctuation\">(</span><span class=\"token punctuation\">))</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"34\"></td><td><pre>                System.out.println<span class=\"token punctuation\">(</span><span class=\"token string\">\"password=\"</span>+rs.getInt<span class=\"token punctuation\">(</span><span class=\"token string\">\"password\"</span><span class=\"token punctuation\">))</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"35\"></td><td><pre>                System.out.println<span class=\"token punctuation\">(</span><span class=\"token string\">\"name=\"</span>+rs.getString<span class=\"token punctuation\">(</span><span class=\"token string\">\"name\"</span><span class=\"token punctuation\">))</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"36\"></td><td><pre>            <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"37\"></td><td><pre></pre></td></tr><tr><td data-num=\"38\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span> catch <span class=\"token punctuation\">(</span>SQLException e<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"39\"></td><td><pre>            e.printStackTrace<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"40\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span> finally <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"41\"></td><td><pre>            JdbcUtils.release<span class=\"token punctuation\">(</span>con, st, rs<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"42\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"43\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"44\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><h1 id=\"preparedstatement对象\"><a class=\"anchor\" href=\"#preparedstatement对象\">#</a> PreparedStatement 对象</h1>\n<p>可以防止 SQL 注入，效率更高</p>\n<ul>\n<li>插入</li>\n</ul>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>package com.kuang.lesson03<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token function\">import</span> com.kuang.lesson02.utils.JdbcUtils<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token function\">import</span> java.sql.Connection<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token function\">import</span> java.sql.PreparedStatement<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token function\">import</span> java.sql.ResultSet<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token function\">import</span> java.sql.SQLException<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>public class TestInster <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>    public static void main<span class=\"token punctuation\">(</span>String<span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> args<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>        Connection conn <span class=\"token operator\">=</span> null<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>        PreparedStatement st <span class=\"token operator\">=</span> null<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>        ResultSet rs <span class=\"token operator\">=</span> null<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>        try <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>            conn <span class=\"token operator\">=</span> JdbcUtils.getConnection<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>            //区别</pre></td></tr><tr><td data-num=\"19\"></td><td><pre>            //使用?占位符代替参数</pre></td></tr><tr><td data-num=\"20\"></td><td><pre>            String sql <span class=\"token operator\">=</span> <span class=\"token string\">\"INSERT INTO users(<span class=\"token variable\"><span class=\"token variable\">`</span><span class=\"token function\">id</span><span class=\"token variable\">`</span></span>,<span class=\"token variable\"><span class=\"token variable\">`</span>name<span class=\"token variable\">`</span></span>,<span class=\"token variable\"><span class=\"token variable\">`</span>password<span class=\"token variable\">`</span></span>,<span class=\"token variable\"><span class=\"token variable\">`</span>email<span class=\"token variable\">`</span></span>,<span class=\"token variable\"><span class=\"token variable\">`</span>birthday<span class=\"token variable\">`</span></span>) values(?,?,?,?,?)\"</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>            st <span class=\"token operator\">=</span> conn.prepareStatement<span class=\"token punctuation\">(</span>sql<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> //预编译SQL，先写sql，然后不执行</pre></td></tr><tr><td data-num=\"22\"></td><td><pre>            //手动给参数赋值</pre></td></tr><tr><td data-num=\"23\"></td><td><pre>            st.setInt<span class=\"token punctuation\">(</span><span class=\"token number\">1</span>, <span class=\"token number\">5</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>            st.setString<span class=\"token punctuation\">(</span><span class=\"token number\">2</span>, <span class=\"token string\">\"钱七\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre>            st.setString<span class=\"token punctuation\">(</span><span class=\"token number\">3</span>, <span class=\"token string\">\"123456\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre>            st.setString<span class=\"token punctuation\">(</span><span class=\"token number\">4</span>, <span class=\"token string\">\"qianqi@sina.com\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre>            //注意点:</pre></td></tr><tr><td data-num=\"28\"></td><td><pre>            //sqL.Date  数据库  java. sql.Date<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"29\"></td><td><pre>            //util.Date    Java     new Date<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>.getTime<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>获得时间戳</pre></td></tr><tr><td data-num=\"30\"></td><td><pre>            st.setDate<span class=\"token punctuation\">(</span><span class=\"token number\">5</span>, new java.sql.Date<span class=\"token punctuation\">(</span>new java.util.Date<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>.getTime<span class=\"token punctuation\">(</span><span class=\"token punctuation\">))</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"31\"></td><td><pre>            //执行</pre></td></tr><tr><td data-num=\"32\"></td><td><pre>            int num <span class=\"token operator\">=</span> st.executeUpdate<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"33\"></td><td><pre>            <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>num <span class=\"token operator\">></span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"34\"></td><td><pre>                System.out.println<span class=\"token punctuation\">(</span><span class=\"token string\">\"插入成功！\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"35\"></td><td><pre>            <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"36\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span> catch <span class=\"token punctuation\">(</span>SQLException e<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"37\"></td><td><pre>            throw new RuntimeException<span class=\"token punctuation\">(</span>e<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"38\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span> finally <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"39\"></td><td><pre>            JdbcUtils.release<span class=\"token punctuation\">(</span>conn,st,null<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"40\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"41\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"42\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><ul>\n<li>更新</li>\n</ul>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>package com.kuang.lesson03<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token function\">import</span> com.kuang.lesson02.utils.JdbcUtils<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token function\">import</span> java.sql.Connection<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token function\">import</span> java.sql.PreparedStatement<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token function\">import</span> java.sql.ResultSet<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token function\">import</span> java.sql.SQLException<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>public class TestUpdate  <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>    public static void main<span class=\"token punctuation\">(</span>String<span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> args<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>        Connection conn <span class=\"token operator\">=</span> null<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>        PreparedStatement st <span class=\"token operator\">=</span> null<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>        ResultSet rs <span class=\"token operator\">=</span> null<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>        try <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>            conn <span class=\"token operator\">=</span> JdbcUtils.getConnection<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>            //区别</pre></td></tr><tr><td data-num=\"18\"></td><td><pre>            //使用?占位符代替参数</pre></td></tr><tr><td data-num=\"19\"></td><td><pre>            String sql <span class=\"token operator\">=</span> <span class=\"token string\">\"update users set 'NAME' =?  where id=?;\"</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>            st <span class=\"token operator\">=</span> conn.prepareStatement<span class=\"token punctuation\">(</span>sql<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> //预编译SQL，先写sql，然后不执行</pre></td></tr><tr><td data-num=\"21\"></td><td><pre></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>            //手动给参数赋值</pre></td></tr><tr><td data-num=\"23\"></td><td><pre>            st.setString<span class=\"token punctuation\">(</span><span class=\"token number\">1</span>,<span class=\"token string\">\"幽化猫\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>            st.setInt<span class=\"token punctuation\">(</span><span class=\"token number\">2</span>, <span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre></pre></td></tr><tr><td data-num=\"26\"></td><td><pre>            //执行</pre></td></tr><tr><td data-num=\"27\"></td><td><pre>            int num <span class=\"token operator\">=</span> st.executeUpdate<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre>            <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>num <span class=\"token operator\">></span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"29\"></td><td><pre>                System.out.println<span class=\"token punctuation\">(</span><span class=\"token string\">\"更新成功！\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"30\"></td><td><pre>            <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"31\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span> catch <span class=\"token punctuation\">(</span>SQLException e<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"32\"></td><td><pre>            throw new RuntimeException<span class=\"token punctuation\">(</span>e<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"33\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span> finally <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"34\"></td><td><pre>            JdbcUtils.release<span class=\"token punctuation\">(</span>conn,st,null<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"35\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"36\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"37\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><ul>\n<li>删除</li>\n</ul>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>package com.kuang.lesson03<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token function\">import</span> com.kuang.lesson02.utils.JdbcUtils<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token function\">import</span> java.sql.Connection<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token function\">import</span> java.sql.PreparedStatement<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token function\">import</span> java.sql.ResultSet<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token function\">import</span> java.sql.SQLException<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>public class TestDelete  <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>    public static void main<span class=\"token punctuation\">(</span>String<span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> args<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>        Connection conn <span class=\"token operator\">=</span> null<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>        PreparedStatement st <span class=\"token operator\">=</span> null<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>        ResultSet rs <span class=\"token operator\">=</span> null<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>        try <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>            conn <span class=\"token operator\">=</span> JdbcUtils.getConnection<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>            //区别</pre></td></tr><tr><td data-num=\"18\"></td><td><pre>            //使用?占位符代替参数</pre></td></tr><tr><td data-num=\"19\"></td><td><pre>            String sql <span class=\"token operator\">=</span> <span class=\"token string\">\"delete from users where id=?\"</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>            st <span class=\"token operator\">=</span> conn.prepareStatement<span class=\"token punctuation\">(</span>sql<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> //预编译SQL，先写sql，然后不执行</pre></td></tr><tr><td data-num=\"21\"></td><td><pre></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>            //手动给参数赋值</pre></td></tr><tr><td data-num=\"23\"></td><td><pre>            st.setInt<span class=\"token punctuation\">(</span><span class=\"token number\">1</span>, <span class=\"token number\">4</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre></pre></td></tr><tr><td data-num=\"25\"></td><td><pre>            //执行</pre></td></tr><tr><td data-num=\"26\"></td><td><pre>            int num <span class=\"token operator\">=</span> st.executeUpdate<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre>            <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>num <span class=\"token operator\">></span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre>                System.out.println<span class=\"token punctuation\">(</span><span class=\"token string\">\"删除成功！\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"29\"></td><td><pre>            <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"30\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span> catch <span class=\"token punctuation\">(</span>SQLException e<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"31\"></td><td><pre>            throw new RuntimeException<span class=\"token punctuation\">(</span>e<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"32\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span> finally <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"33\"></td><td><pre>            JdbcUtils.release<span class=\"token punctuation\">(</span>conn,st,null<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"34\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"35\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"36\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><ul>\n<li>查询</li>\n</ul>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>package com.kuang.lesson03<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token function\">import</span> com.kuang.lesson02.utils.JdbcUtils<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token function\">import</span> java.sql.Connection<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token function\">import</span> java.sql.PreparedStatement<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token function\">import</span> java.sql.ResultSet<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token function\">import</span> java.sql.SQLException<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>public class TestSelect <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>    public static void main<span class=\"token punctuation\">(</span>String<span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> args<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>        Connection conn <span class=\"token operator\">=</span> null<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>        PreparedStatement st <span class=\"token operator\">=</span> null<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>        ResultSet rs <span class=\"token operator\">=</span> null<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>        try <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>            conn <span class=\"token operator\">=</span> JdbcUtils.getConnection<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>            String sql <span class=\"token operator\">=</span> <span class=\"token string\">\"select * from users where id = ?\"</span><span class=\"token punctuation\">;</span>//编写SQL</pre></td></tr><tr><td data-num=\"21\"></td><td><pre></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>            st <span class=\"token operator\">=</span> conn.prepareStatement<span class=\"token punctuation\">(</span>sql<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> //预编译</pre></td></tr><tr><td data-num=\"23\"></td><td><pre></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>            st.setInt<span class=\"token punctuation\">(</span><span class=\"token number\">1,1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>//传递参数</pre></td></tr><tr><td data-num=\"25\"></td><td><pre></pre></td></tr><tr><td data-num=\"26\"></td><td><pre>            rs <span class=\"token operator\">=</span> st.executeQuery<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> //执行</pre></td></tr><tr><td data-num=\"27\"></td><td><pre></pre></td></tr><tr><td data-num=\"28\"></td><td><pre>            if<span class=\"token punctuation\">(</span>rs.next<span class=\"token punctuation\">(</span><span class=\"token punctuation\">))</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"29\"></td><td><pre>                System.out.println<span class=\"token punctuation\">(</span>rs.getString<span class=\"token punctuation\">(</span><span class=\"token string\">\"NAME\"</span><span class=\"token punctuation\">))</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"30\"></td><td><pre>            <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"31\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span> catch <span class=\"token punctuation\">(</span>SQLException e<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"32\"></td><td><pre>            throw new RuntimeException<span class=\"token punctuation\">(</span>e<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"33\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span> finally <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"34\"></td><td><pre>            JdbcUtils.release<span class=\"token punctuation\">(</span>conn,st,rs<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"35\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"36\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"37\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><ul>\n<li>防注入</li>\n</ul>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>package com.kuang.lesson02.utils<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token function\">import</span> java.sql.*<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>public class SqlQuestion <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>    public static void main<span class=\"token punctuation\">(</span>String<span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> args<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>        //正常登录</pre></td></tr><tr><td data-num=\"8\"></td><td><pre>//        login<span class=\"token punctuation\">(</span><span class=\"token string\">\"lisi\"</span>,<span class=\"token string\">\"123456\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>        //sql注入</pre></td></tr><tr><td data-num=\"11\"></td><td><pre>        login<span class=\"token punctuation\">(</span><span class=\"token string\">\"' or '1=1\"</span>,<span class=\"token string\">\"123456\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>    /**</pre></td></tr><tr><td data-num=\"16\"></td><td><pre>     * 登录业务</pre></td></tr><tr><td data-num=\"17\"></td><td><pre>     */</pre></td></tr><tr><td data-num=\"18\"></td><td><pre>    public static void login<span class=\"token punctuation\">(</span>String username, String password<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>        Connection con <span class=\"token operator\">=</span> null<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>        PreparedStatement st <span class=\"token operator\">=</span> null<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>        ResultSet rs <span class=\"token operator\">=</span> null<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>        try <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>            con <span class=\"token operator\">=</span> JdbcUtils.getConnection<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>            // PreparedStatement 防止SQL注入的本质，把传递进来的参数当做字符</pre></td></tr><tr><td data-num=\"25\"></td><td><pre>            // 假设其中存在转义字符，比如说<span class=\"token string\">'会被直接转义'</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre>            String sql <span class=\"token operator\">=</span> <span class=\"token string\">\"SELECT * FROM users WHERE <span class=\"token variable\"><span class=\"token variable\">`</span>name<span class=\"token variable\">`</span></span>=? AND <span class=\"token variable\"><span class=\"token variable\">`</span>password<span class=\"token variable\">`</span></span>=?\"</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre></pre></td></tr><tr><td data-num=\"28\"></td><td><pre>            st <span class=\"token operator\">=</span> con.prepareStatement<span class=\"token punctuation\">(</span>sql<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"29\"></td><td><pre>            st.setString<span class=\"token punctuation\">(</span><span class=\"token number\">1</span>,username<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"30\"></td><td><pre>            st.setString<span class=\"token punctuation\">(</span><span class=\"token number\">2</span>,password<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"31\"></td><td><pre></pre></td></tr><tr><td data-num=\"32\"></td><td><pre>            rs <span class=\"token operator\">=</span> st.executeQuery<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> //查询完毕会返回一个结果集</pre></td></tr><tr><td data-num=\"33\"></td><td><pre>            <span class=\"token keyword\">while</span> <span class=\"token punctuation\">(</span>rs.next<span class=\"token punctuation\">(</span><span class=\"token punctuation\">))</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"34\"></td><td><pre>                System.out.println<span class=\"token punctuation\">(</span><span class=\"token string\">\"password=\"</span>+rs.getInt<span class=\"token punctuation\">(</span><span class=\"token string\">\"password\"</span><span class=\"token punctuation\">))</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"35\"></td><td><pre>                System.out.println<span class=\"token punctuation\">(</span><span class=\"token string\">\"name=\"</span>+rs.getString<span class=\"token punctuation\">(</span><span class=\"token string\">\"name\"</span><span class=\"token punctuation\">))</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"36\"></td><td><pre>                System.out.println<span class=\"token punctuation\">(</span><span class=\"token string\">\"=====================\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"37\"></td><td><pre>            <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"38\"></td><td><pre></pre></td></tr><tr><td data-num=\"39\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span> catch <span class=\"token punctuation\">(</span>SQLException e<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"40\"></td><td><pre>            e.printStackTrace<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"41\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span> finally <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"42\"></td><td><pre>            JdbcUtils.release<span class=\"token punctuation\">(</span>con, st, rs<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"43\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"44\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"45\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><h1 id=\"使用idea连接数据库\"><a class=\"anchor\" href=\"#使用idea连接数据库\">#</a> 使用 IDEA 连接数据库</h1>\n<ul>\n<li>连接不上的话，可以看 Drivers，配置对应的 mysql 版本</li>\n</ul>\n<h1 id=\"jdbc事务\"><a class=\"anchor\" href=\"#jdbc事务\">#</a> JDBC 事务</h1>\n<p><mark>要么都成功，要么都失败</mark></p>\n<ul>\n<li>ACID 原则</li>\n</ul>\n<p>原子性：要么全部成功，要么全部失败</p>\n<p>一致性：总数不变</p>\n<p>隔离性：多个进程互不干扰</p>\n<p>持久性：一旦提交不可逆，持久化到数据库了</p>\n<ul>\n<li>隔离性的问题：</li>\n</ul>\n<p>脏读：一个事务读取了另外一个没有提交的事务</p>\n<p>不可重复读：在同一个事务内，重复读取表中数据，表数据发生了改变</p>\n<p>幻读：在一个事务内，读取到了别人插入的数据，导致前后读出来的结果不一致</p>\n<ul>\n<li>代码实现</li>\n</ul>\n<p>开启事务 con.setAutoCommit (false);<br />\n 一组业务执行完毕，提交事务<br />\n可以在 catch 语句中显示的定义回滚语句，但是默认失败就会回滚<br />\n正常情况：</p>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>package com.kuang.lesson04<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token function\">import</span> com.kuang.lesson02.utils.JdbcUtils<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token function\">import</span> java.sql.Connection<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token function\">import</span> java.sql.PreparedStatement<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token function\">import</span> java.sql.ResultSet<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token function\">import</span> java.sql.SQLException<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>public class TestTransaction1 <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>    public static void main<span class=\"token punctuation\">(</span>String<span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> args<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>        Connection con <span class=\"token operator\">=</span> null<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>        PreparedStatement st <span class=\"token operator\">=</span> null<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>        ResultSet rs <span class=\"token operator\">=</span> null<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>        try <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>            con <span class=\"token operator\">=</span> JdbcUtils.getConnection<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>            //关闭自动提交 自动会开启事务</pre></td></tr><tr><td data-num=\"20\"></td><td><pre>            con.setAutoCommit<span class=\"token punctuation\">(</span>false<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>//开启事务</pre></td></tr><tr><td data-num=\"21\"></td><td><pre></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>            // A 转 B <span class=\"token number\">100</span>元</pre></td></tr><tr><td data-num=\"23\"></td><td><pre>            String sql1 <span class=\"token operator\">=</span> <span class=\"token string\">\"update account set money=money-100 where name='A'\"</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>            st <span class=\"token operator\">=</span> con.prepareStatement<span class=\"token punctuation\">(</span>sql1<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre>            st.executeUpdate<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre>            String sql2 <span class=\"token operator\">=</span> <span class=\"token string\">\"update account set money=money+100 where name='B'\"</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre>            st <span class=\"token operator\">=</span> con.prepareStatement<span class=\"token punctuation\">(</span>sql2<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre>            st.executeUpdate<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"29\"></td><td><pre>            //业务完毕，提交事务</pre></td></tr><tr><td data-num=\"30\"></td><td><pre>            con.commit<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"31\"></td><td><pre></pre></td></tr><tr><td data-num=\"32\"></td><td><pre>            System.out.println<span class=\"token punctuation\">(</span><span class=\"token string\">\"A 转 B 100元 成功！\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"33\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span> catch <span class=\"token punctuation\">(</span>SQLException e<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"34\"></td><td><pre>            e.printStackTrace<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"35\"></td><td><pre>            try <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"36\"></td><td><pre>                con.rollback<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"37\"></td><td><pre>            <span class=\"token punctuation\">&#125;</span> catch <span class=\"token punctuation\">(</span>SQLException ex<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"38\"></td><td><pre>                ex.printStackTrace<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"39\"></td><td><pre>            <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"40\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span> finally <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"41\"></td><td><pre>            JdbcUtils.release<span class=\"token punctuation\">(</span>con, st, rs<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"42\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"43\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"44\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><p>异常情况</p>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>package com.kuang.lesson04<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token function\">import</span> com.kuang.lesson02.utils.JdbcUtils<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token function\">import</span> java.sql.Connection<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token function\">import</span> java.sql.PreparedStatement<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token function\">import</span> java.sql.ResultSet<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token function\">import</span> java.sql.SQLException<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>public class TestTransaction1 <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>    public static void main<span class=\"token punctuation\">(</span>String<span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> args<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>        Connection con <span class=\"token operator\">=</span> null<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>        PreparedStatement <span class=\"token function\">ps</span> <span class=\"token operator\">=</span> null<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>        ResultSet rs <span class=\"token operator\">=</span> null<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>        try <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>            con <span class=\"token operator\">=</span> JDBCUtils.getConnection<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>            //关闭自动提交 自动会开启事务</pre></td></tr><tr><td data-num=\"19\"></td><td><pre>            con.setAutoCommit<span class=\"token punctuation\">(</span>false<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>//开启事务</pre></td></tr><tr><td data-num=\"20\"></td><td><pre>            // A 转 B <span class=\"token number\">100</span>元</pre></td></tr><tr><td data-num=\"21\"></td><td><pre>            String sql1 <span class=\"token operator\">=</span> <span class=\"token string\">\"update account set money=money-100 where name='A'\"</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>            <span class=\"token function\">ps</span> <span class=\"token operator\">=</span> con.prepareStatement<span class=\"token punctuation\">(</span>sql1<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>            ps.executeUpdate<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre></pre></td></tr><tr><td data-num=\"25\"></td><td><pre>            //默认失败</pre></td></tr><tr><td data-num=\"26\"></td><td><pre>            int x <span class=\"token operator\">=</span> <span class=\"token number\">1</span>/0<span class=\"token punctuation\">;</span> //一定会异常</pre></td></tr><tr><td data-num=\"27\"></td><td><pre></pre></td></tr><tr><td data-num=\"28\"></td><td><pre>            String sql2 <span class=\"token operator\">=</span> <span class=\"token string\">\"update account set money=money+100 where name='B'\"</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"29\"></td><td><pre>            <span class=\"token function\">ps</span> <span class=\"token operator\">=</span> con.prepareStatement<span class=\"token punctuation\">(</span>sql2<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"30\"></td><td><pre>            ps.executeUpdate<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"31\"></td><td><pre>            //业务完毕，提交事务</pre></td></tr><tr><td data-num=\"32\"></td><td><pre>            con.commit<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"33\"></td><td><pre></pre></td></tr><tr><td data-num=\"34\"></td><td><pre>            System.out.println<span class=\"token punctuation\">(</span><span class=\"token string\">\"A 转 B 100元 成功！\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"35\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span> catch <span class=\"token punctuation\">(</span>SQLException e<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"36\"></td><td><pre>            e.printStackTrace<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"37\"></td><td><pre>            //如果异常，默认也会回滚，下面不写也可以</pre></td></tr><tr><td data-num=\"38\"></td><td><pre>//            try <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"39\"></td><td><pre>//                con.rollback<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"40\"></td><td><pre>//            <span class=\"token punctuation\">&#125;</span> catch <span class=\"token punctuation\">(</span>SQLException ex<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"41\"></td><td><pre>//                ex.printStackTrace<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"42\"></td><td><pre>//            <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"43\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span> finally <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"44\"></td><td><pre>            JDBCUtils.release<span class=\"token punctuation\">(</span>con, ps, rs<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"45\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"46\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"47\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure>",
            "tags": [
                "数据库",
                "数据库"
            ]
        }
    ]
}