{
    "version": "https://jsonfeed.org/version/1",
    "title": "幽化猫の博客",
    "subtitle": "生活朗朗，万物可爱",
    "icon": "https://youhuamao.github.io/images/favicon.ico",
    "description": "这是一个人的博客",
    "home_page_url": "https://youhuamao.github.io",
    "items": [
        {
            "id": "https://youhuamao.github.io/2022/09/14/Java/Java%E5%9F%BA%E7%A1%80/%E8%BF%90%E7%AE%97%E7%AC%A6/",
            "url": "https://youhuamao.github.io/2022/09/14/Java/Java%E5%9F%BA%E7%A1%80/%E8%BF%90%E7%AE%97%E7%AC%A6/",
            "title": "运算符",
            "date_published": "2022-09-13T16:00:00.000Z",
            "content_html": "<h1 id=\"算术运算符\"><a class=\"anchor\" href=\"#算术运算符\">#</a> 算术运算符</h1>\n<figure class=\"highlight java\"><figcaption data-lang=\"java\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token number\">10</span> <span class=\"token operator\">/</span> <span class=\"token number\">4</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span class=\"token comment\">//2</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token number\">10.0</span> <span class=\"token operator\">/</span> <span class=\"token number\">4</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span class=\"token comment\">//2.5</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token comment\">// 作为独立的语句使用：前 ++ 和后 ++ 都完全等价于 i=i+1;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>i<span class=\"token operator\">++</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token operator\">++</span>i<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre></pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token comment\">// 作为表达式使用</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre><span class=\"token comment\">// 前 ++: ++i 先自增后赋值</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre><span class=\"token comment\">// 后 ++: i++ 先赋值后自增</span></pre></td></tr></table></figure><h1 id=\"关系运算符\"><a class=\"anchor\" href=\"#关系运算符\">#</a> 关系运算符</h1>\n<ul>\n<li>关系运算符的结果都是 boolean 型，也就是要么是 true, 要么是 false</li>\n<li>关系表达式经常用在 if 结构的条件中或循环结构的条件中</li>\n</ul>\n<figure class=\"highlight java\"><figcaption data-lang=\"java\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token number\">8</span> <span class=\"token operator\">==</span> <span class=\"token number\">7</span> <span class=\"token boolean\">false</span> </pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token number\">8</span> <span class=\"token operator\">!=</span> <span class=\"token number\">7</span> <span class=\"token boolean\">true</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token number\">8</span> <span class=\"token generics\"><span class=\"token punctuation\">&lt;</span> 7 false</pre></td></tr><tr><td data-num=\"4\"></td><td><pre>8 <span class=\"token punctuation\">></span></span> <span class=\"token number\">7</span> <span class=\"token boolean\">true</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token number\">8</span> <span class=\"token operator\">&lt;=</span> <span class=\"token number\">7</span> <span class=\"token boolean\">false</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token number\">8</span> <span class=\"token operator\">>=</span> <span class=\"token number\">7</span> <span class=\"token boolean\">true</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token keyword\">instanceof</span> 检查是否是类的对象 <span class=\"token string\">\"hsp\"</span> <span class=\"token keyword\">instanceof</span> <span class=\"token class-name\">String</span>  <span class=\"token boolean\">true</span></pre></td></tr></table></figure><h1 id=\"逻辑运算符\"><a class=\"anchor\" href=\"#逻辑运算符\">#</a> 逻辑运算符</h1>\n<figure class=\"highlight java\"><figcaption data-lang=\"java\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>a<span class=\"token operator\">&amp;</span>h<span class=\"token operator\">:</span> <span class=\"token operator\">&amp;</span>叫逻辑与<span class=\"token operator\">:</span>规则<span class=\"token operator\">:</span>当a和b同时为<span class=\"token boolean\">true</span>则结果为<span class=\"token boolean\">true</span><span class=\"token punctuation\">,</span>否则为<span class=\"token boolean\">false</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>a<span class=\"token operator\">&amp;&amp;</span>b <span class=\"token operator\">:</span> <span class=\"token operator\">&amp;&amp;</span>叫短路与<span class=\"token operator\">:</span>规则<span class=\"token operator\">:</span>当a和b同时为<span class=\"token boolean\">true</span> <span class=\"token punctuation\">,</span>则结果为<span class=\"token boolean\">true</span><span class=\"token punctuation\">,</span>否则为<span class=\"token boolean\">false</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>a<span class=\"token operator\">|</span>b<span class=\"token operator\">:</span><span class=\"token operator\">|</span>叫逻辑或，规则<span class=\"token operator\">:</span>当a和b <span class=\"token punctuation\">,</span>有一<span class=\"token operator\">-</span>个为<span class=\"token boolean\">true</span> <span class=\"token punctuation\">,</span>则结果为<span class=\"token boolean\">true</span><span class=\"token punctuation\">,</span>否则为<span class=\"token boolean\">false</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>a<span class=\"token operator\">||</span>b<span class=\"token operator\">:</span><span class=\"token constant\">II</span>叫短路或，规则<span class=\"token operator\">:</span>当a和b，有一个为<span class=\"token boolean\">true</span> <span class=\"token punctuation\">,</span>则结果为<span class=\"token boolean\">true</span><span class=\"token punctuation\">,</span>否则为<span class=\"token boolean\">false</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token operator\">!</span>a<span class=\"token operator\">:</span>叫取反，或者非运算。当a为<span class=\"token boolean\">true</span><span class=\"token punctuation\">,</span>则结果为<span class=\"token boolean\">false</span><span class=\"token punctuation\">,</span>当a为<span class=\"token boolean\">false</span>是，结果为<span class=\"token boolean\">true</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>a<span class=\"token operator\">^</span>b<span class=\"token operator\">:</span>叫逻辑异或，当a和b不同时，则结果为<span class=\"token boolean\">true</span><span class=\"token punctuation\">,</span>否则为<span class=\"token boolean\">false</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre></pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token operator\">&amp;&amp;</span>和<span class=\"token operator\">&amp;</span>使用区别</pre></td></tr><tr><td data-num=\"9\"></td><td><pre><span class=\"token number\">1.</span> <span class=\"token operator\">&amp;&amp;</span>短路与<span class=\"token operator\">:</span>如果第一个条件为<span class=\"token boolean\">false</span><span class=\"token punctuation\">,</span>则第二个条件不会判断，最终结果为<span class=\"token boolean\">false</span><span class=\"token punctuation\">,</span> 效率高</pre></td></tr><tr><td data-num=\"10\"></td><td><pre><span class=\"token number\">2.</span> <span class=\"token operator\">&amp;</span>逻辑与<span class=\"token operator\">:</span>不管第一一个条件是否为<span class=\"token boolean\">false</span><span class=\"token punctuation\">,</span>第二个条件都要判断，效率低</pre></td></tr><tr><td data-num=\"11\"></td><td><pre><span class=\"token number\">3.</span>开发中，我们使用的基本是短路与<span class=\"token operator\">&amp;&amp;</span>，效率高</pre></td></tr><tr><td data-num=\"12\"></td><td><pre></pre></td></tr><tr><td data-num=\"13\"></td><td><pre><span class=\"token constant\">II</span>和<span class=\"token operator\">|</span>使用区别</pre></td></tr><tr><td data-num=\"14\"></td><td><pre><span class=\"token number\">1</span><span class=\"token operator\">||</span>短路或<span class=\"token operator\">:</span>如果第个条件为<span class=\"token boolean\">true</span><span class=\"token punctuation\">,</span> 则第二个条件不会判断，最终结果为<span class=\"token boolean\">true</span><span class=\"token punctuation\">,</span>效率高</pre></td></tr><tr><td data-num=\"15\"></td><td><pre><span class=\"token number\">2</span><span class=\"token operator\">|</span>逻辑或<span class=\"token operator\">:</span>不管第一个条件是否为<span class=\"token boolean\">true</span><span class=\"token punctuation\">,</span> 第二个条件都要判断，效率低</pre></td></tr><tr><td data-num=\"16\"></td><td><pre><span class=\"token number\">3</span> 开发中，我们基本使用<span class=\"token operator\">||</span></pre></td></tr></table></figure><h1 id=\"三元运算符\"><a class=\"anchor\" href=\"#三元运算符\">#</a> 三元运算符</h1>\n<figure class=\"highlight java\"><figcaption data-lang=\"java\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>条件表达式<span class=\"token operator\">?</span>表达式<span class=\"token number\">1</span><span class=\"token operator\">:</span>表达式<span class=\"token number\">2</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token number\">1.</span>如果条件表达式为<span class=\"token boolean\">true</span><span class=\"token punctuation\">,</span>运算后的结果是表达式<span class=\"token number\">1</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token number\">2.</span>如果条件表达式为<span class=\"token boolean\">false</span><span class=\"token punctuation\">,</span>运算后的结果是表达式<span class=\"token number\">2</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token keyword\">int</span> a<span class=\"token operator\">=</span> <span class=\"token number\">10</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token keyword\">int</span> b<span class=\"token operator\">=</span> <span class=\"token number\">99</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token keyword\">int</span> result<span class=\"token operator\">:</span> a<span class=\"token operator\">></span>b <span class=\"token operator\">?</span> a<span class=\"token operator\">++</span> <span class=\"token operator\">:</span>b<span class=\"token operator\">--</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">//98</span></pre></td></tr></table></figure><h1 id=\"输入\"><a class=\"anchor\" href=\"#输入\">#</a> 输入</h1>\n<figure class=\"highlight java\"><figcaption data-lang=\"java\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token class-name\">Scanner</span> myScanner <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Scanner</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>in<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"请输入名字\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token class-name\">String</span> name <span class=\"token operator\">=</span> myScanner<span class=\"token punctuation\">.</span><span class=\"token function\">next</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"请输入年龄\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token keyword\">int</span> age <span class=\"token operator\">=</span> myScanner<span class=\"token punctuation\">.</span><span class=\"token function\">nextInt</span><span class=\"token punctuation\">(</span> <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr></table></figure><h1 id=\"进制\"><a class=\"anchor\" href=\"#进制\">#</a> 进制</h1>\n<ul>\n<li>二进制: 0,1 , 满 2 进 1. 以 0b 或 0B 开头。</li>\n<li>十进制: 0-9 满 10 进 1。</li>\n<li>八进制: 0-7，满 8 进 1. 以数字 0 开头表示。</li>\n<li>十六进制: 0-9 及 A (10)-F (15)，满 16 进 1. 以 0x 或 0X 开头表示。此处的 A-F 不区分大小写。</li>\n</ul>\n<h1 id=\"位运算符\"><a class=\"anchor\" href=\"#位运算符\">#</a> 位运算符</h1>\n<figure class=\"highlight java\"><figcaption data-lang=\"java\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>按位与<span class=\"token operator\">&amp;</span>    两位全为<span class=\"token number\">1</span><span class=\"token punctuation\">,</span>结果为<span class=\"token number\">1</span><span class=\"token punctuation\">,</span>否则为<span class=\"token number\">0</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>按位或<span class=\"token operator\">|</span>    两位有一个为<span class=\"token number\">1</span><span class=\"token punctuation\">,</span>结果为<span class=\"token number\">1</span><span class=\"token punctuation\">,</span>否则为<span class=\"token number\">0</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>按位异或<span class=\"token operator\">^</span>  两位一个为<span class=\"token number\">0</span><span class=\"token punctuation\">,</span><span class=\"token operator\">-</span> <span class=\"token operator\">-</span>个为<span class=\"token number\">1</span><span class=\"token punctuation\">,</span>结果为<span class=\"token number\">1</span><span class=\"token punctuation\">,</span>否则为<span class=\"token number\">0</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>按位取反<span class=\"token operator\">~</span>  <span class=\"token number\">0</span><span class=\"token operator\">-></span><span class=\"token number\">1</span> <span class=\"token punctuation\">,</span><span class=\"token number\">1</span><span class=\"token operator\">-></span> <span class=\"token number\">0</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token number\">1.</span> 二进制的最高位是符号位<span class=\"token operator\">:</span> <span class=\"token number\">0</span>表示正数<span class=\"token punctuation\">,</span><span class=\"token number\">1</span>表示负数<span class=\"token punctuation\">(</span>老韩口诀<span class=\"token operator\">:</span> <span class=\"token number\">0</span><span class=\"token operator\">-></span><span class=\"token number\">0</span> <span class=\"token number\">1</span><span class=\"token operator\">-></span><span class=\"token operator\">-</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token number\">2.</span> 正数的原码，反码，补码都一样<span class=\"token punctuation\">(</span>三码合<span class=\"token operator\">-</span>一<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token number\">3.</span> 负数的反码<span class=\"token operator\">=</span>它的原码符号位不变，其它位取反<span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token operator\">-></span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span><span class=\"token number\">1</span><span class=\"token operator\">-></span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre><span class=\"token number\">4.</span> 负数的补码<span class=\"token operator\">=</span>它的反码<span class=\"token operator\">+</span><span class=\"token number\">1</span> <span class=\"token punctuation\">,</span>负数的反码<span class=\"token operator\">=</span>负数的补码<span class=\"token operator\">-</span> <span class=\"token number\">1</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre><span class=\"token number\">5.</span> <span class=\"token number\">0</span>的反码，补码都是<span class=\"token number\">0</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre><span class=\"token number\">6.</span> java没有无符号数，换言之，java中的数都是有符号的</pre></td></tr><tr><td data-num=\"12\"></td><td><pre><span class=\"token number\">7.</span> 在计算机运算的时候，都是以补码的方式来运算的<span class=\"token punctuation\">.</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre><span class=\"token number\">8.</span> 当我们看运算结果的时候，要看他的原码<span class=\"token punctuation\">(</span>重点<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre></pre></td></tr><tr><td data-num=\"15\"></td><td><pre><span class=\"token comment\">//1. 先得到 2 的补码 => 2 的原码 00000000 00000000 00000000 00000010</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre><span class=\"token comment\">//2 的补码 00000000 00000000 00000000 00000010</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre><span class=\"token comment\">//2. 3 的补码 3 的原码 00000000 00000000 00000000 00000011</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre><span class=\"token comment\">//3 的补码 00000000 00000000 00000000 00000011</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre><span class=\"token comment\">//3. 按位 & amp;</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre><span class=\"token comment\">//00000000 00000000 00000000 00000010</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre><span class=\"token comment\">//00000000 00000000 00000000 00000011</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre><span class=\"token comment\">//00000000 00000000 00000000 00000010 &amp; 运算后的补码</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre><span class=\"token comment\">// 运算后的原码也是 00000000 00000000 00000000 00000010</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre><span class=\"token comment\">// 结果就是 2</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre><span class=\"token class-name\">System</span> <span class=\"token punctuation\">.</span> out <span class=\"token punctuation\">.</span> <span class=\"token function\">pritln</span><span class=\"token punctuation\">(</span><span class=\"token number\">2</span><span class=\"token operator\">&amp;</span><span class=\"token number\">3</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span class=\"token comment\">//2 </span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre></pre></td></tr><tr><td data-num=\"27\"></td><td><pre><span class=\"token comment\">// 推导</span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre><span class=\"token comment\">//1. 先得到 - 2 的原码 10000000 00000000 00000000 00000010</span></pre></td></tr><tr><td data-num=\"29\"></td><td><pre><span class=\"token comment\">//2. -2 的反码        11111111 11111111 11111111 11111101</span></pre></td></tr><tr><td data-num=\"30\"></td><td><pre><span class=\"token comment\">//3. -2 的补码        11111111 11111111 11111111 11111110</span></pre></td></tr><tr><td data-num=\"31\"></td><td><pre><span class=\"token comment\">//4. ~-2 操作         00000000 00000000 00000000 00000001 运 算后的补码</span></pre></td></tr><tr><td data-num=\"32\"></td><td><pre><span class=\"token comment\">//5. 运算后的原码就是   00000000 00000000 00000000 00000001 => 1 </span></pre></td></tr><tr><td data-num=\"33\"></td><td><pre><span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token operator\">~</span><span class=\"token operator\">-</span><span class=\"token number\">2</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span class=\"token comment\">//1</span></pre></td></tr><tr><td data-num=\"34\"></td><td><pre></pre></td></tr><tr><td data-num=\"35\"></td><td><pre><span class=\"token comment\">// 还有 3 个位运算符 >>、&lt;&lt; 和 >> </span></pre></td></tr><tr><td data-num=\"36\"></td><td><pre><span class=\"token comment\">// 运算规则:</span></pre></td></tr><tr><td data-num=\"37\"></td><td><pre><span class=\"token number\">1.</span> 算术右移<span class=\"token operator\">>></span><span class=\"token operator\">:</span>低位溢出<span class=\"token punctuation\">,</span>符号位不变，并用符号位补溢出的高位</pre></td></tr><tr><td data-num=\"38\"></td><td><pre><span class=\"token number\">2.</span> 算术左移<span class=\"token operator\">&lt;</span> <span class=\"token operator\">&lt;</span><span class=\"token operator\">:</span>符号位不变低位补<span class=\"token number\">0</span></pre></td></tr><tr><td data-num=\"39\"></td><td><pre><span class=\"token number\">3.</span> <span class=\"token operator\">>>></span>逻辑右移也叫无符号右移运算规则是<span class=\"token operator\">:</span>低位溢出，高位补<span class=\"token number\">0</span></pre></td></tr><tr><td data-num=\"40\"></td><td><pre><span class=\"token number\">4.</span> 特别说明<span class=\"token operator\">:</span>没有<span class=\"token operator\">&lt;&lt;</span><span class=\"token operator\">&lt;</span>符号</pre></td></tr><tr><td data-num=\"41\"></td><td><pre></pre></td></tr><tr><td data-num=\"42\"></td><td><pre><span class=\"token keyword\">int</span> a<span class=\"token operator\">=</span><span class=\"token number\">1</span><span class=\"token operator\">>></span><span class=\"token number\">2</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// 1 => 00000001 => 00000000 本质 1 / 2 / 2 = 0</span></pre></td></tr><tr><td data-num=\"43\"></td><td><pre><span class=\"token keyword\">int</span> c<span class=\"token operator\">=</span><span class=\"token number\">1</span><span class=\"token operator\">&lt;&lt;</span><span class=\"token number\">2</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// 1 => 00000001 => 00000100 本质 1 * 2 * 2 = 4</span></pre></td></tr></table></figure>",
            "tags": [
                "学习Java",
                "Java基础",
                "前端"
            ]
        },
        {
            "id": "https://youhuamao.github.io/2022/09/13/Java/Java%E5%9F%BA%E7%A1%80/%E6%95%B0%E6%8D%AE%E7%B1%BB%E5%9E%8B/",
            "url": "https://youhuamao.github.io/2022/09/13/Java/Java%E5%9F%BA%E7%A1%80/%E6%95%B0%E6%8D%AE%E7%B1%BB%E5%9E%8B/",
            "title": "数据类型",
            "date_published": "2022-09-12T16:00:00.000Z",
            "content_html": "<p>Java 数据类型有基本数据类型和引用数据类型</p>\n<h1 id=\"基本数据类型\"><a class=\"anchor\" href=\"#基本数据类型\">#</a> 基本数据类型</h1>\n<h2 id=\"整数类型\"><a class=\"anchor\" href=\"#整数类型\">#</a> 整数类型</h2>\n<ul>\n<li>byte [字节] 1 字节<br />\n short [短整型] 2 字节<br />\n int [整型] 4 字节<br />\n long [长整型] 8 字节</li>\n</ul>\n<h2 id=\"浮点数类型\"><a class=\"anchor\" href=\"#浮点数类型\">#</a> 浮点数类型</h2>\n<ul>\n<li>单精度 float 4 字节<br />\n双精度 double 8 字节</li>\n</ul>\n<pre><code class=\"language-Java\">//Java 的浮点型常量(具体值)默认为double型，声明float型常量，须后加‘f’或‘F'\nfloat num1 = 1.1; //错\nfloat num2 = 1.1F; //对\ndouble num3 = 1.1; //对\ndouble num3 = 1.1f; //对\ndouble num5 = .123; //等价于0.123\nSystem.out.println(5.12e2);//512.0\nSystem.out.println(5.12E-2); //0.0512\n//浮点数使用陷阱: 2.7和8.1/3比较\ndouble num11 = 2. 7 ;\ndouble num12 = 8.1 / 3; //2.7\nSystem.out.println(num11);/ /2.7\nSystem.out.println(num12);//接近2.7的一个小数，而不是2.7 \n\n\n//得到一个重要的使用点:当我们对运算结果是小数的进行相等判断是，要小心\n//应该是以两个数的差值的绝对值，在某个精度范围类判断\nif( num11 == num12) &#123;\n    System . out . println(&quot;相等&quot; );\n&#125;\n//正确的写法\nif (Math。abs (num11 - num12) &lt; 0. 000001)&#123;\n    System . out . println(&quot;差值非常小，到我的规定精度，认为相等...&quot;);\n&#125;\n\n</code></pre>\n<h2 id=\"字符类型\"><a class=\"anchor\" href=\"#字符类型\">#</a> 字符类型</h2>\n<figure class=\"highlight java\"><figcaption data-lang=\"java\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">char</span> c1 <span class=\"token operator\">=</span> <span class=\"token char\">'a'</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">//a</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">char</span> c2 <span class=\"token operator\">=</span> <span class=\"token char\">'\\t'</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">//    (这是制表位)</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token keyword\">char</span> c3 <span class=\"token operator\">=</span> <span class=\"token char\">'猫'</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// 猫</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token keyword\">char</span> c4 <span class=\"token operator\">=</span> <span class=\"token number\">97</span><span class=\"token punctuation\">;</span>  <span class=\"token comment\">// a</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token comment\">// 在 java 中， char 的本质是 一个整数，在输出时，是 unicode 码对 应的字符</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token keyword\">char</span> c5 <span class=\"token operator\">=</span> <span class=\"token char\">'a'</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// 输出 'a' 对应的数字</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span><span class=\"token punctuation\">)</span>c5<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">//97</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre></pre></td></tr><tr><td data-num=\"10\"></td><td><pre><span class=\"token comment\">//char 类型 是可以进行运算的， 相当于一个整数，因为它都对应有 Unicode 码 .</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre><span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token char\">'a'</span> <span class=\"token operator\">+</span> <span class=\"token number\">10</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span class=\"token comment\">//107 </span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre><span class=\"token keyword\">char</span> c5 <span class=\"token operator\">=</span> <span class=\"token char\">'b'</span> <span class=\"token operator\">+</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">//98+1==> 99</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre><span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span><span class=\"token punctuation\">)</span>c5<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">//99</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre><span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span>c5<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">//99-> 对应的字符 -> 编码表 ASCII (规定好的)=>C</span></pre></td></tr></table></figure><h2 id=\"布尔类型\"><a class=\"anchor\" href=\"#布尔类型\">#</a> 布尔类型</h2>\n<p>boolean false true</p>\n<h2 id=\"自动转换类型\"><a class=\"anchor\" href=\"#自动转换类型\">#</a> 自动转换类型</h2>\n<p>当 java 程序在进行赋值或者运算时，精度小的类型自动转换为精度大的数据类型，这个就是自动类型转换<br />\n数据类型按精度 (容量) 大小排序为<br />\n char int long float double<br />\nbyte short int long float double</p>\n<figure class=\"highlight java\"><figcaption data-lang=\"java\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\">// 有多种类型的数据混合运算时，</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token comment\">// 系统首先自动将所有数据转换成容量最大的那种数据类型，然后再进行计算</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>intn1<span class=\"token operator\">=</span><span class=\"token number\">10</span><span class=\"token punctuation\">;</span><span class=\"token comment\">//ok</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token keyword\">float</span> d1 <span class=\"token operator\">=</span> n1 <span class=\"token operator\">+</span> <span class=\"token number\">1.1</span><span class=\"token punctuation\">;</span><span class=\"token comment\">// 错误 n1 + 1.1 => 结果类型是 double</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token keyword\">double</span> d1 <span class=\"token operator\">=</span> n1 <span class=\"token operator\">+</span> <span class=\"token number\">1.1</span><span class=\"token punctuation\">;</span><span class=\"token comment\">// 对 n1 + 1.1 => 结果类型是 double</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token keyword\">float</span> d1 <span class=\"token operator\">=</span> n1 <span class=\"token operator\">+</span> <span class=\"token number\">1.1F</span><span class=\"token punctuation\">;</span><span class=\"token comment\">// 对 n1 + 1.1 => 结果类型是 float</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre></pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token comment\">//(byte, short) 和 char 之间不会相互自动转换</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre><span class=\"token comment\">// 当把具体数赋给 byte 时，(1) 先判断该数是否在 byte 范围内， 如果是就可以</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre><span class=\"token keyword\">byte</span> b1 <span class=\"token operator\">=</span> <span class=\"token number\">10</span><span class=\"token punctuation\">;</span><span class=\"token comment\">// 对 128-127 值给变量，判断范围</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre><span class=\"token keyword\">int</span> n2 <span class=\"token operator\">=</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">//n2 是 int</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre><span class=\"token keyword\">byte</span> b2 <span class=\"token operator\">=</span> n2<span class=\"token punctuation\">;</span><span class=\"token comment\">// 错误，原因：如果是变量赋值，判断类型，int 字节比 byte 多</span></pre></td></tr></table></figure><h2 id=\"强制类型转换\"><a class=\"anchor\" href=\"#强制类型转换\">#</a> 强制类型转换</h2>\n<ul>\n<li>自动类型转换的逆过程，将容量大的数据类型转换为容量小的数据类型。使用时要加上强制转换符 (), 但可能造成精度降低或溢出</li>\n</ul>\n<figure class=\"highlight java\"><figcaption data-lang=\"java\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\">// 强转符号只针对于最近的操作数有效，往往会使用小括号提升优先级</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">int</span> x <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span><span class=\"token punctuation\">)</span><span class=\"token number\">10</span><span class=\"token operator\">*</span><span class=\"token number\">3.5</span><span class=\"token operator\">+</span><span class=\"token number\">6</span><span class=\"token operator\">*</span><span class=\"token number\">1.5</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// 错，因为 dobule 不可以转 int</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token keyword\">int</span> x <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">(</span><span class=\"token number\">10</span><span class=\"token operator\">*</span><span class=\"token number\">3.5</span><span class=\"token operator\">+</span><span class=\"token number\">6</span><span class=\"token operator\">*</span><span class=\"token number\">1.5</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">//44</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token comment\">//char 类型可以保存 int 的常量值，但不能保存 int 的变量值，需要强转</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token keyword\">char</span> c1 <span class=\"token operator\">=</span> <span class=\"token number\">100</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">//ok</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token keyword\">int</span> m <span class=\"token operator\">=</span> <span class=\"token number\">100</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">//ok</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token keyword\">char</span> c2 <span class=\"token operator\">=</span> m<span class=\"token punctuation\">;</span> <span class=\"token comment\">// 错误</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre><span class=\"token keyword\">char</span> c3 <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">char</span><span class=\"token punctuation\">)</span>m<span class=\"token punctuation\">;</span> <span class=\"token comment\">//ok</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre><span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span>c3<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span class=\"token comment\">//100 对应的字符</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre></pre></td></tr><tr><td data-num=\"12\"></td><td><pre><span class=\"token comment\">//byte,short 和 short 类型在进行运算时，当做 int 类型处理。</span></pre></td></tr></table></figure><h2 id=\"与string的转换\"><a class=\"anchor\" href=\"#与string的转换\">#</a> 与 String 的转换</h2>\n<figure class=\"highlight java\"><figcaption data-lang=\"java\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">int</span> n1 <span class=\"token operator\">=</span> <span class=\"token number\">100</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">float</span> f1 <span class=\"token operator\">=</span> <span class=\"token number\">1.1F</span> <span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token keyword\">double</span> d1 <span class=\"token operator\">=</span> <span class=\"token number\">4.5</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token keyword\">boolean</span> b1 <span class=\"token operator\">=</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token class-name\">String</span> s1 <span class=\"token operator\">=</span> n1 <span class=\"token operator\">+</span> <span class=\"token string\">\"\"</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token class-name\">String</span> s2 <span class=\"token operator\">=</span> f1 <span class=\"token operator\">+</span> <span class=\"token string\">\"\"</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token class-name\">String</span> s3 <span class=\"token operator\">=</span> d1 <span class=\"token operator\">+</span> <span class=\"token string\">\"\"</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token class-name\">String</span> s4 <span class=\"token operator\">=</span> b1 <span class=\"token operator\">+</span> <span class=\"token string\">\"\"</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre></pre></td></tr><tr><td data-num=\"10\"></td><td><pre><span class=\"token comment\">//String-> 对应的基本数据类型</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre><span class=\"token class-name\">String</span> s5 <span class=\"token operator\">=</span> <span class=\"token string\">\"123\"</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre><span class=\"token keyword\">int</span> num1 <span class=\"token operator\">=</span> <span class=\"token class-name\">Integer</span><span class=\"token punctuation\">.</span><span class=\"token function\">parseInt</span><span class=\"token punctuation\">(</span>s5<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre><span class=\"token keyword\">double</span> num2 <span class=\"token operator\">=</span> <span class=\"token class-name\">Double</span><span class=\"token punctuation\">.</span><span class=\"token function\">parseDouble</span><span class=\"token punctuation\">(</span>s5<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre><span class=\"token keyword\">float</span> num3 <span class=\"token operator\">=</span> <span class=\"token class-name\">FLoat</span><span class=\"token punctuation\">.</span><span class=\"token function\">parseFloat</span><span class=\"token punctuation\">(</span>s5<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre><span class=\"token keyword\">long</span> num4 <span class=\"token operator\">=</span> <span class=\"token keyword\">long</span><span class=\"token punctuation\">.</span><span class=\"token function\">parseLong</span><span class=\"token punctuation\">(</span>s5<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre><span class=\"token keyword\">byte</span> num5 <span class=\"token operator\">=</span> <span class=\"token class-name\">Byte</span><span class=\"token punctuation\">.</span><span class=\"token function\">parseByte</span><span class=\"token punctuation\">(</span>s5<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre><span class=\"token keyword\">boolean</span> b <span class=\"token operator\">=</span> <span class=\"token class-name\">Boolean</span><span class=\"token punctuation\">.</span><span class=\"token function\">parseBoolean</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"true\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre><span class=\"token keyword\">short</span> num6 <span class=\"token operator\">=</span> <span class=\"token class-name\">Short</span><span class=\"token punctuation\">.</span><span class=\"token function\">parseShort</span><span class=\"token punctuation\">(</span>s5<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre></pre></td></tr><tr><td data-num=\"20\"></td><td><pre></pre></td></tr><tr><td data-num=\"21\"></td><td><pre><span class=\"token operator\">/</span> <span class=\"token operator\">/</span>解读</pre></td></tr><tr><td data-num=\"22\"></td><td><pre>s5<span class=\"token punctuation\">.</span><span class=\"token function\">charAt</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span>得到s5字符串的第一个字符</pre></td></tr><tr><td data-num=\"23\"></td><td><pre><span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">rintln</span><span class=\"token punctuation\">(</span>s5<span class=\"token punctuation\">.</span><span class=\"token function\">charAt</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr></table></figure>",
            "tags": [
                "学习Java",
                "Java基础",
                "前端"
            ]
        },
        {
            "id": "https://youhuamao.github.io/2022/09/12/shujuku/%E4%BB%80%E4%B9%88%E6%98%AF%E6%95%B0%E6%8D%AE%E5%BA%93/",
            "url": "https://youhuamao.github.io/2022/09/12/shujuku/%E4%BB%80%E4%B9%88%E6%98%AF%E6%95%B0%E6%8D%AE%E5%BA%93/",
            "title": "什么是数据库",
            "date_published": "2022-09-11T16:00:00.000Z",
            "content_html": "<h1 id=\"什么是数据库\"><a class=\"anchor\" href=\"#什么是数据库\">#</a> 什么是数据库</h1>\n<ul>\n<li>数据库 (DB，DataBase)</li>\n<li>概念：数据仓库，软件，安装在操作系统（window，Linux，mac... 之上）SQL, 可以存储大量数据。500 万。</li>\n<li>作用：存储数据，管理数据</li>\n</ul>\n<h1 id=\"关系型数据库sql\"><a class=\"anchor\" href=\"#关系型数据库sql\">#</a> 关系型数据库 (SQL)</h1>\n<ul>\n<li>MySQL, Oracle, Sql Server, DB2, SQLlite</li>\n<li>通过表和表之间，行和列之间的关系进行数据的存储，学员信息表，考勤表。</li>\n</ul>\n<h1 id=\"非关系型数据库nosql-not-only\"><a class=\"anchor\" href=\"#非关系型数据库nosql-not-only\">#</a> 非关系型数据库 (NoSQL) Not Only</h1>\n<ul>\n<li>Redis, MongDB</li>\n<li>非关系型数据库，对象存储，通过对象的自身的属性来决定。</li>\n</ul>\n<h1 id=\"dbms数据库管理系统\"><a class=\"anchor\" href=\"#dbms数据库管理系统\">#</a> DBMS (数据库管理系统)</h1>\n<ul>\n<li>数据库的管理软件，科学有效的管理我们的数据。维护和获取数据；</li>\n<li>MySQL, 数据库管理系统！</li>\n</ul>\n",
            "tags": [
                "数据库",
                "数据库"
            ]
        },
        {
            "id": "https://youhuamao.github.io/2022/09/05/Java/Java/",
            "url": "https://youhuamao.github.io/2022/09/05/Java/Java/",
            "title": "文章Java",
            "date_published": "2022-09-05T06:06:39.138Z",
            "content_html": "<h1 id=\"这里开始使用markdown书写博客正文\"><a class=\"anchor\" href=\"#这里开始使用markdown书写博客正文\">#</a> 这里开始使用 Markdown 书写博客正文</h1>\n",
            "tags": [
                "学习Java",
                "前端",
                "组件"
            ]
        },
        {
            "id": "https://youhuamao.github.io/2022/09/04/front/JavaSciprt/%E5%86%85%E9%83%A8%E5%AF%B9%E8%B1%A1/",
            "url": "https://youhuamao.github.io/2022/09/04/front/JavaSciprt/%E5%86%85%E9%83%A8%E5%AF%B9%E8%B1%A1/",
            "title": "内部对象",
            "date_published": "2022-09-03T16:00:00.000Z",
            "content_html": "<h1 id=\"标准对象\"><a class=\"anchor\" href=\"#标准对象\">#</a> 标准对象</h1>\n<figure class=\"highlight html\"><figcaption data-lang=\"HTML\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>typeof 123</pre></td></tr><tr><td data-num=\"2\"></td><td><pre>\"number\"</pre></td></tr><tr><td data-num=\"3\"></td><td><pre>typeof '123'</pre></td></tr><tr><td data-num=\"4\"></td><td><pre>\"string\"</pre></td></tr><tr><td data-num=\"5\"></td><td><pre>typeof true</pre></td></tr><tr><td data-num=\"6\"></td><td><pre>\"boolean\"</pre></td></tr><tr><td data-num=\"7\"></td><td><pre>typeof NaN</pre></td></tr><tr><td data-num=\"8\"></td><td><pre>\"number\"</pre></td></tr><tr><td data-num=\"9\"></td><td><pre>typeof []</pre></td></tr><tr><td data-num=\"10\"></td><td><pre>\"object\"</pre></td></tr><tr><td data-num=\"11\"></td><td><pre>typeof &#123;&#125;</pre></td></tr><tr><td data-num=\"12\"></td><td><pre>\"object\"</pre></td></tr><tr><td data-num=\"13\"></td><td><pre>typeof Math.abs</pre></td></tr><tr><td data-num=\"14\"></td><td><pre>\"function\"</pre></td></tr></table></figure><h1 id=\"date\"><a class=\"anchor\" href=\"#date\">#</a> Date</h1>\n<figure class=\"highlight html\"><figcaption data-lang=\"HTML\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>var now = new Date(); //Sat Jan 04 2020 10:47 :06 GMT+0800 (中国标准时间)</pre></td></tr><tr><td data-num=\"2\"></td><td><pre>now. getFu11year(); //年</pre></td></tr><tr><td data-num=\"3\"></td><td><pre>now. getMonth(; //月0~11 代表月</pre></td></tr><tr><td data-num=\"4\"></td><td><pre>now. getDate(); //日</pre></td></tr><tr><td data-num=\"5\"></td><td><pre>now. getDay(); //星期几</pre></td></tr><tr><td data-num=\"6\"></td><td><pre>now. gethours(); //时</pre></td></tr><tr><td data-num=\"7\"></td><td><pre>now. getMinutes(); //分</pre></td></tr><tr><td data-num=\"8\"></td><td><pre>now. getSeconds(); //秒</pre></td></tr><tr><td data-num=\"9\"></td><td><pre>now. getTime(); //时间戳全世界统-一1970 1.1 0:00:00毫秒数</pre></td></tr><tr><td data-num=\"10\"></td><td><pre>console.1og (new Date (1578106175991)) //时间戳转 为时间</pre></td></tr><tr><td data-num=\"11\"></td><td><pre></pre></td></tr><tr><td data-num=\"12\"></td><td><pre></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>转换</pre></td></tr><tr><td data-num=\"14\"></td><td><pre>now = new Date (1578106175991)</pre></td></tr><tr><td data-num=\"15\"></td><td><pre>Sat Jan 04 2020 10:49:35 GMT+0800 (中国标准时间)</pre></td></tr><tr><td data-num=\"16\"></td><td><pre>now. toLocalestring //注意，调用是一个方式，不是一个属性!</pre></td></tr><tr><td data-num=\"17\"></td><td><pre>f toLocalestring() &#123; [native code] &#125;</pre></td></tr><tr><td data-num=\"18\"></td><td><pre>now. toLocalestring()</pre></td></tr><tr><td data-num=\"19\"></td><td><pre>\"2020/1/4上午10:49:35\"</pre></td></tr><tr><td data-num=\"20\"></td><td><pre>now. toGMTString()</pre></td></tr><tr><td data-num=\"21\"></td><td><pre>\"Sat，04 Jan 2020 02:49:35 GMT\"</pre></td></tr></table></figure><h1 id=\"json\"><a class=\"anchor\" href=\"#json\">#</a> JSON</h1>\n<p>JSON 字符串和 JS 对象的转化</p>\n<figure class=\"highlight html\"><figcaption data-lang=\"HTML\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>var user = &#123;</pre></td></tr><tr><td data-num=\"2\"></td><td><pre>    name: \"qinjiang\" ，</pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    age: 3,</pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    sex: '男'</pre></td></tr><tr><td data-num=\"5\"></td><td><pre>&#125;</pre></td></tr><tr><td data-num=\"6\"></td><td><pre>//对象转化为json字符串&#123;\"name\" : \"qinjiang\"，\"age\":3,\"sex\":\"男\"&#125;</pre></td></tr><tr><td data-num=\"7\"></td><td><pre>var jsonUser = JSON. stringi fy(user);</pre></td></tr><tr><td data-num=\"8\"></td><td><pre>//json字符串转化为对象参数为json 字符串</pre></td></tr><tr><td data-num=\"9\"></td><td><pre>var obj = JSON. parse(' &#123;\"name\":\"qinjiang\", \"age\":3,\"sex\":\"男\"&#125;');</pre></td></tr><tr><td data-num=\"10\"></td><td><pre></pre></td></tr><tr><td data-num=\"11\"></td><td><pre></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>对象于json的区别</pre></td></tr><tr><td data-num=\"13\"></td><td><pre>var obj =&#123;a: 'hel1o' ,b:'he11ob'&#125;;</pre></td></tr><tr><td data-num=\"14\"></td><td><pre>var json ='&#123;\"a\":\"he11o\",\"b\":\"he11ob!\"&#125;'</pre></td></tr></table></figure><h1 id=\"ajax\"><a class=\"anchor\" href=\"#ajax\">#</a> Ajax</h1>\n<figure class=\"highlight html\"><figcaption data-lang=\"HTML\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>原生的js写法xhr 异步请求</pre></td></tr><tr><td data-num=\"2\"></td><td><pre>jQuey封装好的方法$(\"#name'\").ajax(\")</pre></td></tr><tr><td data-num=\"3\"></td><td><pre>axios请求</pre></td></tr></table></figure>",
            "tags": [
                "前端",
                "JavaSciprt",
                "前端"
            ]
        },
        {
            "id": "https://youhuamao.github.io/2022/09/04/front/JavaSciprt/jQuery/",
            "url": "https://youhuamao.github.io/2022/09/04/front/JavaSciprt/jQuery/",
            "title": "jQuery",
            "date_published": "2022-09-03T16:00:00.000Z",
            "content_html": "<h1 id=\"获取-jquery\"><a class=\"anchor\" href=\"#获取-jquery\">#</a> 获取 jQuery</h1>\n<figure class=\"highlight html\"><figcaption data-lang=\"HTML\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token doctype\"><span class=\"token punctuation\">&lt;!</span><span class=\"token doctype-tag\">DOCTYPE</span> <span class=\"token name\">html</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>html</span> <span class=\"token attr-name\">lang</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>en<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>head</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>meta</span> <span class=\"token attr-name\">charset</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>UTF-8<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>title</span><span class=\"token punctuation\">></span></span>Tit1e<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>title</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>        <span class=\"token comment\">&lt;!--cdn 引入 --></span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>script</span> <span class=\"token attr-name\">src</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>https: //cdn. bootcss. com/jquery/3.4.1/core.js<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span><span class=\"token script\"></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>script</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>script</span> <span class=\"token attr-name\">src</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>1ib/jquery-3.4.1. js<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span><span class=\"token script\"><span class=\"token language-javascript\"><span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span> script<span class=\"token operator\">></span> #本地引入</pre></td></tr><tr><td data-num=\"9\"></td><td><pre><span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>head<span class=\"token operator\">></span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre><span class=\"token operator\">&lt;</span>body<span class=\"token operator\">></span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre><span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>body<span class=\"token operator\">></span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre><span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>html<span class=\"token operator\">></span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre></pre></td></tr><tr><td data-num=\"14\"></td><td><pre><span class=\"token operator\">&lt;</span>body<span class=\"token operator\">></span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre><span class=\"token operator\">&lt;</span>a href<span class=\"token operator\">=</span><span class=\"token string\">\"\"</span> id<span class=\"token operator\">=</span><span class=\"token string\">\"test-jquery\"</span><span class=\"token operator\">></span> 点我<span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>a<span class=\"token operator\">></span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre><span class=\"token operator\">&lt;</span>script<span class=\"token operator\">></span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>    <span class=\"token comment\">// 选择器就是 css 的选贼器</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>    <span class=\"token function\">$</span><span class=\"token punctuation\">(</span><span class=\"token string\">'#test-jquery'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">click</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>    <span class=\"token function\">alert</span><span class=\"token punctuation\">(</span><span class=\"token string\">'hello, jQuery'</span> <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre></span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>script</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>body</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>公式 $(selctor).action()</pre></td></tr></table></figure><h1 id=\"选择器\"><a class=\"anchor\" href=\"#选择器\">#</a> 选择器</h1>\n<figure class=\"highlight html\"><figcaption data-lang=\"HTML\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>//原生js，选择器少，麻烦不好记</pre></td></tr><tr><td data-num=\"2\"></td><td><pre>//标签</pre></td></tr><tr><td data-num=\"3\"></td><td><pre>document. getE lementsByTagName () ;</pre></td></tr><tr><td data-num=\"4\"></td><td><pre>//id</pre></td></tr><tr><td data-num=\"5\"></td><td><pre>document. getE1 ementById() ;</pre></td></tr><tr><td data-num=\"6\"></td><td><pre>//类</pre></td></tr><tr><td data-num=\"7\"></td><td><pre>document. getE 1 ementsByClassName () ;</pre></td></tr><tr><td data-num=\"8\"></td><td><pre>//jquery CsS 中的选择器它全部都能用!</pre></td></tr><tr><td data-num=\"9\"></td><td><pre>$('p').c1ick(); //标签选择器</pre></td></tr><tr><td data-num=\"10\"></td><td><pre>$('#id1'). c1ick(); //id选择器</pre></td></tr><tr><td data-num=\"11\"></td><td><pre>$(' .class1').click() //class选择器 </pre></td></tr><tr><td data-num=\"12\"></td><td><pre></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>文档网站 http://jguery.cuishifeng.cn/</pre></td></tr></table></figure><h1 id=\"事件\"><a class=\"anchor\" href=\"#事件\">#</a> 事件</h1>\n<figure class=\"highlight html\"><figcaption data-lang=\"HTML\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>style</span><span class=\"token punctuation\">></span></span><span class=\"token style\"><span class=\"token language-css\"></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>    <span class=\"token selector\">#divMove</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    $<span class=\"token punctuation\">(</span>selector<span class=\"token punctuation\">)</span>. <span class=\"token function\">action</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    <span class=\"token property\">width</span><span class=\"token punctuation\">:</span> 500px<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    <span class=\"token property\">height</span><span class=\"token punctuation\">:</span> 500px<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>    <span class=\"token property\">border</span><span class=\"token punctuation\">:</span> 1px solid red<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre></span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>style</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>head</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>body</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre><span class=\"token comment\">&lt;!-- 要求：获取鼠标当前的一 - 个坐标 --></span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>mouse : <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>span</span> <span class=\"token attr-name\">id</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>mouseMove<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>span</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span> <span class=\"token attr-name\">id</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>divMove<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>在这里移动鼠标试试</pre></td></tr><tr><td data-num=\"15\"></td><td><pre><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>script</span><span class=\"token punctuation\">></span></span><span class=\"token script\"><span class=\"token language-javascript\"></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>    <span class=\"token comment\">// 当网页元素加载完毕之后，响应事件</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>    <span class=\"token function\">$</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>        <span class=\"token function\">$</span><span class=\"token punctuation\">(</span> <span class=\"token string\">' #divMove'</span> <span class=\"token punctuation\">)</span> <span class=\"token punctuation\">.</span> <span class=\"token function\">mousemove</span><span class=\"token punctuation\">(</span> <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">e</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>            <span class=\"token function\">$</span><span class=\"token punctuation\">(</span> <span class=\"token string\">' #mouseMove'</span> <span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">text</span><span class=\"token punctuation\">(</span><span class=\"token string\">'x:'</span><span class=\"token constant\">T</span><span class=\"token operator\">+</span>e<span class=\"token punctuation\">.</span>pageX <span class=\"token operator\">+</span> <span class=\"token string\">'y:'</span><span class=\"token operator\">+</span>e<span class=\"token punctuation\">.</span> pageY<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre></span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>script</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>body</span><span class=\"token punctuation\">></span></span></pre></td></tr></table></figure><h1 id=\"操作dom\"><a class=\"anchor\" href=\"#操作dom\">#</a> 操作 DOM</h1>\n<ul>\n<li>节点文本操作</li>\n</ul>\n<figure class=\"highlight html\"><figcaption data-lang=\"HTML\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>ul</span> <span class=\"token attr-name\">id</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>test-ul<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>li</span> <span class=\"token attr-name\">class</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>js<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>JavaScript<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>li</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>li</span> <span class=\"token attr-name\">name</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>python<span class=\"token punctuation\">\"</span></span> <span class=\"token punctuation\">></span></span>Python<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>li</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>ul</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre></pre></td></tr><tr><td data-num=\"6\"></td><td><pre></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>$(' #test-u1 1i [name=python]'). text(; //获得值</pre></td></tr><tr><td data-num=\"8\"></td><td><pre>$(' #test-u1 1i [name=python]'). text('设置值'); //设置值</pre></td></tr><tr><td data-num=\"9\"></td><td><pre>$( ' #test-u1').htm1(); //获得值</pre></td></tr><tr><td data-num=\"10\"></td><td><pre>$(' #test-ul').htm1(' <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>strong</span><span class=\"token punctuation\">></span></span> 123<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>strong</span><span class=\"token punctuation\">></span></span>'): //设置值</pre></td></tr></table></figure><h1 id=\"元素的显示和隐藏\"><a class=\"anchor\" href=\"#元素的显示和隐藏\">#</a> 元素的显示和隐藏</h1>\n<ul>\n<li>本质 display :none</li>\n</ul>\n<figure class=\"highlight html\"><figcaption data-lang=\"HTML\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>$(' #test-u1 1i [name=python]').show()</pre></td></tr><tr><td data-num=\"2\"></td><td><pre>$(' #test-u11i [name=python]').hide()</pre></td></tr></table></figure><ul>\n<li>娱乐测试</li>\n</ul>\n<figure class=\"highlight html\"><figcaption data-lang=\"HTML\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>$(window).width()</pre></td></tr><tr><td data-num=\"2\"></td><td><pre>$ (window) . hei ght()</pre></td></tr><tr><td data-num=\"3\"></td><td><pre>$(' #test-u11i [name=python] '). togg1e();</pre></td></tr></table></figure>",
            "tags": [
                "前端",
                "JavaSciprt",
                "前端"
            ]
        },
        {
            "id": "https://youhuamao.github.io/2022/09/04/front/JavaSciprt/%E6%93%8D%E4%BD%9CBOM%E5%AF%B9%E8%B1%A1/",
            "url": "https://youhuamao.github.io/2022/09/04/front/JavaSciprt/%E6%93%8D%E4%BD%9CBOM%E5%AF%B9%E8%B1%A1/",
            "title": "操作BOM（浏览器对象模型）对象",
            "date_published": "2022-09-03T16:00:00.000Z",
            "content_html": "<h1 id=\"操作bom浏览器对象模型对象\"><a class=\"anchor\" href=\"#操作bom浏览器对象模型对象\">#</a> 操作 BOM（浏览器对象模型）对象</h1>\n<ul>\n<li>window 代表浏览器窗口</li>\n</ul>\n<figure class=\"highlight html\"><figcaption data-lang=\"HTML\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>window.alert(1)</pre></td></tr><tr><td data-num=\"2\"></td><td><pre>undefined</pre></td></tr><tr><td data-num=\"3\"></td><td><pre>wi ndow. innerHei ght</pre></td></tr><tr><td data-num=\"4\"></td><td><pre>258</pre></td></tr><tr><td data-num=\"5\"></td><td><pre>window. innerwi dth</pre></td></tr><tr><td data-num=\"6\"></td><td><pre>919</pre></td></tr><tr><td data-num=\"7\"></td><td><pre>window. outerHei ght</pre></td></tr><tr><td data-num=\"8\"></td><td><pre>994</pre></td></tr><tr><td data-num=\"9\"></td><td><pre>wi ndow. outerwi dth</pre></td></tr><tr><td data-num=\"10\"></td><td><pre>919</pre></td></tr><tr><td data-num=\"11\"></td><td><pre>//大家可以调整浏览器窗口试试...</pre></td></tr></table></figure><ul>\n<li>Navigator</li>\n</ul>\n<figure class=\"highlight html\"><figcaption data-lang=\"HTML\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>Navigator ,封装了浏览器的信息</pre></td></tr><tr><td data-num=\"2\"></td><td><pre>navi gator . appName</pre></td></tr><tr><td data-num=\"3\"></td><td><pre>\"Netscape'</pre></td></tr><tr><td data-num=\"4\"></td><td><pre>navi gator . appVersi on</pre></td></tr><tr><td data-num=\"5\"></td><td><pre>\"5.0 (windows NT 10.0; W0W64) App7ewebkit/537.36 (KHTML，1ike Gecko)</pre></td></tr><tr><td data-num=\"6\"></td><td><pre>Chrome/63.0.3239.132 Safari/537. 36\"</pre></td></tr><tr><td data-num=\"7\"></td><td><pre>navi gator . use rAgent</pre></td></tr><tr><td data-num=\"8\"></td><td><pre>\"Mozi11a/5.0 (Windows NT 10.0; W0W64) App lewebkit/537.36 (KHTML， like</pre></td></tr><tr><td data-num=\"9\"></td><td><pre>Gecko) Chrome/63.0. 3239.132 Safari/537. 36\"</pre></td></tr><tr><td data-num=\"10\"></td><td><pre>navi gator. platform</pre></td></tr><tr><td data-num=\"11\"></td><td><pre>\"win32\"</pre></td></tr></table></figure><ul>\n<li>screen</li>\n</ul>\n<figure class=\"highlight html\"><figcaption data-lang=\"HTML\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>代表屏幕尺寸</pre></td></tr><tr><td data-num=\"2\"></td><td><pre>sc reen. wi dth</pre></td></tr><tr><td data-num=\"3\"></td><td><pre>1920 px</pre></td></tr><tr><td data-num=\"4\"></td><td><pre>screen.hei ght</pre></td></tr><tr><td data-num=\"5\"></td><td><pre>1080 px</pre></td></tr></table></figure><ul>\n<li>location</li>\n</ul>\n<figure class=\"highlight html\"><figcaption data-lang=\"HTML\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>location代表当前页面的URL信息</pre></td></tr><tr><td data-num=\"2\"></td><td><pre>host: \"www. bai du. com\"</pre></td></tr><tr><td data-num=\"3\"></td><td><pre>href : \"https://www. bai du. com/\"</pre></td></tr><tr><td data-num=\"4\"></td><td><pre>protoco1 :\"'https:\"</pre></td></tr><tr><td data-num=\"5\"></td><td><pre>reload:f reload() //刷新网页</pre></td></tr><tr><td data-num=\"6\"></td><td><pre>//设置新的地址</pre></td></tr><tr><td data-num=\"7\"></td><td><pre>locati on. assi gn('https://b1og. kuangstudy. com/')</pre></td></tr></table></figure><ul>\n<li>document</li>\n</ul>\n<figure class=\"highlight html\"><figcaption data-lang=\"HTML\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>document代表当前的页面，HTML DOM文档树</pre></td></tr><tr><td data-num=\"2\"></td><td><pre>document. title</pre></td></tr><tr><td data-num=\"3\"></td><td><pre>\"百度一下，你就知道\" </pre></td></tr><tr><td data-num=\"4\"></td><td><pre>document. title='狂神说'</pre></td></tr><tr><td data-num=\"5\"></td><td><pre>\"狂神说\"</pre></td></tr><tr><td data-num=\"6\"></td><td><pre></pre></td></tr><tr><td data-num=\"7\"></td><td><pre></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>获取具体的文档树节点</pre></td></tr><tr><td data-num=\"9\"></td><td><pre><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>dl</span> <span class=\"token attr-name\">id</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>app<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>dt</span><span class=\"token punctuation\">></span></span>Java<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>dt</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>dd</span><span class=\"token punctuation\">></span></span> JavaSE<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>dd</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>dd</span><span class=\"token punctuation\">></span></span> JavaEE<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>dd</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>dl</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>script</span><span class=\"token punctuation\">></span></span><span class=\"token script\"><span class=\"token language-javascript\"></pre></td></tr><tr><td data-num=\"15\"></td><td><pre><span class=\"token keyword\">var</span> dl <span class=\"token operator\">=</span> document <span class=\"token punctuation\">.</span> <span class=\"token function\">getElementById</span><span class=\"token punctuation\">(</span><span class=\"token string\">' app '</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre></span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>script</span><span class=\"token punctuation\">></span></span>=</pre></td></tr><tr><td data-num=\"17\"></td><td><pre></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>获取cookie</pre></td></tr><tr><td data-num=\"19\"></td><td><pre>document . cookie</pre></td></tr><tr><td data-num=\"20\"></td><td><pre>guid=111872281.88375976493059340.1578110638877.133; monitor_ count=1\"</pre></td></tr><tr><td data-num=\"21\"></td><td><pre>服务器端可以设置cookie: httpOnly</pre></td></tr></table></figure><ul>\n<li>history</li>\n</ul>\n<figure class=\"highlight html\"><figcaption data-lang=\"HTML\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>history代表浏览器的历史记录</pre></td></tr><tr><td data-num=\"2\"></td><td><pre></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>history. back() //后退</pre></td></tr><tr><td data-num=\"4\"></td><td><pre>history. forward() //前进</pre></td></tr></table></figure>",
            "tags": [
                "前端",
                "JavaSciprt",
                "前端"
            ]
        },
        {
            "id": "https://youhuamao.github.io/2022/09/04/front/JavaSciprt/%E6%93%8D%E4%BD%9CDOM%E5%AF%B9%E8%B1%A1/",
            "url": "https://youhuamao.github.io/2022/09/04/front/JavaSciprt/%E6%93%8D%E4%BD%9CDOM%E5%AF%B9%E8%B1%A1/",
            "title": "操作BOM（浏览器对象模型）对象",
            "date_published": "2022-09-03T16:00:00.000Z",
            "content_html": "<h1 id=\"核心\"><a class=\"anchor\" href=\"#核心\">#</a> 核心</h1>\n<figure class=\"highlight html\"><figcaption data-lang=\"HTML\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>浏览器网页就是一一个Dom树形结构!</pre></td></tr><tr><td data-num=\"2\"></td><td><pre>●更新:更新Dom节点</pre></td></tr><tr><td data-num=\"3\"></td><td><pre>●遍历dom节点:得到Dom节点</pre></td></tr><tr><td data-num=\"4\"></td><td><pre>●删除:删除一个Dom节点</pre></td></tr><tr><td data-num=\"5\"></td><td><pre>●添加:添加一个新的节点</pre></td></tr><tr><td data-num=\"6\"></td><td><pre>要操作一个Dom节点，就必须要先获得这个Dom节点</pre></td></tr></table></figure><h1 id=\"获得dom节点\"><a class=\"anchor\" href=\"#获得dom节点\">#</a> 获得 DOM 节点</h1>\n<figure class=\"highlight html\"><figcaption data-lang=\"HTML\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>//对应CSS选择器</pre></td></tr><tr><td data-num=\"2\"></td><td><pre>var h1 = document . getElementsByTagName('h1' );</pre></td></tr><tr><td data-num=\"3\"></td><td><pre>var p1 = document . getElementById('p1');</pre></td></tr><tr><td data-num=\"4\"></td><td><pre>var p2 = document. getElementsByClassName('p2');</pre></td></tr><tr><td data-num=\"5\"></td><td><pre>var father = document. getE1 ementById(' father');</pre></td></tr><tr><td data-num=\"6\"></td><td><pre>var childrens = father. children; //获取父节点下的所有 子节点</pre></td></tr><tr><td data-num=\"7\"></td><td><pre>// father.firstChild</pre></td></tr><tr><td data-num=\"8\"></td><td><pre>// father.lastChild</pre></td></tr></table></figure><h1 id=\"更新节点\"><a class=\"anchor\" href=\"#更新节点\">#</a> 更新节点</h1>\n<figure class=\"highlight html\"><figcaption data-lang=\"HTML\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span> <span class=\"token attr-name\">id</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>id1<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>script</span><span class=\"token punctuation\">></span></span><span class=\"token script\"><span class=\"token language-javascript\"></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token keyword\">var</span> id1 <span class=\"token operator\">=</span> document<span class=\"token punctuation\">.</span> getE1 <span class=\"token function\">ementById</span><span class=\"token punctuation\">(</span><span class=\"token string\">'id1'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre></span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>script</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>操作文本</pre></td></tr><tr><td data-num=\"8\"></td><td><pre>id1.innerText='456修改文本的值</pre></td></tr><tr><td data-num=\"9\"></td><td><pre>id1.innerHTML= '<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>strong</span><span class=\"token punctuation\">></span></span>123<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>strong</span><span class=\"token punctuation\">></span></span>可以解析HTML文本标签</pre></td></tr><tr><td data-num=\"10\"></td><td><pre></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>操作css</pre></td></tr><tr><td data-num=\"12\"></td><td><pre>id1.style.co1or = 'ye11ow' ;</pre></td></tr><tr><td data-num=\"13\"></td><td><pre>id1.sty1e.fontSize= ' 20px';</pre></td></tr><tr><td data-num=\"14\"></td><td><pre>id1.style.padding ='2em'</pre></td></tr></table></figure><h1 id=\"删除节点\"><a class=\"anchor\" href=\"#删除节点\">#</a> 删除节点</h1>\n<pre><code class=\"language-hmtl\">删除节点的步骤，先获取父节点，再通过父节点删除自己\n\n&lt;div i d=&quot;father&quot;&gt;\n    &lt;h1&gt;标题一&lt;/h1&gt;\n    &lt;p id=&quot;p1&quot;&gt;p1&lt;/p&gt;\n    &lt;p class=&quot;p2&quot;&gt;p2&lt;/p&gt;\n&lt;/div&gt;\n&lt;script&gt;\n    var se1f = document. getElementById('p1');\n    var father = p1. parentE lement;\n    father. removeChild(se1f)\n\n    //删除节点是一个动态的过程\n    father. removeChild(father . children [0])\n    father . removeChild(father . children [1])\n    father. removechild(father. children [2])\n&lt;/script&gt;\n删除多个节点的时候，children是在时刻变化的，删除节点的时候一 定要注意!\n\n</code></pre>\n<h1 id=\"插入节点\"><a class=\"anchor\" href=\"#插入节点\">#</a> 插入节点</h1>\n<figure class=\"highlight html\"><figcaption data-lang=\"HTML\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>我们获得了某个Dom节点，假设这个dom节点是空的，我们通过innerHTML就可以增加一个元素</pre></td></tr><tr><td data-num=\"2\"></td><td><pre>了，但是这个DOM节点已经存在元素了，我们就不能这么干了!会产生覆盖,所以要追加</pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>p</span> <span class=\"token attr-name\">id</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>js <span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>JavaScript<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>p</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span> <span class=\"token attr-name\">id</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>list<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>p</span> <span class=\"token attr-name\">id</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>se<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>JavaSE<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>p</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>p</span> <span class=\"token attr-name\">id</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>ee<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>JavaEE<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>p</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>p</span> <span class=\"token attr-name\">id</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>me<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>JavaME<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>p</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>script</span><span class=\"token punctuation\">></span></span><span class=\"token script\"><span class=\"token language-javascript\"></pre></td></tr><tr><td data-num=\"10\"></td><td><pre><span class=\"token keyword\">var</span> js <span class=\"token operator\">=</span> document<span class=\"token punctuation\">.</span><span class=\"token function\">getElementById</span><span class=\"token punctuation\">(</span><span class=\"token string\">'js'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre><span class=\"token keyword\">var</span> 1ist <span class=\"token operator\">=</span> document<span class=\"token punctuation\">.</span><span class=\"token function\">getElementById</span><span class=\"token punctuation\">(</span><span class=\"token string\">'list'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>list<span class=\"token punctuation\">.</span><span class=\"token function\">appendChild</span><span class=\"token punctuation\">(</span>js<span class=\"token punctuation\">)</span><span class=\"token operator\">|</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre></span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>script</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>追加结果</pre></td></tr><tr><td data-num=\"16\"></td><td><pre></pre></td></tr><tr><td data-num=\"17\"></td><td><pre><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span> <span class=\"token attr-name\">id</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>list<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>p</span> <span class=\"token attr-name\">id</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>se<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>JavaSE<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>p</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>p</span> <span class=\"token attr-name\">id</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>ee<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>JavaEE<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>p</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>p</span> <span class=\"token attr-name\">id</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>me<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>JavaME<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>p</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>p</span> <span class=\"token attr-name\">id</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>js <span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>JavaScript<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>p</span><span class=\"token punctuation\">></span></span> </pre></td></tr><tr><td data-num=\"22\"></td><td><pre><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">></span></span></pre></td></tr></table></figure><h1 id=\"创建标签实现插入\"><a class=\"anchor\" href=\"#创建标签实现插入\">#</a> 创建标签实现插入</h1>\n<figure class=\"highlight html\"><figcaption data-lang=\"HTML\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>script</span><span class=\"token punctuation\">></span></span><span class=\"token script\"><span class=\"token language-javascript\"></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">var</span> js <span class=\"token operator\">=</span> document<span class=\"token punctuation\">.</span> <span class=\"token function\">getElementById</span><span class=\"token punctuation\">(</span><span class=\"token string\">'js'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// 已经存在的节点</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token keyword\">var</span> 1ist <span class=\"token operator\">=</span> document<span class=\"token punctuation\">.</span> <span class=\"token function\">getElementById</span><span class=\"token punctuation\">(</span><span class=\"token string\">'list'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token comment\">// 通过 JS 创建一个新的节点</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token keyword\">var</span> newP <span class=\"token operator\">=</span> document<span class=\"token punctuation\">.</span> <span class=\"token function\">createElement</span><span class=\"token punctuation\">(</span><span class=\"token string\">'p'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span class=\"token comment\">// 创建一个 p 标签</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>newP<span class=\"token punctuation\">.</span> id <span class=\"token operator\">=</span> <span class=\"token string\">' newP'</span> <span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>newP<span class=\"token punctuation\">.</span> innerText <span class=\"token operator\">=</span> <span class=\"token string\">'He11o, Kuangshen'</span> <span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token comment\">// 创建一个标签节点 (通过这个属性，可以设置任意的值)</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre><span class=\"token keyword\">var</span> myScript <span class=\"token operator\">=</span> document<span class=\"token punctuation\">.</span> <span class=\"token function\">createElement</span><span class=\"token punctuation\">(</span> <span class=\"token string\">'script'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>myScript<span class=\"token punctuation\">.</span> <span class=\"token function\">setAttribute</span><span class=\"token punctuation\">(</span><span class=\"token string\">'type'</span><span class=\"token punctuation\">,</span><span class=\"token string\">'text/javascript'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre></span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>script</span><span class=\"token punctuation\">></span></span></pre></td></tr></table></figure><h1 id=\"插入新节点\"><a class=\"anchor\" href=\"#插入新节点\">#</a> 插入新节点</h1>\n<figure class=\"highlight html\"><figcaption data-lang=\"HTML\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>var js = document. getE1 ementById('js); 7/已经存在的节点</pre></td></tr><tr><td data-num=\"2\"></td><td><pre>var 1ist = document. getElementById('list');</pre></td></tr><tr><td data-num=\"3\"></td><td><pre>//通过JS创建一个新的节点</pre></td></tr><tr><td data-num=\"4\"></td><td><pre>var newP = document. createElement('p');//创建一- 个p标签</pre></td></tr><tr><td data-num=\"5\"></td><td><pre>newP.id='newP';</pre></td></tr><tr><td data-num=\"6\"></td><td><pre>newP. innerText = 'He11o ，Kuangshen';</pre></td></tr><tr><td data-num=\"7\"></td><td><pre>//创建一个标签节点</pre></td></tr><tr><td data-num=\"8\"></td><td><pre>var myScript = document. createElement('script');</pre></td></tr><tr><td data-num=\"9\"></td><td><pre>myScript. setAttribute(' type','text/javascript');</pre></td></tr><tr><td data-num=\"10\"></td><td><pre>//可以创建一 个sty1e标签</pre></td></tr><tr><td data-num=\"11\"></td><td><pre>var myStyle= document. createElement('style'); //创建 了一个空sty1e标签</pre></td></tr><tr><td data-num=\"12\"></td><td><pre>myStyle. setAttribute(' type'，' text/css');</pre></td></tr><tr><td data-num=\"13\"></td><td><pre>mystyle. innerHTML = ' body&#123;background-color: chartreuse;&#125;'; //设置标签内容</pre></td></tr><tr><td data-num=\"14\"></td><td><pre>document . getElementsByTagName( 'head') [0] . appendChild(mySty1e)</pre></td></tr></table></figure><h1 id=\"insert\"><a class=\"anchor\" href=\"#insert\">#</a> insert</h1>\n<figure class=\"highlight html\"><figcaption data-lang=\"HTML\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>var ee = document . getElementById('ee');</pre></td></tr><tr><td data-num=\"2\"></td><td><pre>var js = document . getElementById('js');</pre></td></tr><tr><td data-num=\"3\"></td><td><pre>var 1ist = document. getE1 ementById('list' );</pre></td></tr><tr><td data-num=\"4\"></td><td><pre>//要包含的节点. insertBefore (newNode，targetNode)</pre></td></tr><tr><td data-num=\"5\"></td><td><pre>list. insertBefore(js,ee);</pre></td></tr></table></figure>",
            "tags": [
                "前端",
                "JavaSciprt",
                "前端"
            ]
        },
        {
            "id": "https://youhuamao.github.io/2022/09/04/front/JavaSciprt/%E6%93%8D%E4%BD%9C%E8%A1%A8%E5%8D%95/",
            "url": "https://youhuamao.github.io/2022/09/04/front/JavaSciprt/%E6%93%8D%E4%BD%9C%E8%A1%A8%E5%8D%95/",
            "title": "操作表单",
            "date_published": "2022-09-03T16:00:00.000Z",
            "content_html": "<h1 id=\"表单是什么form-dom-树\"><a class=\"anchor\" href=\"#表单是什么form-dom-树\">#</a> 表单是什么 form DOM 树</h1>\n<ul>\n<li>文本框 text</li>\n<li>下拉框 &lt;select&gt;</li>\n<li>单选框 radio</li>\n<li>多选框 checkbox</li>\n<li>隐藏域 hidden</li>\n<li>密码框 password</li>\n<li>......</li>\n</ul>\n<h1 id=\"获取提交信息\"><a class=\"anchor\" href=\"#获取提交信息\">#</a> 获取提交信息</h1>\n<figure class=\"highlight html\"><figcaption data-lang=\"HTML\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>form</span> <span class=\"token attr-name\">action</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span> <span class=\"token punctuation\">\"</span>post<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>p</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>span</span><span class=\"token punctuation\">></span></span>用户名: <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>span</span><span class=\"token punctuation\">></span></span> <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>input</span> <span class=\"token attr-name\">type</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>text<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">id</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>username<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>p</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    <span class=\"token comment\">&lt;!-- 多选框的值。就是定义好的 value --></span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>p</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>span</span><span class=\"token punctuation\">></span></span>性别: <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>span</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>input</span> <span class=\"token attr-name\">type</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>radio<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">name</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>sex<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">value</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>man<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">id</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>boy<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span> 男</pre></td></tr><tr><td data-num=\"9\"></td><td><pre>        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>input</span> <span class=\"token attr-name\">type</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>radio<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">name</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>sex<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">value</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>women<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">id</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>girl<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span> 女</pre></td></tr><tr><td data-num=\"10\"></td><td><pre>    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>p</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>form</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>script</span><span class=\"token punctuation\">></span></span><span class=\"token script\"><span class=\"token language-javascript\"></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>    <span class=\"token keyword\">var</span> input_ text <span class=\"token operator\">=</span> document <span class=\"token punctuation\">.</span> <span class=\"token function\">getElementById</span><span class=\"token punctuation\">(</span> <span class=\"token string\">'username'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>    <span class=\"token keyword\">var</span> boy_ radio <span class=\"token operator\">=</span> document <span class=\"token punctuation\">.</span> <span class=\"token function\">getElementById</span><span class=\"token punctuation\">(</span><span class=\"token string\">' boy'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>    <span class=\"token keyword\">var</span> girl_ radio <span class=\"token operator\">=</span> document <span class=\"token punctuation\">.</span> <span class=\"token function\">getElementById</span><span class=\"token punctuation\">(</span><span class=\"token string\">'gir1'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>    <span class=\"token comment\">// 得到输入框的值</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>    input_ text<span class=\"token punctuation\">.</span> value</pre></td></tr><tr><td data-num=\"18\"></td><td><pre>    <span class=\"token comment\">// 修改输入框的值</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>    input_ text<span class=\"token punctuation\">.</span> value <span class=\"token operator\">=</span> <span class=\"token string\">'123'</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>    <span class=\"token comment\">// 对于单选框， 多选框等等固定的值， boy_ radio. value 只能取到当前的值</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>    boy_ radio<span class=\"token punctuation\">.</span> checked<span class=\"token punctuation\">;</span> <span class=\"token comment\">// 查看返回的结果，是否为 true, 如果为 true, 则被选中</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>    gir1_ radio<span class=\"token punctuation\">.</span> checked <span class=\"token operator\">=</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">;</span> <span class=\"token operator\">/</span><span class=\"token function\">赋值</span> <span class=\"token punctuation\">(</span>为<span class=\"token boolean\">true</span>代表被选中<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre></span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>script</span><span class=\"token punctuation\">></span></span></pre></td></tr></table></figure><h1 id=\"提交表单\"><a class=\"anchor\" href=\"#提交表单\">#</a> 提交表单</h1>\n<figure class=\"highlight html\"><figcaption data-lang=\"HTML\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\">&lt;!--</pre></td></tr><tr><td data-num=\"2\"></td><td><pre>表单绑定提交事件</pre></td></tr><tr><td data-num=\"3\"></td><td><pre>onsubmit = 绑定一个提交检测的函数，true, </pre></td></tr><tr><td data-num=\"4\"></td><td><pre>false</pre></td></tr><tr><td data-num=\"5\"></td><td><pre>将这个结果返回给表单，使用 onsubmit 接收！</pre></td></tr><tr><td data-num=\"6\"></td><td><pre>onsubmit=\"return aaa 0)</pre></td></tr><tr><td data-num=\"7\"></td><td><pre>1</pre></td></tr><tr><td data-num=\"8\"></td><td><pre>--></span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre></pre></td></tr><tr><td data-num=\"10\"></td><td><pre><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>form</span> <span class=\"token attr-name\">action</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span> <span class=\"token punctuation\">\"</span>https:/ /www. baidu. com/<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">method</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span> post<span class=\"token punctuation\">\"</span></span> <span class=\"token special-attr\"><span class=\"token attr-name\">onsubmit</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span><span class=\"token value javascript language-javascript\"><span class=\"token keyword\">return</span> <span class=\"token function\">aaa</span><span class=\"token punctuation\">(</span> <span class=\"token punctuation\">)</span></span><span class=\"token punctuation\">\"</span></span></span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>p</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>span</span><span class=\"token punctuation\">></span></span>用户名: <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>span</span><span class=\"token punctuation\">></span></span> <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>input</span> <span class=\"token attr-name\">type</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span> <span class=\"token punctuation\">\"</span>text<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">id</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>username<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">name</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>username<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>p</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>p</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>span</span><span class=\"token punctuation\">></span></span>密码: <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>span</span><span class=\"token punctuation\">></span></span> <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>input</span> <span class=\"token attr-name\">type</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span> <span class=\"token punctuation\">\"</span> password<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">id</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span> input -lpassword<span class=\"token punctuation\">\"</span></span> <span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>p</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>&lt; input type=\"hidden\" id=\" md5- password\" name= \"password\"></pre></td></tr><tr><td data-num=\"18\"></td><td><pre><span class=\"token comment\">&lt;!-- 绑定事件 onclick 被点击 --></span> </pre></td></tr><tr><td data-num=\"19\"></td><td><pre><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>button</span> <span class=\"token attr-name\">type</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span> submit<span class=\"token punctuation\">\"</span></span> <span class=\"token punctuation\">></span></span>提交<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>button</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>form</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>script</span><span class=\"token punctuation\">></span></span><span class=\"token script\"><span class=\"token language-javascript\"></pre></td></tr><tr><td data-num=\"22\"></td><td><pre><span class=\"token keyword\">function</span> <span class=\"token function\">aaa</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>    <span class=\"token function\">aLert</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>    <span class=\"token keyword\">var</span> uname <span class=\"token operator\">=</span> document <span class=\"token punctuation\">.</span> <span class=\"token function\">getElementById</span><span class=\"token punctuation\">(</span><span class=\"token string\">'username'</span> <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre>    <span class=\"token keyword\">var</span> pwd <span class=\"token operator\">=</span> document <span class=\"token punctuation\">.</span> <span class=\"token function\">getElementById</span><span class=\"token punctuation\">(</span> <span class=\"token string\">' input-password'</span> <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre>    <span class=\"token keyword\">var</span> md5pwd <span class=\"token operator\">=</span> document <span class=\"token punctuation\">.</span> <span class=\"token function\">getElementById</span><span class=\"token punctuation\">(</span> <span class=\"token string\">' md5-password'</span> <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre>    md5pwd<span class=\"token punctuation\">.</span>value <span class=\"token operator\">=</span> <span class=\"token function\">md5</span> <span class=\"token punctuation\">(</span>pwd<span class=\"token punctuation\">.</span>value<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre>    <span class=\"token comment\">// 可以校验判断表单内容，true 就是通过提交，false, 阻止提交</span></pre></td></tr><tr><td data-num=\"29\"></td><td><pre>    <span class=\"token keyword\">return</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"30\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"31\"></td><td><pre></span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>script</span><span class=\"token punctuation\">></span></span></pre></td></tr></table></figure>",
            "tags": [
                "前端",
                "JavaSciprt",
                "前端"
            ]
        },
        {
            "id": "https://youhuamao.github.io/2022/09/04/front/JavaSciprt/%E9%9D%A2%E5%90%91%E5%AF%B9%E8%B1%A1%E7%BC%96%E7%A8%8B/",
            "url": "https://youhuamao.github.io/2022/09/04/front/JavaSciprt/%E9%9D%A2%E5%90%91%E5%AF%B9%E8%B1%A1%E7%BC%96%E7%A8%8B/",
            "title": "面向对象编程",
            "date_published": "2022-09-03T16:00:00.000Z",
            "content_html": "<h1 id=\"原型\"><a class=\"anchor\" href=\"#原型\">#</a> 原型</h1>\n<figure class=\"highlight html\"><figcaption data-lang=\"HTML\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>var Student = &#123;</pre></td></tr><tr><td data-num=\"2\"></td><td><pre>    name:“ginjiang\",</pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    age: 3,</pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    run: function () &#123;</pre></td></tr><tr><td data-num=\"5\"></td><td><pre>        console.1og(this.name + \" run....\");</pre></td></tr><tr><td data-num=\"6\"></td><td><pre>&#125;</pre></td></tr><tr><td data-num=\"7\"></td><td><pre>&#125;;</pre></td></tr><tr><td data-num=\"8\"></td><td><pre>var xiaoming = &#123;</pre></td></tr><tr><td data-num=\"9\"></td><td><pre>    name: \"xiaoming\"</pre></td></tr><tr><td data-num=\"10\"></td><td><pre>&#125;;</pre></td></tr><tr><td data-num=\"11\"></td><td><pre>xiaoming._ proto__ = user;</pre></td></tr></table></figure><h1 id=\"class\"><a class=\"anchor\" href=\"#class\">#</a> class</h1>\n<ul>\n<li>定义类，属性，方法</li>\n</ul>\n<figure class=\"highlight html\"><figcaption data-lang=\"HTML\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>//定义一个学生的类</pre></td></tr><tr><td data-num=\"2\"></td><td><pre>class Student&#123;</pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    constructor(name) &#123;</pre></td></tr><tr><td data-num=\"4\"></td><td><pre>        this.name = name;</pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    &#125;</pre></td></tr><tr><td data-num=\"6\"></td><td><pre>    he11o()&#123;</pre></td></tr><tr><td data-num=\"7\"></td><td><pre>        alert('he11o')</pre></td></tr><tr><td data-num=\"8\"></td><td><pre>    &#125;</pre></td></tr><tr><td data-num=\"9\"></td><td><pre>&#125;</pre></td></tr><tr><td data-num=\"10\"></td><td><pre>var xiaoming = new Student(\"xiaoming\");</pre></td></tr><tr><td data-num=\"11\"></td><td><pre>var xiaohong = new Student(\"xiaohong\");</pre></td></tr><tr><td data-num=\"12\"></td><td><pre>xiaoming.he11o()</pre></td></tr></table></figure><ul>\n<li>继承</li>\n</ul>\n<figure class=\"highlight html\"><figcaption data-lang=\"HTML\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>class Student&#123;</pre></td></tr><tr><td data-num=\"2\"></td><td><pre>    constructor(name) &#123;</pre></td></tr><tr><td data-num=\"3\"></td><td><pre>        this.name = name;</pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    &#125;</pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    he11o()&#123;</pre></td></tr><tr><td data-num=\"6\"></td><td><pre>        alert('he11o')</pre></td></tr><tr><td data-num=\"7\"></td><td><pre>    &#125;</pre></td></tr><tr><td data-num=\"8\"></td><td><pre>&#125;</pre></td></tr><tr><td data-num=\"9\"></td><td><pre></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>class XiaoStudent extends Student&#123;</pre></td></tr><tr><td data-num=\"11\"></td><td><pre>    constructor(name , grade)&#123;</pre></td></tr><tr><td data-num=\"12\"></td><td><pre>        super(name );</pre></td></tr><tr><td data-num=\"13\"></td><td><pre>        this. grade = grade;</pre></td></tr><tr><td data-num=\"14\"></td><td><pre>    &#125;</pre></td></tr><tr><td data-num=\"15\"></td><td><pre>    myGrade()&#123;</pre></td></tr><tr><td data-num=\"16\"></td><td><pre>        alert(我是一 名小学生')</pre></td></tr><tr><td data-num=\"17\"></td><td><pre>    &#125;</pre></td></tr><tr><td data-num=\"18\"></td><td><pre>&#125;</pre></td></tr><tr><td data-num=\"19\"></td><td><pre></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>var xiaoming = new Student (\"xiaoming\");</pre></td></tr><tr><td data-num=\"21\"></td><td><pre>var xiaohong = new xiaoStudent(\"xiaohong\",1);</pre></td></tr></table></figure><h1 id=\"原型链\"><a class=\"anchor\" href=\"#原型链\">#</a> 原型链</h1>\n",
            "tags": [
                "前端",
                "JavaSciprt",
                "前端"
            ]
        },
        {
            "id": "https://youhuamao.github.io/2022/09/03/front/JavaSciprt/%E5%87%BD%E6%95%B0/",
            "url": "https://youhuamao.github.io/2022/09/03/front/JavaSciprt/%E5%87%BD%E6%95%B0/",
            "title": "函数",
            "date_published": "2022-09-02T16:00:00.000Z",
            "content_html": "<h1 id=\"定义函数\"><a class=\"anchor\" href=\"#定义函数\">#</a> 定义函数</h1>\n<ul>\n<li>定义方式一</li>\n</ul>\n<figure class=\"highlight html\"><figcaption data-lang=\"HTML\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>绝对值函数</pre></td></tr><tr><td data-num=\"2\"></td><td><pre>function abs(x)&#123;</pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    if(x>=0)&#123;</pre></td></tr><tr><td data-num=\"4\"></td><td><pre>        return x;</pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    &#125;else&#123;</pre></td></tr><tr><td data-num=\"6\"></td><td><pre>        return -x;</pre></td></tr><tr><td data-num=\"7\"></td><td><pre>    &#125;</pre></td></tr><tr><td data-num=\"8\"></td><td><pre>&#125;</pre></td></tr><tr><td data-num=\"9\"></td><td><pre>一旦执行到return代表函数结束,返回结果! </pre></td></tr><tr><td data-num=\"10\"></td><td><pre>如果没有执行return，函数执行完也会返回结果，结果就是undefined</pre></td></tr></table></figure><ul>\n<li>定义方式二</li>\n</ul>\n<figure class=\"highlight html\"><figcaption data-lang=\"HTML\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>var abs = function(x)&#123; </pre></td></tr><tr><td data-num=\"2\"></td><td><pre>    if(x>=0)&#123;</pre></td></tr><tr><td data-num=\"3\"></td><td><pre>        return x;</pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    &#125;else&#123;</pre></td></tr><tr><td data-num=\"5\"></td><td><pre>        return -x;</pre></td></tr><tr><td data-num=\"6\"></td><td><pre>    &#125;</pre></td></tr><tr><td data-num=\"7\"></td><td><pre>&#125;</pre></td></tr><tr><td data-num=\"8\"></td><td><pre>function(x)&#123; ... &#125;这是一个匿名函数。但是可以把结果赋值给abs，通过abs就可以调用函数</pre></td></tr></table></figure><ul>\n<li>调用函数</li>\n</ul>\n<figure class=\"highlight html\"><figcaption data-lang=\"HTML\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>参数问题: javaScript 可以传任意个参数，也可以不传递参数~</pre></td></tr><tr><td data-num=\"2\"></td><td><pre>参数进来是否存在的问题?</pre></td></tr><tr><td data-num=\"3\"></td><td><pre>假设不存在参数，如果规避?</pre></td></tr><tr><td data-num=\"4\"></td><td><pre>var abs = function(x)&#123;</pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    //手动抛出异常来判断</pre></td></tr><tr><td data-num=\"6\"></td><td><pre>    if (typeof x!== 'number') &#123;</pre></td></tr><tr><td data-num=\"7\"></td><td><pre>        throw 'Not a Number' ;</pre></td></tr><tr><td data-num=\"8\"></td><td><pre>    &#125;</pre></td></tr><tr><td data-num=\"9\"></td><td><pre>    if(x>=0)&#123;</pre></td></tr><tr><td data-num=\"10\"></td><td><pre>        return x;</pre></td></tr><tr><td data-num=\"11\"></td><td><pre>    &#125;e1se&#123;</pre></td></tr><tr><td data-num=\"12\"></td><td><pre>        return -x;</pre></td></tr><tr><td data-num=\"13\"></td><td><pre>    &#125;</pre></td></tr><tr><td data-num=\"14\"></td><td><pre>&#125;</pre></td></tr></table></figure><ul>\n<li>arguments</li>\n</ul>\n<figure class=\"highlight html\"><figcaption data-lang=\"HTML\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>代表,传递进来的所有的参数，是一个数组!</pre></td></tr><tr><td data-num=\"2\"></td><td><pre>var abs = function(x)&#123;</pre></td></tr><tr><td data-num=\"3\"></td><td><pre>console.1ogC\"x=>\"+x);</pre></td></tr><tr><td data-num=\"4\"></td><td><pre>for (var i = 0; i&lt; arguments.1ength;i++)&#123;</pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    console.log(arguments[i]);</pre></td></tr><tr><td data-num=\"6\"></td><td><pre>    if(x>=0)&#123;</pre></td></tr><tr><td data-num=\"7\"></td><td><pre>        return x;</pre></td></tr><tr><td data-num=\"8\"></td><td><pre>    &#125;else&#123;</pre></td></tr><tr><td data-num=\"9\"></td><td><pre>        return -x;</pre></td></tr><tr><td data-num=\"10\"></td><td><pre>&#125;</pre></td></tr></table></figure><ul>\n<li>rest</li>\n</ul>\n<figure class=\"highlight html\"><figcaption data-lang=\"HTML\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>以前获取多余参数:</pre></td></tr><tr><td data-num=\"2\"></td><td><pre>if (arguments. 1ength>2)&#123; </pre></td></tr><tr><td data-num=\"3\"></td><td><pre>for (var i = 2; i&lt; arguments.length;i++)&#123;</pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    ...</pre></td></tr><tr><td data-num=\"5\"></td><td><pre>&#125;</pre></td></tr><tr><td data-num=\"6\"></td><td><pre></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>ES6引入的新特性，获取除了已经定义的参数之外的所有参数~ ...</pre></td></tr><tr><td data-num=\"8\"></td><td><pre>function aaa(a,b,...rest) &#123;</pre></td></tr><tr><td data-num=\"9\"></td><td><pre>    console.1og(\"a=>\"+a);</pre></td></tr><tr><td data-num=\"10\"></td><td><pre>    console.1og(\"b=>\"+b);</pre></td></tr><tr><td data-num=\"11\"></td><td><pre>    console.1og(rest);</pre></td></tr><tr><td data-num=\"12\"></td><td><pre>&#125;</pre></td></tr><tr><td data-num=\"13\"></td><td><pre>rest参数只能写在最后面，必须用...标识。</pre></td></tr></table></figure><h1 id=\"变量的作用域\"><a class=\"anchor\" href=\"#变量的作用域\">#</a> 变量的作用域</h1>\n<ul>\n<li>在 javascript 中，var 定义变量实际是有作用域的。<br />\n假设在函数体中声明，则在函数体外不可以使用～(非要想实现的话，后面可以研究一下闭包)</li>\n</ul>\n<figure class=\"highlight html\"><figcaption data-lang=\"HTML\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>function qj() &#123;</pre></td></tr><tr><td data-num=\"2\"></td><td><pre>    var x=1;</pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    x=x+1;</pre></td></tr><tr><td data-num=\"4\"></td><td><pre>&#125;</pre></td></tr><tr><td data-num=\"5\"></td><td><pre>x=x+2;//Uncaught ReferenceError: x is not defined</pre></td></tr></table></figure><ul>\n<li>如果两个函数使用了相同的变量名，只要在函数内部，就不冲突</li>\n</ul>\n<figure class=\"highlight html\"><figcaption data-lang=\"HTML\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>function qj() &#123;</pre></td></tr><tr><td data-num=\"2\"></td><td><pre>    varX=1;</pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    X=X+1;</pre></td></tr><tr><td data-num=\"4\"></td><td><pre>&#125;</pre></td></tr><tr><td data-num=\"5\"></td><td><pre>function qj2() &#123;</pre></td></tr><tr><td data-num=\"6\"></td><td><pre>    var x = 'A';</pre></td></tr><tr><td data-num=\"7\"></td><td><pre>    X=X+1;</pre></td></tr><tr><td data-num=\"8\"></td><td><pre>&#125;</pre></td></tr></table></figure><ul>\n<li>内部函数可以访问外部函数的成员，反之则不行</li>\n</ul>\n<figure class=\"highlight html\"><figcaption data-lang=\"HTML\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>function qj() &#123;</pre></td></tr><tr><td data-num=\"2\"></td><td><pre>    var x=1;</pre></td></tr><tr><td data-num=\"3\"></td><td><pre>//内部函数可以访问外部函数的成员，反之则不行</pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    function qj2() &#123;</pre></td></tr><tr><td data-num=\"5\"></td><td><pre>        vary=x+1; //2</pre></td></tr><tr><td data-num=\"6\"></td><td><pre>    &#125;</pre></td></tr><tr><td data-num=\"7\"></td><td><pre>    var z = y + 1; // Uncaught ReferenceError: y is not defined</pre></td></tr><tr><td data-num=\"8\"></td><td><pre>&#125;</pre></td></tr></table></figure><ul>\n<li>假设，内部函数变量和外部函数的变量，重名！.</li>\n</ul>\n<figure class=\"highlight html\"><figcaption data-lang=\"HTML\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>function qj() &#123;</pre></td></tr><tr><td data-num=\"2\"></td><td><pre>    var x=1;</pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    function qj2() &#123;</pre></td></tr><tr><td data-num=\"4\"></td><td><pre>        var x = 'A';</pre></td></tr><tr><td data-num=\"5\"></td><td><pre>        console.1og('inner'+x); // outer1</pre></td></tr><tr><td data-num=\"6\"></td><td><pre>    &#125;</pre></td></tr><tr><td data-num=\"7\"></td><td><pre>    console.1og('outer'+x); //innerA</pre></td></tr><tr><td data-num=\"8\"></td><td><pre>    qj2() </pre></td></tr><tr><td data-num=\"9\"></td><td><pre>&#125;</pre></td></tr><tr><td data-num=\"10\"></td><td><pre>假设在JavaScript中函数查找变量从自身函数开始~ 由内向外查找，假设外部存在这个同名的函数变量， 则内部函数会屏蔽外部函数的变量</pre></td></tr></table></figure><ul>\n<li>提升变量作用域</li>\n</ul>\n<figure class=\"highlight html\"><figcaption data-lang=\"HTML\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>function qj() &#123;</pre></td></tr><tr><td data-num=\"2\"></td><td><pre>    var x='x\" + y;</pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    console.1og(x);</pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    vary='y';</pre></td></tr><tr><td data-num=\"5\"></td><td><pre>&#125;</pre></td></tr><tr><td data-num=\"6\"></td><td><pre>结果 xundefined</pre></td></tr><tr><td data-num=\"7\"></td><td><pre>说明;js执行引擎，自动提升了y的声明，但是不会提升变量y的赋值’;</pre></td></tr><tr><td data-num=\"8\"></td><td><pre>但最好先声明再使用</pre></td></tr></table></figure><ul>\n<li>全局函数</li>\n</ul>\n<figure class=\"highlight html\"><figcaption data-lang=\"HTML\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>//全局变量</pre></td></tr><tr><td data-num=\"2\"></td><td><pre>X =1;</pre></td></tr><tr><td data-num=\"3\"></td><td><pre>function f() &#123;</pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    console.1og(x);</pre></td></tr><tr><td data-num=\"5\"></td><td><pre>&#125;</pre></td></tr><tr><td data-num=\"6\"></td><td><pre>f();</pre></td></tr><tr><td data-num=\"7\"></td><td><pre>console.1og(x);</pre></td></tr></table></figure><ul>\n<li>全局对象 window</li>\n</ul>\n<figure class=\"highlight html\"><figcaption data-lang=\"HTML\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>varx ='xxx';</pre></td></tr><tr><td data-num=\"2\"></td><td><pre>alert(x);</pre></td></tr><tr><td data-num=\"3\"></td><td><pre>alert(window.x); //默认所有的全局变量，都会自动绑定在window对象下; </pre></td></tr><tr><td data-num=\"4\"></td><td><pre>alert()这个函数本身也是一个window变量;</pre></td></tr><tr><td data-num=\"5\"></td><td><pre></pre></td></tr><tr><td data-num=\"6\"></td><td><pre></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>var x =‘xxx';</pre></td></tr><tr><td data-num=\"8\"></td><td><pre>window. alert(x);</pre></td></tr><tr><td data-num=\"9\"></td><td><pre>var o1d_ _alert = window.alert;</pre></td></tr><tr><td data-num=\"10\"></td><td><pre>//o1d_ alert(x);</pre></td></tr><tr><td data-num=\"11\"></td><td><pre>I</pre></td></tr><tr><td data-num=\"12\"></td><td><pre>window.alert = function () &#123;</pre></td></tr><tr><td data-num=\"13\"></td><td><pre>&#125;;</pre></td></tr><tr><td data-num=\"14\"></td><td><pre>//发现alert() 失效了</pre></td></tr><tr><td data-num=\"15\"></td><td><pre>window. alert(123);</pre></td></tr><tr><td data-num=\"16\"></td><td><pre>//恢复</pre></td></tr><tr><td data-num=\"17\"></td><td><pre>window.alert = o1d_ alert;</pre></td></tr><tr><td data-num=\"18\"></td><td><pre>window. alert(456);</pre></td></tr><tr><td data-num=\"19\"></td><td><pre></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>Javascript实际上只有一一个全局作用域，任何变量(函数也可以视为变量)，假设没有在函数作用</pre></td></tr><tr><td data-num=\"21\"></td><td><pre>范围内找到，就会向外查找，如果在全局作用域都没有找到，报错RefrenceError</pre></td></tr></table></figure><ul>\n<li>规范</li>\n</ul>\n<figure class=\"highlight html\"><figcaption data-lang=\"HTML\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>由于我们所有的全局变量都会绑定到我们的window.上。如果不同的js文件，使用了相同的全局变</pre></td></tr><tr><td data-num=\"2\"></td><td><pre>量，冲突~>如果能够减少冲突?</pre></td></tr><tr><td data-num=\"3\"></td><td><pre>//唯一全局变量</pre></td></tr><tr><td data-num=\"4\"></td><td><pre>var KuangApp = &#123;&#125;;</pre></td></tr><tr><td data-num=\"5\"></td><td><pre>//定义全局变量</pre></td></tr><tr><td data-num=\"6\"></td><td><pre>KuangApp. name = ' kuangshen' ;</pre></td></tr><tr><td data-num=\"7\"></td><td><pre>KuangApp.add = function (a,b) &#123;</pre></td></tr><tr><td data-num=\"8\"></td><td><pre>    return a + b;</pre></td></tr><tr><td data-num=\"9\"></td><td><pre>&#125;</pre></td></tr><tr><td data-num=\"10\"></td><td><pre></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>jQuery</pre></td></tr><tr><td data-num=\"12\"></td><td><pre>把自己的代码全部放入自己定义的唯一空间名字中，降低全局命名冲突的问题~,不再放到window下</pre></td></tr></table></figure><ul>\n<li>局部作用域 let</li>\n</ul>\n<figure class=\"highlight html\"><figcaption data-lang=\"HTML\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>function aaa() &#123;</pre></td></tr><tr><td data-num=\"2\"></td><td><pre>    for(vari=0;i&lt; 100;i++)&#123;</pre></td></tr><tr><td data-num=\"3\"></td><td><pre>        console.1og(i)</pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    &#125;</pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    console.1og(i+1); //问题? i出了这个作用域还可以使用(本来不该获得函数内部的i)</pre></td></tr><tr><td data-num=\"6\"></td><td><pre>&#125;</pre></td></tr><tr><td data-num=\"7\"></td><td><pre></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>ES6 let关键字解决局部作用域冲突问题</pre></td></tr><tr><td data-num=\"9\"></td><td><pre>function aaa() &#123;</pre></td></tr><tr><td data-num=\"10\"></td><td><pre>    for(leti=0;i&lt; 100;i++)&#123;</pre></td></tr><tr><td data-num=\"11\"></td><td><pre>    console. 1og(i)</pre></td></tr><tr><td data-num=\"12\"></td><td><pre>    &#125;</pre></td></tr><tr><td data-num=\"13\"></td><td><pre>    console.1og(i+1); //Uncaught ReferenceError: i is not defined </pre></td></tr><tr><td data-num=\"14\"></td><td><pre>&#125;</pre></td></tr></table></figure><ul>\n<li>常量 const</li>\n</ul>\n<figure class=\"highlight html\"><figcaption data-lang=\"HTML\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>const pI = '3.14'; //只读变量 不可以修改</pre></td></tr><tr><td data-num=\"2\"></td><td><pre>console. log(PI);</pre></td></tr><tr><td data-num=\"3\"></td><td><pre>PI = '123'; // TypeError: Assi gnment to constant variab1e.</pre></td></tr><tr><td data-num=\"4\"></td><td><pre>console. log(PI);</pre></td></tr><tr><td data-num=\"5\"></td><td><pre>在ES6之前是可以修改的</pre></td></tr></table></figure><h1 id=\"方法\"><a class=\"anchor\" href=\"#方法\">#</a> 方法</h1>\n<ul>\n<li>定义方法<br />\n方法就是把函数放在对象的里面，对象只有两个东西：属性和方法.</li>\n</ul>\n<figure class=\"highlight html\"><figcaption data-lang=\"HTML\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>var kuangshen = &#123;</pre></td></tr><tr><td data-num=\"2\"></td><td><pre>    name: '秦疆' ，</pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    bitrh: 2000 ，</pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    //方法</pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    age: function () &#123;</pre></td></tr><tr><td data-num=\"6\"></td><td><pre>    //今年一出生的年</pre></td></tr><tr><td data-num=\"7\"></td><td><pre>    var now = new Date () . getFu11Year() ;</pre></td></tr><tr><td data-num=\"8\"></td><td><pre>    return now-this. bitrh;</pre></td></tr><tr><td data-num=\"9\"></td><td><pre>    &#125;</pre></td></tr><tr><td data-num=\"10\"></td><td><pre>&#125;</pre></td></tr><tr><td data-num=\"11\"></td><td><pre>//属性</pre></td></tr><tr><td data-num=\"12\"></td><td><pre>kuangshen. name </pre></td></tr><tr><td data-num=\"13\"></td><td><pre>//方法,一定要带 ()</pre></td></tr><tr><td data-num=\"14\"></td><td><pre>kuangshen.age ()</pre></td></tr></table></figure><ul>\n<li>this. 代表什么？拆开上面的代码看看～</li>\n</ul>\n<figure class=\"highlight html\"><figcaption data-lang=\"HTML\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>function getAge() &#123;</pre></td></tr><tr><td data-num=\"2\"></td><td><pre>    //今年-出生的年</pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    var now = new Date (). getFu11Year();</pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    return now- this.bitrh;</pre></td></tr><tr><td data-num=\"5\"></td><td><pre>&#125;</pre></td></tr><tr><td data-num=\"6\"></td><td><pre>var kuangshen = &#123;</pre></td></tr><tr><td data-num=\"7\"></td><td><pre>    name : 秦疆,</pre></td></tr><tr><td data-num=\"8\"></td><td><pre>    bitrh: 2000,</pre></td></tr><tr><td data-num=\"9\"></td><td><pre>    age: getAge</pre></td></tr><tr><td data-num=\"10\"></td><td><pre>// kuangshen.age() ok</pre></td></tr><tr><td data-num=\"11\"></td><td><pre>// getAge() NaN   window中没有birth</pre></td></tr></table></figure><ul>\n<li>apply<br />\n 在 js 中可以控制 this 指向！</li>\n</ul>\n<figure class=\"highlight html\"><figcaption data-lang=\"HTML\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>function getAge() &#123;</pre></td></tr><tr><td data-num=\"2\"></td><td><pre>    //今年-出生的年</pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    var now = new Date().getFu11Year();</pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    return</pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    now-this.bitrh; </pre></td></tr><tr><td data-num=\"6\"></td><td><pre>&#125;</pre></td></tr><tr><td data-num=\"7\"></td><td><pre>var kuangshen = &#123;</pre></td></tr><tr><td data-num=\"8\"></td><td><pre>    name : '秦疆'，</pre></td></tr><tr><td data-num=\"9\"></td><td><pre>    bitrh: 2000，</pre></td></tr><tr><td data-num=\"10\"></td><td><pre>    age: getAge</pre></td></tr><tr><td data-num=\"11\"></td><td><pre>&#125;;</pre></td></tr><tr><td data-num=\"12\"></td><td><pre>// kuangshen.age() ok</pre></td></tr><tr><td data-num=\"13\"></td><td><pre>getAge.apply(kuangshen,[]);// this, 指向了kuangshen, 参数为空</pre></td></tr></table></figure>",
            "tags": [
                "前端",
                "JavaSciprt",
                "前端"
            ]
        },
        {
            "id": "https://youhuamao.github.io/2022/09/03/front/JavaSciprt/%E6%B5%81%E7%A8%8B%E6%8E%A7%E5%88%B6/",
            "url": "https://youhuamao.github.io/2022/09/03/front/JavaSciprt/%E6%B5%81%E7%A8%8B%E6%8E%A7%E5%88%B6/",
            "title": "流程控制",
            "date_published": "2022-09-02T16:00:00.000Z",
            "content_html": "<h1 id=\"判断\"><a class=\"anchor\" href=\"#判断\">#</a> 判断</h1>\n<figure class=\"highlight html\"><figcaption data-lang=\"HTML\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>var age = 3;</pre></td></tr><tr><td data-num=\"2\"></td><td><pre>if (age>3)&#123; </pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    alert(\"haha\");</pre></td></tr><tr><td data-num=\"4\"></td><td><pre>&#125;else if(age&lt; 5) &#123;</pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    alert(\"kuwa~\");</pre></td></tr><tr><td data-num=\"6\"></td><td><pre>&#125;else &#123;</pre></td></tr><tr><td data-num=\"7\"></td><td><pre>    alert(\"kuwa1~\");</pre></td></tr></table></figure><h1 id=\"while循环避免程序死循环\"><a class=\"anchor\" href=\"#while循环避免程序死循环\">#</a> while 循环，避免程序死循环</h1>\n<figure class=\"highlight html\"><figcaption data-lang=\"HTML\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>whi1e(age &lt; 100) &#123;</pre></td></tr><tr><td data-num=\"2\"></td><td><pre>    age=age+1;</pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    console.1og(age)</pre></td></tr><tr><td data-num=\"4\"></td><td><pre>&#125;</pre></td></tr><tr><td data-num=\"5\"></td><td><pre></pre></td></tr><tr><td data-num=\"6\"></td><td><pre></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>do &#123;</pre></td></tr><tr><td data-num=\"8\"></td><td><pre>    age=age+1;</pre></td></tr><tr><td data-num=\"9\"></td><td><pre>    console.1og(age)</pre></td></tr><tr><td data-num=\"10\"></td><td><pre>&#125;whi1e(age &lt; 100)</pre></td></tr></table></figure><h1 id=\"for循环\"><a class=\"anchor\" href=\"#for循环\">#</a> for 循环</h1>\n<figure class=\"highlight html\"><figcaption data-lang=\"HTML\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>for(leti=0;i&lt; 100;i++)&#123;</pre></td></tr><tr><td data-num=\"2\"></td><td><pre>    console.1og(i)</pre></td></tr><tr><td data-num=\"3\"></td><td><pre>&#125;</pre></td></tr></table></figure><h1 id=\"foreach循环\"><a class=\"anchor\" href=\"#foreach循环\">#</a> forEach 循环</h1>\n<p>var age = [12,3,12,3,12,3,12,31,23 ,123];</p>\n<p>age.forEach (function (value) {<br />\nconsole.1og(value)<br />\n}</p>\n<h1 id=\"foin\"><a class=\"anchor\" href=\"#foin\">#</a> fo..in</h1>\n<figure class=\"highlight html\"><figcaption data-lang=\"HTML\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>//for(var index in object)&#123;&#125;</pre></td></tr><tr><td data-num=\"2\"></td><td><pre>for(var num in age)&#123;</pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    if (age . hasownProperty (num))&#123;</pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    console.1og(\"存在\")</pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    console. 1og(age [num])</pre></td></tr><tr><td data-num=\"6\"></td><td><pre>    &#125;</pre></td></tr><tr><td data-num=\"7\"></td><td><pre>&#125;</pre></td></tr></table></figure>",
            "tags": [
                "前端",
                "JavaSciprt",
                "前端"
            ]
        },
        {
            "id": "https://youhuamao.github.io/2022/09/02/front/JavaSciprt/%E5%BF%AB%E9%80%9F%E5%85%A5%E9%97%A8/",
            "url": "https://youhuamao.github.io/2022/09/02/front/JavaSciprt/%E5%BF%AB%E9%80%9F%E5%85%A5%E9%97%A8/",
            "title": "JavaSciprt快速入门",
            "date_published": "2022-09-01T16:00:00.000Z",
            "content_html": "<h1 id=\"内部标签\"><a class=\"anchor\" href=\"#内部标签\">#</a> 内部标签</h1>\n<figure class=\"highlight html\"><figcaption data-lang=\"HTML\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>script</span><span class=\"token punctuation\">></span></span><span class=\"token script\"><span class=\"token language-javascript\"></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>    <span class=\"token operator\">...</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre></span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>script</span><span class=\"token punctuation\">></span></span></pre></td></tr></table></figure><h1 id=\"外部引入\"><a class=\"anchor\" href=\"#外部引入\">#</a> 外部引入</h1>\n<figure class=\"highlight html\"><figcaption data-lang=\"HTML\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>abs.js</pre></td></tr><tr><td data-num=\"2\"></td><td><pre></pre></td></tr><tr><td data-num=\"3\"></td><td><pre></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>script</span> <span class=\"token attr-name\">src</span> <span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span> <span class=\"token punctuation\">\"</span>abc.js<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span><span class=\"token script\"></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>script</span><span class=\"token punctuation\">></span></span></pre></td></tr></table></figure><h1 id=\"基本语法\"><a class=\"anchor\" href=\"#基本语法\">#</a> 基本语法</h1>\n<ul>\n<li>可以少写分号</li>\n<li>console.log (score) 在浏览器的控制台打印变量！</li>\n<li>alert (); 打印变量</li>\n<li>定义变量： 变量类型 变量名 = 变量值</li>\n</ul>\n<figure class=\"highlight html\"><figcaption data-lang=\"HTML\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>elements 调试网页</pre></td></tr><tr><td data-num=\"2\"></td><td><pre>console 调试js（源码）</pre></td></tr><tr><td data-num=\"3\"></td><td><pre>sources 打断点</pre></td></tr><tr><td data-num=\"4\"></td><td><pre>Network 抓包</pre></td></tr><tr><td data-num=\"5\"></td><td><pre>Application 查看网页发送储存信息</pre></td></tr></table></figure><h1 id=\"严格检查模式\"><a class=\"anchor\" href=\"#严格检查模式\">#</a> 严格检查模式</h1>\n<figure class=\"highlight html\"><figcaption data-lang=\"HTML\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>前提: IEDA 需要设置支持ES6语法</pre></td></tr><tr><td data-num=\"2\"></td><td><pre>'use strict'; 严格检查模式，预防JavaScript的随意性导致产生的一 些问题</pre></td></tr><tr><td data-num=\"3\"></td><td><pre>必须写在JavaScript的第一行!</pre></td></tr><tr><td data-num=\"4\"></td><td><pre>局部变量建议都使用Let 去定义~</pre></td></tr></table></figure><h1 id=\"数据类型\"><a class=\"anchor\" href=\"#数据类型\">#</a> 数据类型</h1>\n<h2 id=\"number\"><a class=\"anchor\" href=\"#number\">#</a> number</h2>\n<figure class=\"highlight html\"><figcaption data-lang=\"HTML\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>js不区分小数和整数，Number</pre></td></tr><tr><td data-num=\"2\"></td><td><pre>123//整数123</pre></td></tr><tr><td data-num=\"3\"></td><td><pre>123.1 //浮点数123.1</pre></td></tr><tr><td data-num=\"4\"></td><td><pre>123e3 //科 学计数法</pre></td></tr><tr><td data-num=\"5\"></td><td><pre>-99//负数</pre></td></tr><tr><td data-num=\"6\"></td><td><pre>NaN  not a number</pre></td></tr><tr><td data-num=\"7\"></td><td><pre>Infinity //表示无限大</pre></td></tr></table></figure><h2 id=\"字符串\"><a class=\"anchor\" href=\"#字符串\">#</a> 字符串</h2>\n<figure class=\"highlight html\"><figcaption data-lang=\"HTML\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>\"abc\" , 'abc'</pre></td></tr></table></figure><h2 id=\"布尔值\"><a class=\"anchor\" href=\"#布尔值\">#</a> 布尔值</h2>\n<figure class=\"highlight html\"><figcaption data-lang=\"HTML\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>true</pre></td></tr><tr><td data-num=\"2\"></td><td><pre>false</pre></td></tr></table></figure><h2 id=\"逻辑运算\"><a class=\"anchor\" href=\"#逻辑运算\">#</a> 逻辑运算</h2>\n<figure class=\"highlight html\"><figcaption data-lang=\"HTML\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>&amp;&amp; 两个都为真，结果为真</pre></td></tr><tr><td data-num=\"2\"></td><td><pre>|| 一个为真， 结果为真</pre></td></tr><tr><td data-num=\"3\"></td><td><pre>! 真即假，假即真</pre></td></tr></table></figure><h2 id=\"比较运算符\"><a class=\"anchor\" href=\"#比较运算符\">#</a> 比较运算符</h2>\n<figure class=\"highlight html\"><figcaption data-lang=\"HTML\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>= 赋值</pre></td></tr><tr><td data-num=\"2\"></td><td><pre>== 等于(类型不一样，值一样，也会判断为true)</pre></td></tr><tr><td data-num=\"3\"></td><td><pre>=== 绝对等于(类型一样，值一样，结果true)</pre></td></tr><tr><td data-num=\"4\"></td><td><pre></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>NaN===NaN，这个与所有的数值都不相等,包括自己</pre></td></tr><tr><td data-num=\"6\"></td><td><pre>只能通过isNaN(NaN)来判断这个数是否是NaN</pre></td></tr><tr><td data-num=\"7\"></td><td><pre></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>console.1og((1/3) === (1-2/3) )   false</pre></td></tr><tr><td data-num=\"9\"></td><td><pre>尽量避免使用浮点数进行运算，存在精度问题!</pre></td></tr><tr><td data-num=\"10\"></td><td><pre>Math.abs(1/3-(1-2/3)) &lt; 0.00000001  true</pre></td></tr></table></figure><h2 id=\"null和undefined\"><a class=\"anchor\" href=\"#null和undefined\">#</a> null 和 undefined</h2>\n<ul>\n<li>null 空</li>\n<li>undefined 未定义</li>\n</ul>\n<h2 id=\"数组\"><a class=\"anchor\" href=\"#数组\">#</a> 数组</h2>\n<figure class=\"highlight html\"><figcaption data-lang=\"HTML\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>Java的数值必须是相同类型的对象~ ,JS中不需要这样!</pre></td></tr><tr><td data-num=\"2\"></td><td><pre>var arr = [1,2,3,4,5, 'he11o' ,nu11 , true]</pre></td></tr><tr><td data-num=\"3\"></td><td><pre>new Array(1,2,3,4,5, 'he11o')</pre></td></tr><tr><td data-num=\"4\"></td><td><pre>但是java可以这样写 Object arr = [1,2,3,4,5, 'he11o' ,nu11 , true]</pre></td></tr><tr><td data-num=\"5\"></td><td><pre></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>数组越界会出现undefined</pre></td></tr></table></figure><h2 id=\"对象\"><a class=\"anchor\" href=\"#对象\">#</a> 对象</h2>\n<figure class=\"highlight html\"><figcaption data-lang=\"HTML\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>对象是大括号，数组是中括号~~</pre></td></tr><tr><td data-num=\"2\"></td><td><pre>每个属性之间使用逗号隔开，最后-一个不需要添加</pre></td></tr><tr><td data-num=\"3\"></td><td><pre>//Person person = new Person(1,2,3,4,5);</pre></td></tr><tr><td data-num=\"4\"></td><td><pre>var person = &#123;</pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    name: \"qinjiang\",</pre></td></tr><tr><td data-num=\"6\"></td><td><pre>    age: 3,</pre></td></tr><tr><td data-num=\"7\"></td><td><pre>    tags: ['js' ,'java', 'web','...']</pre></td></tr><tr><td data-num=\"8\"></td><td><pre>&#125;</pre></td></tr><tr><td data-num=\"9\"></td><td><pre></pre></td></tr><tr><td data-num=\"10\"></td><td><pre></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>取对象的值</pre></td></tr><tr><td data-num=\"12\"></td><td><pre>person.name</pre></td></tr><tr><td data-num=\"13\"></td><td><pre>> \"qinjiang\"</pre></td></tr><tr><td data-num=\"14\"></td><td><pre>person.age</pre></td></tr><tr><td data-num=\"15\"></td><td><pre>> 3</pre></td></tr></table></figure>",
            "tags": [
                "前端",
                "JavaSciprt",
                "前端"
            ]
        },
        {
            "id": "https://youhuamao.github.io/2022/09/02/front/JavaSciprt/%E6%95%B0%E6%8D%AE%E7%B1%BB%E5%9E%8B/",
            "url": "https://youhuamao.github.io/2022/09/02/front/JavaSciprt/%E6%95%B0%E6%8D%AE%E7%B1%BB%E5%9E%8B/",
            "title": "JavaSciprt数据类型",
            "date_published": "2022-09-01T16:00:00.000Z",
            "content_html": "<h1 id=\"字符串\"><a class=\"anchor\" href=\"#字符串\">#</a> 字符串</h1>\n<h2 id=\"多行字符串编写\"><a class=\"anchor\" href=\"#多行字符串编写\">#</a> 多行字符串编写</h2>\n<figure class=\"highlight html\"><figcaption data-lang=\"HTML\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>//tab上面 esc键 下面</pre></td></tr><tr><td data-num=\"2\"></td><td><pre>var msg =</pre></td></tr><tr><td data-num=\"3\"></td><td><pre>        `he11o</pre></td></tr><tr><td data-num=\"4\"></td><td><pre>        world</pre></td></tr><tr><td data-num=\"5\"></td><td><pre>        你好ya</pre></td></tr><tr><td data-num=\"6\"></td><td><pre>        你好`</pre></td></tr></table></figure><h2 id=\"模板字符串\"><a class=\"anchor\" href=\"#模板字符串\">#</a> 模板字符串</h2>\n<figure class=\"highlight html\"><figcaption data-lang=\"HTML\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>let name =\"qinjiang\";</pre></td></tr><tr><td data-num=\"2\"></td><td><pre>1et age = 3;</pre></td></tr><tr><td data-num=\"3\"></td><td><pre>1et msg = `你好呀，$&#123;name&#125;`</pre></td></tr></table></figure><h2 id=\"字符串长度\"><a class=\"anchor\" href=\"#字符串长度\">#</a> 字符串长度</h2>\n<ul>\n<li>str.length</li>\n</ul>\n<h2 id=\"string字符串的不可变\"><a class=\"anchor\" href=\"#string字符串的不可变\">#</a> string 字符串的不可变</h2>\n<figure class=\"highlight html\"><figcaption data-lang=\"HTML\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>console. log(student[0]) >S</pre></td></tr><tr><td data-num=\"2\"></td><td><pre>student[0] = 1</pre></td></tr><tr><td data-num=\"3\"></td><td><pre>student[0]  >s</pre></td></tr><tr><td data-num=\"4\"></td><td><pre>console. log(student) >student</pre></td></tr></table></figure><h2 id=\"大小写转换\"><a class=\"anchor\" href=\"#大小写转换\">#</a> 大小写转换</h2>\n<ul>\n<li>student. toupperCase()</li>\n<li>student. toLowerCase()</li>\n</ul>\n<h2 id=\"寻找指定字符位置\"><a class=\"anchor\" href=\"#寻找指定字符位置\">#</a> 寻找指定字符位置</h2>\n<ul>\n<li>student.indexOf('t')</li>\n</ul>\n<h2 id=\"9-substring\"><a class=\"anchor\" href=\"#9-substring\">#</a> 9、substring</h2>\n<figure class=\"highlight html\"><figcaption data-lang=\"HTML\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>student. substring(1) //从第一个字符串截取到最后一个字符串</pre></td></tr><tr><td data-num=\"2\"></td><td><pre>student . substring(1,3) //[1,3)</pre></td></tr></table></figure><h1 id=\"数组\"><a class=\"anchor\" href=\"#数组\">#</a> 数组</h1>\n<h2 id=\"array可以包含任意的数据类型\"><a class=\"anchor\" href=\"#array可以包含任意的数据类型\">#</a> Array 可以包含任意的数据类型</h2>\n<figure class=\"highlight html\"><figcaption data-lang=\"HTML\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>var arr = [1,2,3,4,5,6,'a'] ; //通过下标取值和赋值</pre></td></tr><tr><td data-num=\"2\"></td><td><pre>arr[0]</pre></td></tr><tr><td data-num=\"3\"></td><td><pre>arr[0] = 1</pre></td></tr></table></figure><h2 id=\"长度\"><a class=\"anchor\" href=\"#长度\">#</a> 长度</h2>\n<figure class=\"highlight html\"><figcaption data-lang=\"HTML\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>arr.length</pre></td></tr><tr><td data-num=\"2\"></td><td><pre>注意:加入给arr.length赋值，数组大小就会发生变化,如果赋值过小，元素就会丢失</pre></td></tr><tr><td data-num=\"3\"></td><td><pre></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>var arr = [1,2,3,4,5,6]</pre></td></tr><tr><td data-num=\"5\"></td><td><pre></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>console.log(arr)</pre></td></tr><tr><td data-num=\"7\"></td><td><pre>>[1,2,3,4,5,6]</pre></td></tr><tr><td data-num=\"8\"></td><td><pre></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>arr.length</pre></td></tr><tr><td data-num=\"10\"></td><td><pre>>6</pre></td></tr><tr><td data-num=\"11\"></td><td><pre></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>arr[0] = 0</pre></td></tr><tr><td data-num=\"13\"></td><td><pre>console.log(arr)</pre></td></tr><tr><td data-num=\"14\"></td><td><pre>>[0,2,3,4,5,6]</pre></td></tr><tr><td data-num=\"15\"></td><td><pre></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>arr.length = 10</pre></td></tr><tr><td data-num=\"17\"></td><td><pre>console.log(arr)</pre></td></tr><tr><td data-num=\"18\"></td><td><pre>>[0,2,3,4,5,6,emptyx4]</pre></td></tr><tr><td data-num=\"19\"></td><td><pre></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>arr.length = 2</pre></td></tr><tr><td data-num=\"21\"></td><td><pre>console.log(arr)</pre></td></tr><tr><td data-num=\"22\"></td><td><pre>>[0,2]</pre></td></tr></table></figure><h2 id=\"indexof-通过元素获得下标索引\"><a class=\"anchor\" href=\"#indexof-通过元素获得下标索引\">#</a> indexOf, 通过元素获得下标索引</h2>\n<figure class=\"highlight html\"><figcaption data-lang=\"HTML\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>arr = [1,2,3,4,5,6,\"1\",\"2\"]</pre></td></tr><tr><td data-num=\"2\"></td><td><pre>arr . index0f(1)</pre></td></tr><tr><td data-num=\"3\"></td><td><pre>>0</pre></td></tr><tr><td data-num=\"4\"></td><td><pre>arr . index0f(\"1\")</pre></td></tr><tr><td data-num=\"5\"></td><td><pre>>6</pre></td></tr></table></figure><h2 id=\"slice截取array的一部分返回一个新数组类似于string中的substring\"><a class=\"anchor\" href=\"#slice截取array的一部分返回一个新数组类似于string中的substring\">#</a> slice () 截取 Array 的一部分，返回一个新数组，类似于 String 中的 substring</h2>\n<figure class=\"highlight html\"><figcaption data-lang=\"HTML\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>arr = [1,2,3,4,5,6,\"1\",\"2\"]</pre></td></tr><tr><td data-num=\"2\"></td><td><pre>arr.slice(3)</pre></td></tr><tr><td data-num=\"3\"></td><td><pre>>[4, 5, 6, \"1\", \"2\"]</pre></td></tr><tr><td data-num=\"4\"></td><td><pre>arr.slice(1,5)</pre></td></tr><tr><td data-num=\"5\"></td><td><pre>>(4) [2, 3, 4, 5]</pre></td></tr></table></figure><h2 id=\"push-pop-尾部\"><a class=\"anchor\" href=\"#push-pop-尾部\">#</a> push (), pop () 尾部</h2>\n<ul>\n<li>push: 压入到尾部</li>\n<li>pop: 弹出尾部的一个元素</li>\n</ul>\n<h2 id=\"5-unshift-shift-头部\"><a class=\"anchor\" href=\"#5-unshift-shift-头部\">#</a> 5、unshift () , shift () 头部</h2>\n<ul>\n<li>unshift: 压入到头部</li>\n<li>shift: 弹出头部的一个元素</li>\n</ul>\n<h2 id=\"排序\"><a class=\"anchor\" href=\"#排序\">#</a> 排序</h2>\n<ul>\n<li>sort()</li>\n</ul>\n<h2 id=\"元素反转\"><a class=\"anchor\" href=\"#元素反转\">#</a> 元素反转</h2>\n<ul>\n<li>reverse</li>\n</ul>\n<h2 id=\"拼接数组\"><a class=\"anchor\" href=\"#拼接数组\">#</a> 拼接数组</h2>\n<figure class=\"highlight html\"><figcaption data-lang=\"HTML\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>arr = [\"C\"，\"B\",\"A\"']</pre></td></tr><tr><td data-num=\"2\"></td><td><pre>arr. concat([1,2,3])</pre></td></tr><tr><td data-num=\"3\"></td><td><pre>>[\"C\"，\"B\",\"A\"，1，2，3]</pre></td></tr><tr><td data-num=\"4\"></td><td><pre>arr</pre></td></tr><tr><td data-num=\"5\"></td><td><pre>>[\"C\"，\"B\",\"A\"]</pre></td></tr><tr><td data-num=\"6\"></td><td><pre>concat并没有修改数组只是返回新的数组</pre></td></tr></table></figure><h2 id=\"连接符join\"><a class=\"anchor\" href=\"#连接符join\">#</a> 连接符 join</h2>\n<figure class=\"highlight html\"><figcaption data-lang=\"HTML\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>打印拼接数组，使用特定的字符串连接</pre></td></tr><tr><td data-num=\"2\"></td><td><pre>arr = [\"C\"， \"B\"\"，\"A\"]</pre></td></tr><tr><td data-num=\"3\"></td><td><pre>arr.join('-')</pre></td></tr><tr><td data-num=\"4\"></td><td><pre>>\"C-B-A\"</pre></td></tr></table></figure><h2 id=\"多维数组\"><a class=\"anchor\" href=\"#多维数组\">#</a> 多维数组</h2>\n<figure class=\"highlight html\"><figcaption data-lang=\"HTML\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>arr=[[1,2],[3,4] ,[\"5\",\"6\"]] ;</pre></td></tr><tr><td data-num=\"2\"></td><td><pre>arr[1][1]</pre></td></tr><tr><td data-num=\"3\"></td><td><pre>>4</pre></td></tr></table></figure><h1 id=\"对象\"><a class=\"anchor\" href=\"#对象\">#</a> 对象</h1>\n<figure class=\"highlight html\"><figcaption data-lang=\"HTML\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>var 对象名 = &#123;</pre></td></tr><tr><td data-num=\"2\"></td><td><pre>    属性名:  属性值，</pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    属性名:  属性值，</pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    属性名:  属性值</pre></td></tr><tr><td data-num=\"5\"></td><td><pre>&#125;</pre></td></tr><tr><td data-num=\"6\"></td><td><pre></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>//定义了一个person对象，它有四个属性!</pre></td></tr><tr><td data-num=\"8\"></td><td><pre>var person = &#123;</pre></td></tr><tr><td data-num=\"9\"></td><td><pre>    name: \"kuangshen\"</pre></td></tr><tr><td data-num=\"10\"></td><td><pre>    age: 3,</pre></td></tr><tr><td data-num=\"11\"></td><td><pre>    emai1 :\" 247 36743@qq. com,</pre></td></tr><tr><td data-num=\"12\"></td><td><pre>    score: 0</pre></td></tr><tr><td data-num=\"13\"></td><td><pre>&#125;</pre></td></tr><tr><td data-num=\"14\"></td><td><pre>] avascript</pre></td></tr><tr><td data-num=\"15\"></td><td><pre>js中对象，&#123;...&#125; 表示一个对象，键值对描述属性 XXXX : XXXX,多个属性之间使用逗号隔开，最后一个属性不加逗号!</pre></td></tr></table></figure><h2 id=\"对象赋值\"><a class=\"anchor\" href=\"#对象赋值\">#</a> 对象赋值</h2>\n<figure class=\"highlight html\"><figcaption data-lang=\"HTML\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>person.name = \"qinjiang\"</pre></td></tr><tr><td data-num=\"2\"></td><td><pre>person . name</pre></td></tr><tr><td data-num=\"3\"></td><td><pre>>'qinjiang'</pre></td></tr></table></figure><h2 id=\"使用一个不存在的对象属性不会报错\"><a class=\"anchor\" href=\"#使用一个不存在的对象属性不会报错\">#</a> 使用一个不存在的对象属性，不会报错！</h2>\n<figure class=\"highlight html\"><figcaption data-lang=\"HTML\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>person.haha</pre></td></tr><tr><td data-num=\"2\"></td><td><pre>>undefined</pre></td></tr></table></figure><h2 id=\"动态的删减属性通过delete删除对象的属性\"><a class=\"anchor\" href=\"#动态的删减属性通过delete删除对象的属性\">#</a> 动态的删减属性，通过 delete 删除对象的属性</h2>\n<figure class=\"highlight html\"><figcaption data-lang=\"HTML\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>delete person. name</pre></td></tr><tr><td data-num=\"2\"></td><td><pre>>true</pre></td></tr></table></figure><h2 id=\"动态的添加直接给新的属性添加值即可\"><a class=\"anchor\" href=\"#动态的添加直接给新的属性添加值即可\">#</a> 动态的添加，直接给新的属性添加值即可</h2>\n<figure class=\"highlight html\"><figcaption data-lang=\"HTML\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>person.haha = \"haha'</pre></td></tr><tr><td data-num=\"2\"></td><td><pre>>\"haha\"</pre></td></tr></table></figure><h2 id=\"5-判断属性值是否在这个对象中-xxx-in-xxx\"><a class=\"anchor\" href=\"#5-判断属性值是否在这个对象中-xxx-in-xxx\">#</a> 5、判断属性值是否在这个对象中！xxx in xxx!</h2>\n<figure class=\"highlight html\"><figcaption data-lang=\"HTML\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>var person = &#123;</pre></td></tr><tr><td data-num=\"2\"></td><td><pre>    name: \"kuangshen\"</pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    age: 3,</pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    emai1 :\" 247 36743@qq. com,</pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    score: 0</pre></td></tr><tr><td data-num=\"6\"></td><td><pre>&#125;</pre></td></tr><tr><td data-num=\"7\"></td><td><pre></pre></td></tr><tr><td data-num=\"8\"></td><td><pre></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>age in person</pre></td></tr><tr><td data-num=\"10\"></td><td><pre>true</pre></td></tr><tr><td data-num=\"11\"></td><td><pre>//继承</pre></td></tr><tr><td data-num=\"12\"></td><td><pre>tostring' in person</pre></td></tr><tr><td data-num=\"13\"></td><td><pre>true</pre></td></tr></table></figure><h2 id=\"判断一个属性是否是这个对象自身拥有的hasownproperty\"><a class=\"anchor\" href=\"#判断一个属性是否是这个对象自身拥有的hasownproperty\">#</a> 判断一个属性是否是这个对象自身拥有的 hasOwnProperty ()</h2>\n<figure class=\"highlight html\"><figcaption data-lang=\"HTML\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>person. hasownProperty('tostring')</pre></td></tr><tr><td data-num=\"2\"></td><td><pre>false</pre></td></tr><tr><td data-num=\"3\"></td><td><pre>person. hasownProperty(' age')</pre></td></tr><tr><td data-num=\"4\"></td><td><pre>true</pre></td></tr></table></figure><h2 id=\"map\"><a class=\"anchor\" href=\"#map\">#</a> Map</h2>\n<figure class=\"highlight html\"><figcaption data-lang=\"HTML\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>Map</pre></td></tr><tr><td data-num=\"2\"></td><td><pre>学生的成绩，学生的名字</pre></td></tr><tr><td data-num=\"3\"></td><td><pre>var names = [\"tom\",\"jack\" ，\"haha\"];</pre></td></tr><tr><td data-num=\"4\"></td><td><pre>var scores = [100,90,80] ;</pre></td></tr><tr><td data-num=\"5\"></td><td><pre>var map = new Map([['tom',100], ['jack',90]，['haha',80]]);</pre></td></tr><tr><td data-num=\"6\"></td><td><pre>var name = map. get('tom'); //通过key获得value</pre></td></tr><tr><td data-num=\"7\"></td><td><pre>map.set('admin' ,123456); //新增或修改</pre></td></tr><tr><td data-num=\"8\"></td><td><pre>map.delete('tom')  //删除</pre></td></tr></table></figure><h2 id=\"set无序不重复的集合\"><a class=\"anchor\" href=\"#set无序不重复的集合\">#</a> Set: 无序不重复的集合</h2>\n<figure class=\"highlight html\"><figcaption data-lang=\"HTML\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>set. add(2); //添加</pre></td></tr><tr><td data-num=\"2\"></td><td><pre></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>set. delete(1);  //删除</pre></td></tr><tr><td data-num=\"4\"></td><td><pre></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>console.1og(set.has(3));  是否包含</pre></td></tr></table></figure><h2 id=\"iterator\"><a class=\"anchor\" href=\"#iterator\">#</a> iterator</h2>\n<h3 id=\"遍历数组\"><a class=\"anchor\" href=\"#遍历数组\">#</a> 遍历数组</h3>\n<figure class=\"highlight html\"><figcaption data-lang=\"HTML\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>通过for of // for in下标</pre></td></tr><tr><td data-num=\"2\"></td><td><pre>var arr = [3,4,5]</pre></td></tr><tr><td data-num=\"3\"></td><td><pre>for (var x of arr)&#123;</pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    console.1og(x)</pre></td></tr><tr><td data-num=\"5\"></td><td><pre>&#125;</pre></td></tr></table></figure><h3 id=\"遍历map\"><a class=\"anchor\" href=\"#遍历map\">#</a> 遍历 Map</h3>\n<figure class=\"highlight html\"><figcaption data-lang=\"HTML\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>var map = new Map([[\"tom\"，100]，[\"jack\"，90], [\"haha\"，80]]);</pre></td></tr><tr><td data-num=\"2\"></td><td><pre>for (1et x of map)&#123;</pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    console.1og(x) </pre></td></tr><tr><td data-num=\"4\"></td><td><pre>&#125;</pre></td></tr></table></figure><h3 id=\"遍历set\"><a class=\"anchor\" href=\"#遍历set\">#</a> 遍历 Set</h3>\n<figure class=\"highlight html\"><figcaption data-lang=\"HTML\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>var set = new Set([5,6,7]);</pre></td></tr><tr><td data-num=\"2\"></td><td><pre>for (let x of set) &#123;</pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    console.1og(x)</pre></td></tr><tr><td data-num=\"4\"></td><td><pre>&#125;</pre></td></tr></table></figure>",
            "tags": [
                "前端",
                "JavaSciprt",
                "前端"
            ]
        },
        {
            "id": "https://youhuamao.github.io/2022/09/01/summary/monthly/2022%E5%85%AB%E6%9C%88/",
            "url": "https://youhuamao.github.io/2022/09/01/summary/monthly/2022%E5%85%AB%E6%9C%88/",
            "title": "2022年八月总结",
            "date_published": "2022-08-31T16:00:00.000Z",
            "content_html": "<h1 id=\"学习成功\"><a class=\"anchor\" href=\"#学习成功\">#</a> 学习成功</h1>\n<ul>\n<li>在本月对 Java 进行了学习，但是用时超过了我的规定和预期特别多</li>\n<li>看到了一个很好看的博客主题，完成了博客的简单搭建</li>\n<li>学习了简单的 html 和 css</li>\n<li>学会了飞雷神（</li>\n</ul>\n<h1 id=\"反思\"><a class=\"anchor\" href=\"#反思\">#</a> 反思</h1>\n<ul>\n<li>在学习的时候注意里还是不集中，效率不是很高，不然 java 学的过程也不会超时那么多</li>\n<li>应该好好想想该怎么去克服了（学了，但不多）</li>\n</ul>\n",
            "tags": [
                "总结",
                "月度总结",
                "总结"
            ]
        },
        {
            "id": "https://youhuamao.github.io/2022/08/31/front/css%E7%AC%94%E8%AE%B0/%E6%B5%AE%E5%8A%A8/",
            "url": "https://youhuamao.github.io/2022/08/31/front/css%E7%AC%94%E8%AE%B0/%E6%B5%AE%E5%8A%A8/",
            "title": "盒子模型",
            "date_published": "2022-08-30T16:00:00.000Z",
            "content_html": "<h1 id=\"display\"><a class=\"anchor\" href=\"#display\">#</a> display</h1>\n<ul>\n<li>block 块元素</li>\n<li>inline 行内元素</li>\n<li>inline-block 是块元素， 但是可以内联在一行</li>\n</ul>\n<figure class=\"highlight html\"><figcaption data-lang=\"HTML\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>display :block / inline /inline-block</pre></td></tr></table></figure><h1 id=\"浮动\"><a class=\"anchor\" href=\"#浮动\">#</a> 浮动</h1>\n<ul>\n<li>float ：right 右浮</li>\n<li>float ：left  左浮</li>\n<li>clear: right 右侧不允许有浮动元素</li>\n<li>clear: Left 左侧不允许有浮动元素</li>\n<li>clear: both 两侧不允许有浮动元素</li>\n<li>clear: none</li>\n</ul>\n<h1 id=\"父级边框塌陷浮动元素超过父级边框\"><a class=\"anchor\" href=\"#父级边框塌陷浮动元素超过父级边框\">#</a> 父级边框塌陷（浮动元素超过父级边框）</h1>\n<h2 id=\"增加父级边框高度\"><a class=\"anchor\" href=\"#增加父级边框高度\">#</a> 增加父级边框高度</h2>\n<h2 id=\"增加一个空的div标签清除浮动\"><a class=\"anchor\" href=\"#增加一个空的div标签清除浮动\">#</a> 增加一个空的 div 标签，清除浮动</h2>\n<p>&lt;div class=&quot;clear&quot;&gt;&lt;/div&gt;</p>\n<figure class=\"highlight html\"><figcaption data-lang=\"HTML\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>clear&#123;</pre></td></tr><tr><td data-num=\"2\"></td><td><pre>    clear: both;</pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    margin: 0;</pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    padding: 0;</pre></td></tr><tr><td data-num=\"5\"></td><td><pre>&#125;</pre></td></tr></table></figure><h2 id=\"overflow\"><a class=\"anchor\" href=\"#overflow\">#</a> overflow</h2>\n<ul>\n<li>在父级元素中增加一个 overf1ow: hidden</li>\n<li>若为 overf1ow: scroll，增加滚动条</li>\n</ul>\n<h1 id=\"父类添加一个伪类\"><a class=\"anchor\" href=\"#父类添加一个伪类\">#</a> 父类添加一个 “伪类”</h1>\n<figure class=\"highlight html\"><figcaption data-lang=\"HTML\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>#father:after&#123;</pre></td></tr><tr><td data-num=\"2\"></td><td><pre>content :\" \"</pre></td></tr><tr><td data-num=\"3\"></td><td><pre>display:b1ock;</pre></td></tr><tr><td data-num=\"4\"></td><td><pre>clear:both;</pre></td></tr><tr><td data-num=\"5\"></td><td><pre></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span> <span class=\"token attr-name\">id</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>father<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span> <span class=\"token attr-name\">class</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>layer01<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>img</span> <span class=\"token attr-name\">src</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span> images/1.jpg<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">alt</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span><span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">/></span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span> <span class=\"token attr-name\">class</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>layer02<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>img</span> <span class=\"token attr-name\">src</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span> images/2.jpg<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">alt</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span><span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">/></span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span> <span class=\"token attr-name\">class</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>layer03<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>img</span> <span class=\"token attr-name\">src</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span> images/3.jpg<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">alt</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span><span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">/></span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span> <span class=\"token attr-name\">class</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>layer04<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">></span></span></pre></td></tr></table></figure><h1 id=\"小结\"><a class=\"anchor\" href=\"#小结\">#</a> 小结</h1>\n<ul>\n<li>浮动元素后面增加空 div<br />\n 简单，代码中尽量避免空 div</li>\n<li>设置父元素的高度<br />\n简单，元素假设有了固定的高度，就会被限制</li>\n<li>overflow<br />\n 简单，下拉的一 些场景避免使用</li>\n<li>父类添加一个伪类: after (推荐)<br />\n 写法稍微复杂一点，但是没有副作用，推荐使用！</li>\n</ul>\n<h1 id=\"对比\"><a class=\"anchor\" href=\"#对比\">#</a> 对比</h1>\n<ul>\n<li>display<br />\n 方向不可以控制</li>\n<li>float<br />\n 浮动起来的话会脱离标准文档流，所以要解决父级边框塌陷的问题～</li>\n</ul>\n<h1 id=\"定位\"><a class=\"anchor\" href=\"#定位\">#</a> 定位</h1>\n<h2 id=\"相对定位\"><a class=\"anchor\" href=\"#相对定位\">#</a> 相对定位</h2>\n<figure class=\"highlight html\"><figcaption data-lang=\"HTML\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>相对于自己原来的位置移动，它仍然在标准文档流中，原来的位置会被保留</pre></td></tr><tr><td data-num=\"2\"></td><td><pre>position: relative;</pre></td></tr><tr><td data-num=\"3\"></td><td><pre>top: 20px;</pre></td></tr><tr><td data-num=\"4\"></td><td><pre>1eft: 20px;</pre></td></tr><tr><td data-num=\"5\"></td><td><pre>bottom: -10px;</pre></td></tr><tr><td data-num=\"6\"></td><td><pre>right: 20px;</pre></td></tr></table></figure><h2 id=\"绝对定位\"><a class=\"anchor\" href=\"#绝对定位\">#</a> 绝对定位</h2>\n<ul>\n<li>position: absolute;</li>\n<li>没有父级元素定位的前提下，相对于浏览器定位</li>\n<li>假设父级元素存在定位，我们通常会相对于父级元素进行偏移～</li>\n<li>在父级元素范围内移动</li>\n<li>相对于父级或浏览器的位置，进行指定的偏移，绝对定位的话，它不在在标准文档流中，原来的位置不会被保留</li>\n</ul>\n<h2 id=\"固定定位\"><a class=\"anchor\" href=\"#固定定位\">#</a> 固定定位</h2>\n<ul>\n<li>position: fixed</li>\n<li>定死，类似于返回顶部按钮</li>\n</ul>\n<h2 id=\"图层\"><a class=\"anchor\" href=\"#图层\">#</a> 图层</h2>\n<ul>\n<li>z-index 默认为 0 最高 999</li>\n</ul>\n",
            "tags": [
                "前端",
                "css",
                "前端"
            ]
        },
        {
            "id": "https://youhuamao.github.io/2022/08/30/front/css%E7%AC%94%E8%AE%B0/%E7%9B%92%E5%AD%90%E6%A8%A1%E5%9E%8B/",
            "url": "https://youhuamao.github.io/2022/08/30/front/css%E7%AC%94%E8%AE%B0/%E7%9B%92%E5%AD%90%E6%A8%A1%E5%9E%8B/",
            "title": "盒子模型",
            "date_published": "2022-08-29T16:00:00.000Z",
            "content_html": "<h1 id=\"什么是盒模型\"><a class=\"anchor\" href=\"#什么是盒模型\">#</a> 什么是盒模型</h1>\n<ul>\n<li>一般标签都有默认值</li>\n<li>div 可以确定块</li>\n<li>margin: 外边距</li>\n<li>padding: 内边距</li>\n<li>border: 边框</li>\n</ul>\n<h1 id=\"边框\"><a class=\"anchor\" href=\"#边框\">#</a> 边框</h1>\n<ul>\n<li>border: 粗细，样式，颜色<br />\n border: 1px solid red;<br />\nsolid 黑线<br />\n dashed 虚线</li>\n</ul>\n<h1 id=\"内外边距\"><a class=\"anchor\" href=\"#内外边距\">#</a> 内外边距</h1>\n<figure class=\"highlight html\"><figcaption data-lang=\"HTML\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>padding 内边距</pre></td></tr><tr><td data-num=\"2\"></td><td><pre>margin 外边距</pre></td></tr><tr><td data-num=\"3\"></td><td><pre>顺时针旋转</pre></td></tr><tr><td data-num=\"4\"></td><td><pre>margin:0 (上下左右)</pre></td></tr><tr><td data-num=\"5\"></td><td><pre>margin:0 1px (上下，左右)</pre></td></tr><tr><td data-num=\"6\"></td><td><pre>margin:0 1px 2px 3px (上 右 下 左)</pre></td></tr><tr><td data-num=\"7\"></td><td><pre></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>盒子的计算方式:你这个元素到底多大?</pre></td></tr><tr><td data-num=\"9\"></td><td><pre>margin + border + padding +内容宽度</pre></td></tr></table></figure><h1 id=\"圆角边框\"><a class=\"anchor\" href=\"#圆角边框\">#</a> 圆角边框</h1>\n<ul>\n<li>border-radius: 0px 0px 0px 0px; 左上 右上。右下 左下，顺时针方向</li>\n</ul>\n<h1 id=\"阴影\"><a class=\"anchor\" href=\"#阴影\">#</a> 阴影</h1>\n<ul>\n<li>box-shadow: 10px 10px 100px yellow;</li>\n</ul>\n",
            "tags": [
                "前端",
                "css",
                "前端"
            ]
        },
        {
            "id": "https://youhuamao.github.io/2022/08/29/front/css%E7%AC%94%E8%AE%B0/%E9%80%89%E6%8B%A9%E5%99%A8/",
            "url": "https://youhuamao.github.io/2022/08/29/front/css%E7%AC%94%E8%AE%B0/%E9%80%89%E6%8B%A9%E5%99%A8/",
            "title": "css选择器",
            "date_published": "2022-08-28T16:00:00.000Z",
            "content_html": "<p>选择器 ：选择页面上的某一个或者某一类元素</p>\n<h1 id=\"基本选择器\"><a class=\"anchor\" href=\"#基本选择器\">#</a> 基本选择器</h1>\n<h2 id=\"标签选择器-选择一类标签\"><a class=\"anchor\" href=\"#标签选择器-选择一类标签\">#</a> 标签选择器 （选择一类标签）</h2>\n<figure class=\"highlight html\"><figcaption data-lang=\"HTML\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>style</span><span class=\"token punctuation\">></span></span><span class=\"token style\"><span class=\"token language-css\"></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>    <span class=\"token comment\">/* 标签选择器，会选择到页面 1: 所有的这个标签的元素 */</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>        <span class=\"token selector\">h1</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>            <span class=\"token property\">color</span><span class=\"token punctuation\">:</span> #a13d30<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>            <span class=\"token property\">background</span><span class=\"token punctuation\">:</span> #3cbda6<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>            <span class=\"token property\">border-radius</span><span class=\"token punctuation\">:</span> 24px<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>        <span class=\"token selector\">p</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>            <span class=\"token property\">font-size</span><span class=\"token punctuation\">:</span> 80px<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>    </span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>style</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>h1</span><span class=\"token punctuation\">></span></span>我是标题<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>h1</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>p</span><span class=\"token punctuation\">></span></span>我是段落<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>p</span><span class=\"token punctuation\">></span></span></pre></td></tr></table></figure><h2 id=\"类选择器-选择所有class一样的标签可以跨标签\"><a class=\"anchor\" href=\"#类选择器-选择所有class一样的标签可以跨标签\">#</a> 类选择器 选择所有 class 一样的标签，可以跨标签</h2>\n<figure class=\"highlight html\"><figcaption data-lang=\"HTML\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>style</span><span class=\"token punctuation\">></span></span><span class=\"token style\"><span class=\"token language-css\"></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>        <span class=\"token comment\">/* 类选择器的格式 .class 的名称 &#123;&#125;</pre></td></tr><tr><td data-num=\"3\"></td><td><pre>            好处，可以多个标签归类，是同一个 class</pre></td></tr><tr><td data-num=\"4\"></td><td><pre>        */</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>            <span class=\"token selector\">.youhuamao</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>            <span class=\"token property\">color</span><span class=\"token punctuation\">:</span> #3748ff<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>            <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>            <span class=\"token selector\">.yizhiyu</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>            <span class=\"token property\">color</span><span class=\"token punctuation\">:</span> #a24fff<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>            <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>        </span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>style</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>h1</span> <span class=\"token attr-name\">class</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>yizhiyu<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>我是标题<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>h1</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>h1</span> <span class=\"token attr-name\">class</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>youhuamao<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>我是标题<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>h1</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>h1</span> <span class=\"token attr-name\">class</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>youhuamao<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>我是标题<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>h1</span><span class=\"token punctuation\">></span></span></pre></td></tr></table></figure><h2 id=\"id选择器-全局唯一\"><a class=\"anchor\" href=\"#id选择器-全局唯一\">#</a> id 选择器 （全局唯一）</h2>\n<figure class=\"highlight html\"><figcaption data-lang=\"HTML\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>style</span><span class=\"token punctuation\">></span></span><span class=\"token style\"><span class=\"token language-css\"></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>      <span class=\"token comment\">/* id 选择器：id 必须保证全局唯一</pre></td></tr><tr><td data-num=\"3\"></td><td><pre>          #id 名称 &#123;&#125;</pre></td></tr><tr><td data-num=\"4\"></td><td><pre>          优先级不是就近原则：</pre></td></tr><tr><td data-num=\"5\"></td><td><pre>          id 选择器 > class 选择器 > 标签选择器</pre></td></tr><tr><td data-num=\"6\"></td><td><pre>      */</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>          <span class=\"token selector\">#yizhiyu</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>          <span class=\"token property\">color</span><span class=\"token punctuation\">:</span> #3748ff<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>          <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>      </span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>style</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>      <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>h1</span> <span class=\"token attr-name\">class</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>yizhiyu<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>我是标题<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>h1</span><span class=\"token punctuation\">></span></span></pre></td></tr></table></figure><h1 id=\"层次选择器\"><a class=\"anchor\" href=\"#层次选择器\">#</a> 层次选择器</h1>\n<h2 id=\"后代选择器-选择该内容内所有该标签内容\"><a class=\"anchor\" href=\"#后代选择器-选择该内容内所有该标签内容\">#</a> 后代选择器 (选择该内容内所有该标签内容)</h2>\n<figure class=\"highlight css\"><figcaption data-lang=\"CSS\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\">/* 后代选则器 */</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>        <span class=\"token selector\">body p</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>        <span class=\"token property\">background</span><span class=\"token punctuation\">:</span> red<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><h2 id=\"子选择器-该内容后一代\"><a class=\"anchor\" href=\"#子选择器-该内容后一代\">#</a> 子选择器 （该内容后一代）</h2>\n<figure class=\"highlight css\"><figcaption data-lang=\"CSS\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\">/* 子选择器 */</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>        <span class=\"token selector\">body>p</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>        <span class=\"token property\">background</span><span class=\"token punctuation\">:</span> #3cbda6<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><h2 id=\"相邻兄弟选择器-具有该属性且同类标签\"><a class=\"anchor\" href=\"#相邻兄弟选择器-具有该属性且同类标签\">#</a> 相邻兄弟选择器 （具有该属性且同类标签）</h2>\n<figure class=\"highlight css\"><figcaption data-lang=\"CSS\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\">/* 相邻弟选择器：只有一个， 相邻 (向下) */</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>        <span class=\"token selector\">.active + p</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>        <span class=\"token property\">background</span><span class=\"token punctuation\">:</span> #a13d30<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>        &lt;p class=<span class=\"token string\">\"active\"</span>>我是标题&lt;/p></pre></td></tr></table></figure><h2 id=\"通用选择器\"><a class=\"anchor\" href=\"#通用选择器\">#</a> 通用选择器</h2>\n<figure class=\"highlight css\"><figcaption data-lang=\"CSS\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\">/* 通用兄弟选则器，当前选中元素的向下的所有兄弟，不包括自己 */</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>        <span class=\"token selector\">.active~p</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>        <span class=\"token property\">background</span><span class=\"token punctuation\">:</span> #a13d30<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>        &lt;p class=<span class=\"token string\">\"active\"</span>>我是标题&lt;/p></pre></td></tr></table></figure><h1 id=\"结构伪类选择器\"><a class=\"anchor\" href=\"#结构伪类选择器\">#</a> 结构伪类选择器</h1>\n<figure class=\"highlight css\"><figcaption data-lang=\"CSS\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>&lt;style></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token comment\">/*uL 的第一个子元素 */</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token selector\">ul li:first- child</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token property\">background</span><span class=\"token punctuation\">:</span> #02ff00<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token comment\">/*uL 的最后一个子元素 */</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token selector\">ul li : last- child</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token property\">background</span><span class=\"token punctuation\">:</span> #ff4832<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre><span class=\"token comment\">/*</pre></td></tr><tr><td data-num=\"11\"></td><td><pre>选择当前 p 元素的父级元素，选中父级元素的第二个， 并且是当前元素才生效（标签一样）!</pre></td></tr><tr><td data-num=\"12\"></td><td><pre>*/</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre><span class=\"token selector\">p:nth-chiLd(2)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre><span class=\"token property\">background</span><span class=\"token punctuation\">:</span> #2700ff<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre><span class=\"token comment\">/*</pre></td></tr><tr><td data-num=\"17\"></td><td><pre>选择当前 p 元素的父级元素，选中父级元素的该类型第二个 </pre></td></tr><tr><td data-num=\"18\"></td><td><pre>*/</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre><span class=\"token selector\">p: nth-of-type(2)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre><span class=\"token property\">background</span><span class=\"token punctuation\">:</span> yellow<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>&lt;/style></pre></td></tr><tr><td data-num=\"23\"></td><td><pre></pre></td></tr><tr><td data-num=\"24\"></td><td><pre></pre></td></tr><tr><td data-num=\"25\"></td><td><pre>&lt;body></pre></td></tr><tr><td data-num=\"26\"></td><td><pre>    &lt;p>p1&lt;/p></pre></td></tr><tr><td data-num=\"27\"></td><td><pre>    &lt;p>p2&lt;/p></pre></td></tr><tr><td data-num=\"28\"></td><td><pre>    &lt;p>p3&lt;/p></pre></td></tr><tr><td data-num=\"29\"></td><td><pre>    &lt;ul></pre></td></tr><tr><td data-num=\"30\"></td><td><pre>        &lt;li>1i1&lt;/li></pre></td></tr><tr><td data-num=\"31\"></td><td><pre>        &lt;li>1i2&lt;/li></pre></td></tr><tr><td data-num=\"32\"></td><td><pre>        &lt;li>1i3&lt;/li></pre></td></tr><tr><td data-num=\"33\"></td><td><pre>    &lt;/ul></pre></td></tr><tr><td data-num=\"34\"></td><td><pre>&lt;/body></pre></td></tr></table></figure><h1 id=\"属性选择器匹配可用正则\"><a class=\"anchor\" href=\"#属性选择器匹配可用正则\">#</a> 属性选择器 (匹配可用正则)</h1>\n<figure class=\"highlight html\"><figcaption data-lang=\"HTML\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>存在id属性的元素 a[]&#123;&#125;</pre></td></tr><tr><td data-num=\"2\"></td><td><pre>a[id=first]&#123;</pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    background: #02ff00;</pre></td></tr><tr><td data-num=\"4\"></td><td><pre>&#125;</pre></td></tr><tr><td data-num=\"5\"></td><td><pre></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>class中有links的元素</pre></td></tr><tr><td data-num=\"7\"></td><td><pre>a[class*=\"links\"]&#123;</pre></td></tr><tr><td data-num=\"8\"></td><td><pre>    background: #02ff00;</pre></td></tr><tr><td data-num=\"9\"></td><td><pre>&#125;</pre></td></tr><tr><td data-num=\"10\"></td><td><pre></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>选中href中以http开头的元素</pre></td></tr><tr><td data-num=\"12\"></td><td><pre>a[href^=http]&#123;</pre></td></tr><tr><td data-num=\"13\"></td><td><pre>    background: #02ff00;</pre></td></tr><tr><td data-num=\"14\"></td><td><pre>&#125;</pre></td></tr><tr><td data-num=\"15\"></td><td><pre></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>选中href中以pdf开头的元素</pre></td></tr><tr><td data-num=\"17\"></td><td><pre>a[href$=http]&#123;</pre></td></tr><tr><td data-num=\"18\"></td><td><pre>    background: #02ff00;</pre></td></tr><tr><td data-num=\"19\"></td><td><pre>&#125;</pre></td></tr><tr><td data-num=\"20\"></td><td><pre></pre></td></tr><tr><td data-num=\"21\"></td><td><pre></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>p</span> <span class=\"token attr-name\">class</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>demo<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>a</span> <span class=\"token attr-name\">href</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>http://www.baidu.com<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">class</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>links item first<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">id</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>first<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>1<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>a</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>a</span> <span class=\"token attr-name\">href</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>http://blog.kuangstudy.com<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">class</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>links item active<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">target</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>_blank<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">title</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>test<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>2<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>a</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre>        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>a</span> <span class=\"token attr-name\">href</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>images/123.html<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">class</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>links item<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>3<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>a</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre>        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>a</span> <span class=\"token attr-name\">href</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>images/123.png<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">class</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>links item<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>4<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>a</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre>        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>a</span> <span class=\"token attr-name\">href</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>images/123.jpg<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">class</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>links item<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>5<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>a</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre>        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>a</span> <span class=\"token attr-name\">href</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>abc<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">class</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>links item<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>6<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>a</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"29\"></td><td><pre>        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>a</span> <span class=\"token attr-name\">href</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>/a.pdf<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">class</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>links item<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>7<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>a</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"30\"></td><td><pre>        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>a</span> <span class=\"token attr-name\">href</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>/abc.pdf<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">class</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>links item<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>8<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>a</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"31\"></td><td><pre>        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>a</span> <span class=\"token attr-name\">href</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>abc.doc<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">class</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>links item<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>9<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>a</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"32\"></td><td><pre>        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>a</span> <span class=\"token attr-name\">href</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>abcd.doc<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">class</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>links item last<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>10<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>a</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"33\"></td><td><pre>    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>p</span><span class=\"token punctuation\">></span></span></pre></td></tr></table></figure>",
            "tags": [
                "前端",
                "css",
                "前端"
            ]
        },
        {
            "id": "https://youhuamao.github.io/2022/08/29/front/css%E7%AC%94%E8%AE%B0/%E7%BE%8E%E5%8C%96%E7%BD%91%E9%A1%B5%E5%85%83%E7%B4%A0/",
            "url": "https://youhuamao.github.io/2022/08/29/front/css%E7%AC%94%E8%AE%B0/%E7%BE%8E%E5%8C%96%E7%BD%91%E9%A1%B5%E5%85%83%E7%B4%A0/",
            "title": "美化网页元素",
            "date_published": "2022-08-28T16:00:00.000Z",
            "content_html": "<h1 id=\"字体样式\"><a class=\"anchor\" href=\"#字体样式\">#</a> 字体样式</h1>\n<ul>\n<li>font-family: 字体</li>\n<li>font-size: 字体大小</li>\n<li>font-weight: 字体粗细</li>\n<li>color: 颜色</li>\n</ul>\n<h1 id=\"文本样式\"><a class=\"anchor\" href=\"#文本样式\">#</a> 文本样式</h1>\n<ul>\n<li>text-align  : center  排版，居中</li>\n<li>text-indent ：2em；段落首行缩进</li>\n<li>height: 300px; 块高。line-height :300px; 行高。行高和块的高度一致，就可以上下居中</li>\n<li>text-decoration: underline; 下划线</li>\n<li>text-decoration: line-through; 中划线</li>\n<li>text-decoration: overline; 上划线</li>\n<li>text-decoration: none; 超链接去下划线</li>\n<li>vertical-align: middle 文字图片居中对齐（要有参照物）</li>\n</ul>\n<figure class=\"highlight html\"><figcaption data-lang=\"HTML\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>style</span><span class=\"token punctuation\">></span></span><span class=\"token style\"><span class=\"token language-css\"></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>    <span class=\"token selector\">img, span</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>        <span class=\"token property\">Vertical-align</span><span class=\"token punctuation\">:</span> middle <span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre></span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>style</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>&lt; img src=\"images/a.png\" alt=\"\"></pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>span</span><span class=\"token punctuation\">></span></span>asdasdajsldjalksdjalksd<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>span</span><span class=\"token punctuation\">></span></span></pre></td></tr></table></figure><h1 id=\"文本阴影\"><a class=\"anchor\" href=\"#文本阴影\">#</a> 文本阴影</h1>\n<ul>\n<li>text-shadow: 阴影颜色， 水平偏移，垂直偏移，阴影半径</li>\n</ul>\n<figure class=\"highlight html\"><figcaption data-lang=\"HTML\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>style</span><span class=\"token punctuation\">></span></span><span class=\"token style\"><span class=\"token language-css\"></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token selector\">#price</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token property\">text-shadow</span><span class=\"token punctuation\">:</span> #3cc7f5 10px - 10px 2px<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre></span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>style</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>p</span> <span class=\"token attr-name\">id</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>price<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>99<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>p</span><span class=\"token punctuation\">></span></span></pre></td></tr></table></figure><h1 id=\"超伪链接\"><a class=\"anchor\" href=\"#超伪链接\">#</a> 超伪链接</h1>\n<figure class=\"highlight html\"><figcaption data-lang=\"HTML\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>默认的颜色</pre></td></tr><tr><td data-num=\"2\"></td><td><pre>a&#123;</pre></td></tr><tr><td data-num=\"3\"></td><td><pre>text-decoration: none;</pre></td></tr><tr><td data-num=\"4\"></td><td><pre>color: #000;</pre></td></tr><tr><td data-num=\"5\"></td><td><pre></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>鼠标悬浮的状态</pre></td></tr><tr><td data-num=\"7\"></td><td><pre>a:hover&#123;</pre></td></tr><tr><td data-num=\"8\"></td><td><pre>color: orange;</pre></td></tr><tr><td data-num=\"9\"></td><td><pre>font-size: 50px;</pre></td></tr><tr><td data-num=\"10\"></td><td><pre>&#125;</pre></td></tr><tr><td data-num=\"11\"></td><td><pre></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>鼠标按住未释放的状态</pre></td></tr><tr><td data-num=\"13\"></td><td><pre>a: active&#123;</pre></td></tr><tr><td data-num=\"14\"></td><td><pre>color:green;</pre></td></tr><tr><td data-num=\"15\"></td><td><pre>&#125;</pre></td></tr></table></figure><h1 id=\"列表美化\"><a class=\"anchor\" href=\"#列表美化\">#</a> 列表美化</h1>\n<figure class=\"highlight html\"><figcaption data-lang=\"HTML\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>uL li</pre></td></tr><tr><td data-num=\"2\"></td><td><pre>List-style:</pre></td></tr><tr><td data-num=\"3\"></td><td><pre>none去掉原点</pre></td></tr><tr><td data-num=\"4\"></td><td><pre>circle空心圆</pre></td></tr><tr><td data-num=\"5\"></td><td><pre>decimal数字</pre></td></tr><tr><td data-num=\"6\"></td><td><pre>square正方形</pre></td></tr></table></figure><h1 id=\"背景图像应用\"><a class=\"anchor\" href=\"#背景图像应用\">#</a> 背景图像应用</h1>\n<figure class=\"highlight html\"><figcaption data-lang=\"HTML\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>background-image: ur1(\" images/tx.jpg\");  #默认是全部平铺的</pre></td></tr><tr><td data-num=\"2\"></td><td><pre></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>background-repeat: repeat-x; #沿x轴铺</pre></td></tr><tr><td data-num=\"4\"></td><td><pre></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>background-repeat: repeat-y; #沿y轴铺</pre></td></tr><tr><td data-num=\"6\"></td><td><pre></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>background-repeat: no-repeat; #不平铺</pre></td></tr><tr><td data-num=\"8\"></td><td><pre></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>颜色，图片，图片位置，平铺方式</pre></td></tr><tr><td data-num=\"10\"></td><td><pre>background: red ur1(\". ./images/d.gif\") 270px 10px no-repeat;</pre></td></tr><tr><td data-num=\"11\"></td><td><pre></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>渐变色 ：角度 当前颜色 最后颜色</pre></td></tr><tr><td data-num=\"13\"></td><td><pre>background- image: linear-gradient(19deg, #21D4FD 0%, #B721FF 100%);</pre></td></tr></table></figure>",
            "tags": [
                "前端",
                "css",
                "前端"
            ]
        },
        {
            "id": "https://youhuamao.github.io/2022/08/28/front/css%E7%AC%94%E8%AE%B0/%E5%BF%AB%E9%80%9F%E5%BC%95%E5%85%A5/",
            "url": "https://youhuamao.github.io/2022/08/28/front/css%E7%AC%94%E8%AE%B0/%E5%BF%AB%E9%80%9F%E5%BC%95%E5%85%A5/",
            "title": "css快速引入",
            "date_published": "2022-08-27T16:00:00.000Z",
            "content_html": "<h1 id=\"快速入门\"><a class=\"anchor\" href=\"#快速入门\">#</a> 快速入门</h1>\n<figure class=\"highlight html\"><figcaption data-lang=\"HTML\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token doctype\"><span class=\"token punctuation\">&lt;!</span><span class=\"token doctype-tag\">DOCTYPE</span> <span class=\"token name\">html</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>html</span> <span class=\"token attr-name\">lang</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>en<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>head</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>meta</span> <span class=\"token attr-name\">charset</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>UTF-8<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>title</span><span class=\"token punctuation\">></span></span>Title<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>title</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>    <span class=\"token comment\">&lt;!-- 规范，&lt;style> 可以编写 css 的代码 ，没一个声明， 最好使用分号结尾</pre></td></tr><tr><td data-num=\"7\"></td><td><pre>    语法:</pre></td></tr><tr><td data-num=\"8\"></td><td><pre>        选择器 &#123;</pre></td></tr><tr><td data-num=\"9\"></td><td><pre>            声明 1;</pre></td></tr><tr><td data-num=\"10\"></td><td><pre>            声明 2;</pre></td></tr><tr><td data-num=\"11\"></td><td><pre>            声明 3;</pre></td></tr><tr><td data-num=\"12\"></td><td><pre>        &#125;</pre></td></tr><tr><td data-num=\"13\"></td><td><pre>    --></span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>style</span><span class=\"token punctuation\">></span></span><span class=\"token style\"><span class=\"token language-css\"></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>        <span class=\"token selector\">h1</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>            <span class=\"token property\">color</span><span class=\"token punctuation\">:</span> red<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>    </span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>style</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre></pre></td></tr><tr><td data-num=\"20\"></td><td><pre><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>head</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>body</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre></pre></td></tr><tr><td data-num=\"23\"></td><td><pre><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>h1</span><span class=\"token punctuation\">></span></span>我是标题<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>h1</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre></pre></td></tr><tr><td data-num=\"25\"></td><td><pre><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>body</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>html</span><span class=\"token punctuation\">></span></span></pre></td></tr></table></figure><p>效果等同于</p>\n<figure class=\"highlight html\"><figcaption data-lang=\"HTML\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token doctype\"><span class=\"token punctuation\">&lt;!</span><span class=\"token doctype-tag\">DOCTYPE</span> <span class=\"token name\">html</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>html</span> <span class=\"token attr-name\">lang</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>en<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>head</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>meta</span> <span class=\"token attr-name\">charset</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>UTF-8<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>title</span><span class=\"token punctuation\">></span></span>Title<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>title</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>link</span> <span class=\"token attr-name\">rel</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>stylesheet<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">href</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>css/css.css<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>head</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>body</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre></pre></td></tr><tr><td data-num=\"11\"></td><td><pre><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>h1</span><span class=\"token punctuation\">></span></span>我是标题<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>h1</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre></pre></td></tr><tr><td data-num=\"13\"></td><td><pre><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>body</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>html</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>css.css</pre></td></tr><tr><td data-num=\"17\"></td><td><pre>h1&#123;</pre></td></tr><tr><td data-num=\"18\"></td><td><pre>    color: red;</pre></td></tr><tr><td data-num=\"19\"></td><td><pre>&#125;</pre></td></tr></table></figure><h1 id=\"css的优势\"><a class=\"anchor\" href=\"#css的优势\">#</a> css 的优势</h1>\n<ul>\n<li>内容和表现分离</li>\n<li>网页结构表现统一，可以实现复用</li>\n<li>样式十分的丰富</li>\n<li>建议使用独立于 html 的 css 文件</li>\n<li>利用 SEO, 容易被搜索引擎收录！</li>\n</ul>\n<h1 id=\"css四种导入方式\"><a class=\"anchor\" href=\"#css四种导入方式\">#</a> css 四种导入方式</h1>\n<ul>\n<li>\n<p>行内样式：在标签元素中，编写一个 style 属性，街写伴式即可<br />\n &lt;h1 style=&quot;color:red&quot;&gt; 我是标题 &lt;/h1&gt;</p>\n</li>\n<li>\n<p>内部样式：<br />\n&lt;style&gt;<br />\nh1{<br />\ncolor: red;<br />\n}<br />\n&lt;/sty1e&gt;</p>\n</li>\n<li>\n<p>外部样式（链接式）：链接外部的<br />\n &lt;link rel=&quot;stylesheet&quot; href=&quot;css/css.css&quot;&gt;</p>\n</li>\n<li>\n<p>外部样式（导入式）<br />\n&lt;style&gt;<br />\n@import url(&quot;css/css.css&quot;);<br />\n&lt;/sty1e&gt;</p>\n</li>\n</ul>\n",
            "tags": [
                "前端",
                "css",
                "前端"
            ]
        }
    ]
}